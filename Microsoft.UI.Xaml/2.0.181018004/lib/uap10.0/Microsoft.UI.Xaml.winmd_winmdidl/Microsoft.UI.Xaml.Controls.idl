//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Microsoft.UI.Xaml.Controls.Primitives.idl";
import "Windows.ApplicationModel.Contacts.idl";
import "Windows.ApplicationModel.DataTransfer.idl";
import "Windows.UI.idl";
import "Windows.UI.Text.idl";
import "Windows.UI.Xaml.idl";
import "Windows.UI.Xaml.Automation.Peers.idl";
import "Windows.UI.Xaml.Automation.Provider.idl";
import "Windows.UI.Xaml.Controls.idl";
import "Windows.UI.Xaml.Controls.Primitives.idl";
import "Windows.UI.Xaml.Input.idl";
import "Windows.UI.Xaml.Media.idl";
import "Windows.UI.Xaml.Media.Animation.idl";

// Forward Declare
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                namespace Primitives
                {
                    runtimeclass ColorSpectrum;
                }
            }
        }
    }
}
namespace Windows
{
    namespace ApplicationModel
    {
        namespace Contacts
        {
            runtimeclass Contact;
        }
    }
}
namespace Windows
{
    namespace ApplicationModel
    {
        namespace DataTransfer
        {
            runtimeclass DataPackage;

            typedef enum DataPackageOperation DataPackageOperation;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        runtimeclass Deferral;

        runtimeclass Uri;
    }
}
namespace Windows
{
    namespace UI
    {
        typedef struct Color Color;
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Text
        {
            typedef enum FontStyle FontStyle;

            typedef struct FontWeight FontWeight;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Automation
            {
                namespace Provider
                {
                    interface IExpandCollapseProvider;

                    interface IInvokeProvider;

                    interface IToggleProvider;
                }
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                runtimeclass AutoSuggestBox;

                runtimeclass DataTemplateSelector;

                interface ICommandBarElement;

                runtimeclass IconElement;

                runtimeclass MenuFlyoutItemBase;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                namespace Primitives
                {
                    runtimeclass FlyoutBase;
                }
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                runtimeclass StyleSelector;

                typedef enum Symbol Symbol;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            runtimeclass DataTemplate;

            runtimeclass DependencyObject;

            runtimeclass DependencyProperty;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Input
            {
                interface ICommand;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Media
            {
                namespace Animation
                {
                    runtimeclass NavigationTransitionInfo;

                    runtimeclass TransitionCollection;
                }
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Media
            {
                runtimeclass Brush;

                runtimeclass FontFamily;

                runtimeclass Geometry;

                runtimeclass ImageSource;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            runtimeclass Style;

            typedef struct Thickness Thickness;

            runtimeclass UIElement;

            typedef enum Visibility Visibility;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                typedef enum ColorPickerHsvChannel ColorPickerHsvChannel;

                typedef enum ColorSpectrumComponents ColorSpectrumComponents;

                typedef enum ColorSpectrumShape ColorSpectrumShape;

                typedef enum NavigationViewBackButtonVisible NavigationViewBackButtonVisible;

                typedef enum NavigationViewDisplayMode NavigationViewDisplayMode;

                typedef enum NavigationViewOverflowLabelMode NavigationViewOverflowLabelMode;

                typedef enum NavigationViewPaneDisplayMode NavigationViewPaneDisplayMode;

                typedef enum NavigationViewSelectionFollowsFocus NavigationViewSelectionFollowsFocus;

                typedef enum NavigationViewShoulderNavigationEnabled NavigationViewShoulderNavigationEnabled;

                typedef enum ParallaxSourceOffsetKind ParallaxSourceOffsetKind;

                typedef enum RefreshPullDirection RefreshPullDirection;

                typedef enum RefreshVisualizerOrientation RefreshVisualizerOrientation;

                typedef enum RefreshVisualizerState RefreshVisualizerState;

                typedef enum SwipeBehaviorOnInvoked SwipeBehaviorOnInvoked;

                typedef enum SwipeMode SwipeMode;

                typedef enum TreeViewSelectionMode TreeViewSelectionMode;

                interface IBitmapIconSource;

                interface IBitmapIconSourceFactory;

                interface IBitmapIconSourceStatics;

                interface IColorChangedEventArgs;

                interface IColorPicker;

                interface IColorPickerFactory;

                interface IColorPickerStatics;

                interface ICommandBarFlyout;

                interface ICommandBarFlyoutFactory;

                interface IDropDownButton;

                interface IDropDownButtonAutomationPeer;

                interface IDropDownButtonAutomationPeerFactory;

                interface IDropDownButtonFactory;

                interface IFontIconSource;

                interface IFontIconSourceFactory;

                interface IFontIconSourceStatics;

                interface IIconSource;

                interface IIconSourceFactory;

                interface IIconSourceStatics;

                interface IMenuBar;

                interface IMenuBarFactory;

                interface IMenuBarItem;

                interface IMenuBarItemFactory;

                interface IMenuBarItemFlyout;

                interface IMenuBarItemFlyoutFactory;

                interface IMenuBarItemStatics;

                interface IMenuBarStatics;

                interface INavigationView;

                interface INavigationViewBackRequestedEventArgs;

                interface INavigationViewDisplayModeChangedEventArgs;

                interface INavigationViewFactory;

                interface INavigationViewItem;

                interface INavigationViewItemBase;

                interface INavigationViewItemBaseFactory;

                interface INavigationViewItemFactory;

                interface INavigationViewItemHeader;

                interface INavigationViewItemHeaderFactory;

                interface INavigationViewItemInvokedEventArgs;

                interface INavigationViewItemSeparator;

                interface INavigationViewItemSeparatorFactory;

                interface INavigationViewItemStatics;

                interface INavigationViewList;

                interface INavigationViewListFactory;

                interface INavigationViewPaneClosingEventArgs;

                interface INavigationViewSelectionChangedEventArgs;

                interface INavigationViewStatics;

                interface INavigationViewTemplateSettings;

                interface INavigationViewTemplateSettingsFactory;

                interface INavigationViewTemplateSettingsStatics;

                interface IParallaxView;

                interface IParallaxViewFactory;

                interface IParallaxViewStatics;

                interface IPathIconSource;

                interface IPathIconSourceFactory;

                interface IPathIconSourceStatics;

                interface IPersonPicture;

                interface IPersonPictureFactory;

                interface IPersonPictureStatics;

                interface IRatingControl;

                interface IRatingControlFactory;

                interface IRatingControlStatics;

                interface IRatingItemFontInfo;

                interface IRatingItemFontInfoFactory;

                interface IRatingItemFontInfoStatics;

                interface IRatingItemImageInfo;

                interface IRatingItemImageInfoFactory;

                interface IRatingItemImageInfoStatics;

                interface IRatingItemInfo;

                interface IRatingItemInfoFactory;

                interface IRefreshContainer;

                interface IRefreshContainerFactory;

                interface IRefreshContainerStatics;

                interface IRefreshInteractionRatioChangedEventArgs;

                interface IRefreshRequestedEventArgs;

                interface IRefreshStateChangedEventArgs;

                interface IRefreshVisualizer;

                interface IRefreshVisualizerFactory;

                interface IRefreshVisualizerStatics;

                interface ISplitButton;

                interface ISplitButtonAutomationPeer;

                interface ISplitButtonAutomationPeerFactory;

                interface ISplitButtonClickEventArgs;

                interface ISplitButtonFactory;

                interface ISplitButtonStatics;

                interface ISwipeControl;

                interface ISwipeControlFactory;

                interface ISwipeControlStatics;

                interface ISwipeItem;

                interface ISwipeItemFactory;

                interface ISwipeItemInvokedEventArgs;

                interface ISwipeItemStatics;

                interface ISwipeItems;

                interface ISwipeItemsFactory;

                interface ISwipeItemsStatics;

                interface ISymbolIconSource;

                interface ISymbolIconSourceFactory;

                interface ISymbolIconSourceStatics;

                interface ITextCommandBarFlyout;

                interface ITextCommandBarFlyoutFactory;

                interface IToggleSplitButton;

                interface IToggleSplitButtonAutomationPeer;

                interface IToggleSplitButtonAutomationPeerFactory;

                interface IToggleSplitButtonFactory;

                interface IToggleSplitButtonIsCheckedChangedEventArgs;

                interface ITreeView;

                interface ITreeViewCollapsedEventArgs;

                interface ITreeViewDragItemsCompletedEventArgs;

                interface ITreeViewDragItemsStartingEventArgs;

                interface ITreeViewExpandingEventArgs;

                interface ITreeViewFactory;

                interface ITreeViewItem;

                interface ITreeViewItemFactory;

                interface ITreeViewItemInvokedEventArgs;

                interface ITreeViewItemStatics;

                interface ITreeViewItemTemplateSettings;

                interface ITreeViewItemTemplateSettingsFactory;

                interface ITreeViewItemTemplateSettingsStatics;

                interface ITreeViewList;

                interface ITreeViewListFactory;

                interface ITreeViewNode;

                interface ITreeViewNodeFactory;

                interface ITreeViewNodeStatics;

                interface ITreeViewStatics;

                interface IXamlControlsResources;

                interface IXamlControlsResourcesStatics;

                runtimeclass BitmapIconSource;

                runtimeclass ColorChangedEventArgs;

                runtimeclass ColorPicker;

                runtimeclass CommandBarFlyout;

                runtimeclass DropDownButton;

                runtimeclass DropDownButtonAutomationPeer;

                runtimeclass FontIconSource;

                runtimeclass IconSource;

                runtimeclass MenuBar;

                runtimeclass MenuBarItem;

                runtimeclass MenuBarItemFlyout;

                runtimeclass NavigationView;

                runtimeclass NavigationViewBackRequestedEventArgs;

                runtimeclass NavigationViewDisplayModeChangedEventArgs;

                runtimeclass NavigationViewItem;

                runtimeclass NavigationViewItemBase;

                runtimeclass NavigationViewItemHeader;

                runtimeclass NavigationViewItemInvokedEventArgs;

                runtimeclass NavigationViewItemSeparator;

                runtimeclass NavigationViewList;

                runtimeclass NavigationViewPaneClosingEventArgs;

                runtimeclass NavigationViewSelectionChangedEventArgs;

                runtimeclass NavigationViewTemplateSettings;

                runtimeclass ParallaxView;

                runtimeclass PathIconSource;

                runtimeclass PersonPicture;

                runtimeclass RatingControl;

                runtimeclass RatingItemFontInfo;

                runtimeclass RatingItemImageInfo;

                runtimeclass RatingItemInfo;

                runtimeclass RefreshContainer;

                runtimeclass RefreshInteractionRatioChangedEventArgs;

                runtimeclass RefreshRequestedEventArgs;

                runtimeclass RefreshStateChangedEventArgs;

                runtimeclass RefreshVisualizer;

                runtimeclass SplitButton;

                runtimeclass SplitButtonAutomationPeer;

                runtimeclass SplitButtonClickEventArgs;

                runtimeclass SwipeControl;

                runtimeclass SwipeItem;

                runtimeclass SwipeItemInvokedEventArgs;

                runtimeclass SwipeItems;

                runtimeclass SymbolIconSource;

                runtimeclass TextCommandBarFlyout;

                runtimeclass ToggleSplitButton;

                runtimeclass ToggleSplitButtonAutomationPeer;

                runtimeclass ToggleSplitButtonIsCheckedChangedEventArgs;

                runtimeclass TreeView;

                runtimeclass TreeViewCollapsedEventArgs;

                runtimeclass TreeViewDragItemsCompletedEventArgs;

                runtimeclass TreeViewDragItemsStartingEventArgs;

                runtimeclass TreeViewExpandingEventArgs;

                runtimeclass TreeViewItem;

                runtimeclass TreeViewItemInvokedEventArgs;

                runtimeclass TreeViewItemTemplateSettings;

                runtimeclass TreeViewList;

                runtimeclass TreeViewNode;

                runtimeclass XamlControlsResources;
            }
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                declare
                {
                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Controls.MenuBarItem*>;

                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Controls.SwipeItem*>;

                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Controls.TreeViewNode*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Controls.MenuBarItem*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Controls.SwipeItem*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Controls.TreeViewNode*>;

                    interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Controls.MenuBarItem*>;

                    interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Controls.SwipeItem*>;

                    interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Controls.TreeViewNode*>;

                    interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.MenuBarItem*>;

                    interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.SwipeItem*>;

                    interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.TreeViewNode*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ColorPicker*, Microsoft.UI.Xaml.Controls.ColorChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, Microsoft.UI.Xaml.Controls.NavigationViewBackRequestedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, Microsoft.UI.Xaml.Controls.NavigationViewDisplayModeChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, Microsoft.UI.Xaml.Controls.NavigationViewPaneClosingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum*, Microsoft.UI.Xaml.Controls.ColorChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.RatingControl*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.RefreshContainer*, Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.RefreshVisualizer*, Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.RefreshVisualizer*, Microsoft.UI.Xaml.Controls.RefreshStateChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.SplitButton*, Microsoft.UI.Xaml.Controls.SplitButtonClickEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.SwipeItem*, Microsoft.UI.Xaml.Controls.SwipeItemInvokedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ToggleSplitButton*, Microsoft.UI.Xaml.Controls.ToggleSplitButtonIsCheckedChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TreeView*, Microsoft.UI.Xaml.Controls.TreeViewCollapsedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TreeView*, Microsoft.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TreeView*, Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TreeView*, Microsoft.UI.Xaml.Controls.TreeViewExpandingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TreeView*, Microsoft.UI.Xaml.Controls.TreeViewItemInvokedEventArgs*>;
                }
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                [version(0x00000001)]
                enum ColorPickerHsvChannel
                {
                    Hue        = 0,
                    Saturation = 1,
                    Value      = 2,
                    Alpha      = 3
                };

                [version(0x00000001)]
                enum ColorSpectrumComponents
                {
                    HueValue        = 0,
                    ValueHue        = 1,
                    HueSaturation   = 2,
                    SaturationHue   = 3,
                    SaturationValue = 4,
                    ValueSaturation = 5
                };

                [version(0x00000001)]
                enum ColorSpectrumShape
                {
                    Box  = 0,
                    Ring = 1
                };

                [version(0x00000001)]
                enum NavigationViewBackButtonVisible
                {
                    Collapsed = 0,
                    Visible   = 1,
                    Auto      = 2
                };

                [version(0x00000001)]
                enum NavigationViewDisplayMode
                {
                    Minimal  = 0,
                    Compact  = 1,
                    Expanded = 2
                };

                [version(0x00000001)]
                enum NavigationViewOverflowLabelMode
                {
                    MoreLabel = 0,
                    NoLabel   = 1
                };

                [version(0x00000001)]
                enum NavigationViewPaneDisplayMode
                {
                    Auto        = 0,
                    Left        = 1,
                    Top         = 2,
                    LeftCompact = 3,
                    LeftMinimal = 4
                };

                [version(0x00000001)]
                enum NavigationViewSelectionFollowsFocus
                {
                    Disabled = 0,
                    Enabled  = 1
                };

                [version(0x00000001)]
                enum NavigationViewShoulderNavigationEnabled
                {
                    WhenSelectionFollowsFocus = 0,
                    Always                    = 1,
                    Never                     = 2
                };

                [version(0x00000001)]
                enum ParallaxSourceOffsetKind
                {
                    Absolute = 0,
                    Relative = 1
                };

                [version(0x00000001)]
                enum RefreshPullDirection
                {
                    LeftToRight = 0,
                    TopToBottom = 1,
                    RightToLeft = 2,
                    BottomToTop = 3
                };

                [version(0x00000001)]
                enum RefreshVisualizerOrientation
                {
                    Auto                             = 0,
                    Normal                           = 1,
                    Rotate90DegreesCounterclockwise  = 2,
                    Rotate270DegreesCounterclockwise = 3
                };

                [version(0x00000001)]
                enum RefreshVisualizerState
                {
                    Idle        = 0,
                    Peeking     = 1,
                    Interacting = 2,
                    Pending     = 3,
                    Refreshing  = 4
                };

                [version(0x00000001)]
                enum SwipeBehaviorOnInvoked
                {
                    Auto       = 0,
                    Close      = 1,
                    RemainOpen = 2
                };

                [version(0x00000001)]
                enum SwipeMode
                {
                    Reveal  = 0,
                    Execute = 1
                };

                [version(0x00000001)]
                enum TreeViewSelectionMode
                {
                    None     = 0,
                    Single   = 1,
                    Multiple = 2
                };

                [exclusiveto(Microsoft.UI.Xaml.Controls.BitmapIconSource)]
                [uuid(A6B6CCCC-EA8F-53CA-831F-2ABE85CD6D8C)]
                [version(0x00000001)]
                interface IBitmapIconSource : IInspectable
                {
                    [propget] HRESULT UriSource([out] [retval] Windows.Foundation.Uri** value);
                    [propput] HRESULT UriSource([in] Windows.Foundation.Uri* value);
                    [propget] HRESULT ShowAsMonochrome([out] [retval] boolean* value);
                    [propput] HRESULT ShowAsMonochrome([in] boolean value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.BitmapIconSource)]
                [uuid(7D484C14-F5F6-5E39-B4E4-B6108D2EE095)]
                [version(0x00000001)]
                interface IBitmapIconSourceFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.BitmapIconSource** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.BitmapIconSource)]
                [uuid(7E603B56-5580-5A9B-900D-0564162A5F37)]
                [version(0x00000001)]
                interface IBitmapIconSourceStatics : IInspectable
                {
                    [propget] HRESULT UriSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ShowAsMonochromeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.ColorChangedEventArgs)]
                [uuid(148D57A2-B1CB-5F5D-B6B5-512805D71761)]
                [version(0x00000001)]
                interface IColorChangedEventArgs : IInspectable
                {
                    [propget] HRESULT OldColor([out] [retval] Windows.UI.Color* value);
                    [propget] HRESULT NewColor([out] [retval] Windows.UI.Color* value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.ColorPicker)]
                [uuid(AE72B24B-F93F-5A19-8CE4-A18B73C3356D)]
                [version(0x00000001)]
                interface IColorPicker : IInspectable
                {
                    [propget] HRESULT Color([out] [retval] Windows.UI.Color* value);
                    [propput] HRESULT Color([in] Windows.UI.Color value);
                    [propget] HRESULT PreviousColor([out] [retval] Windows.Foundation.IReference<Windows.UI.Color>** value);
                    [propput] HRESULT PreviousColor([in] Windows.Foundation.IReference<Windows.UI.Color>* value);
                    [propget] HRESULT IsAlphaEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsAlphaEnabled([in] boolean value);
                    [propget] HRESULT IsColorSpectrumVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsColorSpectrumVisible([in] boolean value);
                    [propget] HRESULT IsColorPreviewVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsColorPreviewVisible([in] boolean value);
                    [propget] HRESULT IsColorSliderVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsColorSliderVisible([in] boolean value);
                    [propget] HRESULT IsAlphaSliderVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsAlphaSliderVisible([in] boolean value);
                    [propget] HRESULT IsMoreButtonVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsMoreButtonVisible([in] boolean value);
                    [propget] HRESULT IsColorChannelTextInputVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsColorChannelTextInputVisible([in] boolean value);
                    [propget] HRESULT IsAlphaTextInputVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsAlphaTextInputVisible([in] boolean value);
                    [propget] HRESULT IsHexInputVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsHexInputVisible([in] boolean value);
                    [propget] HRESULT MinHue([out] [retval] INT32* value);
                    [propput] HRESULT MinHue([in] INT32 value);
                    [propget] HRESULT MaxHue([out] [retval] INT32* value);
                    [propput] HRESULT MaxHue([in] INT32 value);
                    [propget] HRESULT MinSaturation([out] [retval] INT32* value);
                    [propput] HRESULT MinSaturation([in] INT32 value);
                    [propget] HRESULT MaxSaturation([out] [retval] INT32* value);
                    [propput] HRESULT MaxSaturation([in] INT32 value);
                    [propget] HRESULT MinValue([out] [retval] INT32* value);
                    [propput] HRESULT MinValue([in] INT32 value);
                    [propget] HRESULT MaxValue([out] [retval] INT32* value);
                    [propput] HRESULT MaxValue([in] INT32 value);
                    [propget] HRESULT ColorSpectrumShape([out] [retval] Microsoft.UI.Xaml.Controls.ColorSpectrumShape* value);
                    [propput] HRESULT ColorSpectrumShape([in] Microsoft.UI.Xaml.Controls.ColorSpectrumShape value);
                    [propget] HRESULT ColorSpectrumComponents([out] [retval] Microsoft.UI.Xaml.Controls.ColorSpectrumComponents* value);
                    [propput] HRESULT ColorSpectrumComponents([in] Microsoft.UI.Xaml.Controls.ColorSpectrumComponents value);
                    [eventadd] HRESULT ColorChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ColorPicker*, Microsoft.UI.Xaml.Controls.ColorChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ColorChanged([in] EventRegistrationToken token);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.ColorPicker)]
                [uuid(72C350E2-0A20-5B9B-AC54-633B97D7FFDE)]
                [version(0x00000001)]
                interface IColorPickerFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.ColorPicker** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.ColorPicker)]
                [uuid(AF1E1848-98DE-569E-A84B-1C88BBD0D479)]
                [version(0x00000001)]
                interface IColorPickerStatics : IInspectable
                {
                    [propget] HRESULT ColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PreviousColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsAlphaEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsColorSpectrumVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsColorPreviewVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsColorSliderVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsAlphaSliderVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsMoreButtonVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsColorChannelTextInputVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsAlphaTextInputVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsHexInputVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinHueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxHueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinSaturationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxSaturationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ColorSpectrumShapeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ColorSpectrumComponentsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.CommandBarFlyout)]
                [uuid(F8F5B8BC-8D67-5FA9-8FB0-C2C3311E1B7C)]
                [version(0x00000001)]
                interface ICommandBarFlyout : IInspectable
                {
                    [propget] HRESULT PrimaryCommands([out] [retval] Windows.Foundation.Collections.IObservableVector<Windows.UI.Xaml.Controls.ICommandBarElement*>** value);
                    [propget] HRESULT SecondaryCommands([out] [retval] Windows.Foundation.Collections.IObservableVector<Windows.UI.Xaml.Controls.ICommandBarElement*>** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.CommandBarFlyout)]
                [uuid(A194DBE6-4311-5BD2-A8EB-B49C4733A33C)]
                [version(0x00000001)]
                interface ICommandBarFlyoutFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.CommandBarFlyout** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.DropDownButton)]
                [uuid(C1E9FA91-4F95-5796-8A7B-3B7594A12C69)]
                [version(0x00000001)]
                interface IDropDownButton : IInspectable
                {
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.DropDownButtonAutomationPeer)]
                [uuid(B547A7D2-DA6B-5BBB-BAAC-3A44CEC338B6)]
                [version(0x00000001)]
                interface IDropDownButtonAutomationPeer : IInspectable
                {
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.DropDownButtonAutomationPeer)]
                [uuid(B4FA11C9-0468-50EC-A7E2-20F7E26E714D)]
                [version(0x00000001)]
                interface IDropDownButtonAutomationPeerFactory : IInspectable
                {
                    HRESULT CreateInstance([in] Microsoft.UI.Xaml.Controls.DropDownButton* owner, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.DropDownButtonAutomationPeer** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.DropDownButton)]
                [uuid(7CF3E13B-668D-57E7-B5D6-F5CA3DBC80BD)]
                [version(0x00000001)]
                interface IDropDownButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.DropDownButton** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.FontIconSource)]
                [uuid(DDF34704-C53D-571C-890F-3B5E305DDC69)]
                [version(0x00000001)]
                interface IFontIconSource : IInspectable
                {
                    [propget] HRESULT Glyph([out] [retval] HSTRING* value);
                    [propput] HRESULT Glyph([in] HSTRING value);
                    [propget] HRESULT FontSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT FontSize([in] DOUBLE value);
                    [propget] HRESULT FontFamily([out] [retval] Windows.UI.Xaml.Media.FontFamily** value);
                    [propput] HRESULT FontFamily([in] Windows.UI.Xaml.Media.FontFamily* value);
                    [propget] HRESULT FontWeight([out] [retval] Windows.UI.Text.FontWeight* value);
                    [propput] HRESULT FontWeight([in] Windows.UI.Text.FontWeight value);
                    [propget] HRESULT FontStyle([out] [retval] Windows.UI.Text.FontStyle* value);
                    [propput] HRESULT FontStyle([in] Windows.UI.Text.FontStyle value);
                    [propget] HRESULT IsTextScaleFactorEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsTextScaleFactorEnabled([in] boolean value);
                    [propget] HRESULT MirroredWhenRightToLeft([out] [retval] boolean* value);
                    [propput] HRESULT MirroredWhenRightToLeft([in] boolean value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.FontIconSource)]
                [uuid(BB40EEEE-64D1-5133-B1D6-AE13C21B6678)]
                [version(0x00000001)]
                interface IFontIconSourceFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.FontIconSource** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.FontIconSource)]
                [uuid(12C4716A-31C1-510A-9526-01AB3E2B0738)]
                [version(0x00000001)]
                interface IFontIconSourceStatics : IInspectable
                {
                    [propget] HRESULT GlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontFamilyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontWeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTextScaleFactorEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MirroredWhenRightToLeftProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.IconSource)]
                [uuid(2A5D0830-2080-5272-A74A-2B5350C52A33)]
                [version(0x00000001)]
                interface IIconSource : IInspectable
                {
                    [propget] HRESULT Foreground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Foreground([in] Windows.UI.Xaml.Media.Brush* value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.IconSource)]
                [uuid(E8BC19C6-9A64-5C54-9338-E18E076875BF)]
                [version(0x00000001)]
                interface IIconSourceFactory : IInspectable
                {
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.IconSource)]
                [uuid(4DA53AB6-8945-562B-A1A5-FAB5E2E8D575)]
                [version(0x00000001)]
                interface IIconSourceStatics : IInspectable
                {
                    [propget] HRESULT ForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.MenuBar)]
                [uuid(BA97F337-8F1E-5141-B53F-E77A8BA3EBBD)]
                [version(0x00000001)]
                interface IMenuBar : IInspectable
                {
                    [propget] HRESULT Items([out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.MenuBarItem*>** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.MenuBar)]
                [uuid(76AA8759-04EE-5A4C-B98C-D03742D47CDB)]
                [version(0x00000001)]
                interface IMenuBarFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.MenuBar** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.MenuBarItem)]
                [uuid(9CAA4261-3A0C-5A59-8CFE-391744C3F815)]
                [version(0x00000001)]
                interface IMenuBarItem : IInspectable
                {
                    [propget] HRESULT Title([out] [retval] HSTRING* value);
                    [propput] HRESULT Title([in] HSTRING value);
                    [propget] HRESULT Items([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.MenuFlyoutItemBase*>** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.MenuBarItem)]
                [uuid(87D02172-83CB-5459-940F-173F7501B300)]
                [version(0x00000001)]
                interface IMenuBarItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.MenuBarItem** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.MenuBarItemFlyout)]
                [uuid(A412AE4F-C3BC-5679-8D5F-865EB97E83CD)]
                [version(0x00000001)]
                interface IMenuBarItemFlyout : IInspectable
                {
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.MenuBarItemFlyout)]
                [uuid(F895123E-ED54-5A96-8418-F35E48505D43)]
                [version(0x00000001)]
                interface IMenuBarItemFlyoutFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.MenuBarItemFlyout** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.MenuBarItem)]
                [uuid(6282E536-1CFC-5D26-9F6D-8F334DAF997E)]
                [version(0x00000001)]
                interface IMenuBarItemStatics : IInspectable
                {
                    [propget] HRESULT TitleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.MenuBar)]
                [uuid(10CB12F4-DCE0-514F-ACD1-0D53FA0275D1)]
                [version(0x00000001)]
                interface IMenuBarStatics : IInspectable
                {
                    [propget] HRESULT ItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationView)]
                [uuid(D95BDC4D-C72D-540A-AFAC-788327B46545)]
                [version(0x00000001)]
                interface INavigationView : IInspectable
                {
                    [propget] HRESULT IsPaneOpen([out] [retval] boolean* value);
                    [propput] HRESULT IsPaneOpen([in] boolean value);
                    [propget] HRESULT CompactModeThresholdWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT CompactModeThresholdWidth([in] DOUBLE value);
                    [propget] HRESULT ExpandedModeThresholdWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT ExpandedModeThresholdWidth([in] DOUBLE value);
                    [propget] HRESULT PaneFooter([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT PaneFooter([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT DisplayMode([out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode* value);
                    [propget] HRESULT IsSettingsVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsSettingsVisible([in] boolean value);
                    [propget] HRESULT IsPaneToggleButtonVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsPaneToggleButtonVisible([in] boolean value);
                    [propget] HRESULT AlwaysShowHeader([out] [retval] boolean* value);
                    [propput] HRESULT AlwaysShowHeader([in] boolean value);
                    [propget] HRESULT CompactPaneLength([out] [retval] DOUBLE* value);
                    [propput] HRESULT CompactPaneLength([in] DOUBLE value);
                    [propget] HRESULT OpenPaneLength([out] [retval] DOUBLE* value);
                    [propput] HRESULT OpenPaneLength([in] DOUBLE value);
                    [propget] HRESULT PaneToggleButtonStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT PaneToggleButtonStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT SelectedItem([out] [retval] IInspectable** value);
                    [propput] HRESULT SelectedItem([in] IInspectable* value);
                    [propget] HRESULT MenuItems([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                    [propget] HRESULT MenuItemsSource([out] [retval] IInspectable** value);
                    [propput] HRESULT MenuItemsSource([in] IInspectable* value);
                    [propget] HRESULT SettingsItem([out] [retval] IInspectable** value);
                    [propget] HRESULT AutoSuggestBox([out] [retval] Windows.UI.Xaml.Controls.AutoSuggestBox** value);
                    [propput] HRESULT AutoSuggestBox([in] Windows.UI.Xaml.Controls.AutoSuggestBox* value);
                    [propget] HRESULT MenuItemTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT MenuItemTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT MenuItemTemplateSelector([out] [retval] Windows.UI.Xaml.Controls.DataTemplateSelector** value);
                    [propput] HRESULT MenuItemTemplateSelector([in] Windows.UI.Xaml.Controls.DataTemplateSelector* value);
                    [propget] HRESULT MenuItemContainerStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT MenuItemContainerStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT MenuItemContainerStyleSelector([out] [retval] Windows.UI.Xaml.Controls.StyleSelector** value);
                    [propput] HRESULT MenuItemContainerStyleSelector([in] Windows.UI.Xaml.Controls.StyleSelector* value);
                    HRESULT MenuItemFromContainer([in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] IInspectable** result);
                    HRESULT ContainerFromMenuItem([in] IInspectable* item, [out] [retval] Windows.UI.Xaml.DependencyObject** result);
                    [eventadd] HRESULT SelectionChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectionChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT ItemInvoked([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ItemInvoked([in] EventRegistrationToken token);
                    [eventadd] HRESULT DisplayModeChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, Microsoft.UI.Xaml.Controls.NavigationViewDisplayModeChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DisplayModeChanged([in] EventRegistrationToken token);
                    [propget] HRESULT IsBackButtonVisible([out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible* value);
                    [propput] HRESULT IsBackButtonVisible([in] Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible value);
                    [propget] HRESULT IsBackEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsBackEnabled([in] boolean value);
                    [propget] HRESULT PaneTitle([out] [retval] HSTRING* value);
                    [propput] HRESULT PaneTitle([in] HSTRING value);
                    [eventadd] HRESULT BackRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, Microsoft.UI.Xaml.Controls.NavigationViewBackRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT BackRequested([in] EventRegistrationToken token);
                    [eventadd] HRESULT PaneClosed([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PaneClosed([in] EventRegistrationToken token);
                    [eventadd] HRESULT PaneClosing([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, Microsoft.UI.Xaml.Controls.NavigationViewPaneClosingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PaneClosing([in] EventRegistrationToken token);
                    [eventadd] HRESULT PaneOpened([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PaneOpened([in] EventRegistrationToken token);
                    [eventadd] HRESULT PaneOpening([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PaneOpening([in] EventRegistrationToken token);
                    [propget] HRESULT PaneDisplayMode([out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode* value);
                    [propput] HRESULT PaneDisplayMode([in] Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode value);
                    [propget] HRESULT PaneHeader([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT PaneHeader([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT PaneCustomContent([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT PaneCustomContent([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT ContentOverlay([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT ContentOverlay([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT IsPaneVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsPaneVisible([in] boolean value);
                    [propget] HRESULT SelectionFollowsFocus([out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus* value);
                    [propput] HRESULT SelectionFollowsFocus([in] Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus value);
                    [propget] HRESULT TemplateSettings([out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings** value);
                    [propget] HRESULT ShoulderNavigationEnabled([out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled* value);
                    [propput] HRESULT ShoulderNavigationEnabled([in] Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled value);
                    [propget] HRESULT OverflowLabelMode([out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode* value);
                    [propput] HRESULT OverflowLabelMode([in] Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewBackRequestedEventArgs)]
                [uuid(AE752207-BD1B-5AFA-A872-E9BBAEEA0EDE)]
                [version(0x00000001)]
                interface INavigationViewBackRequestedEventArgs : IInspectable
                {
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewDisplayModeChangedEventArgs)]
                [uuid(58DCF1EA-9E56-522C-B3F8-34BD55ECACA4)]
                [version(0x00000001)]
                interface INavigationViewDisplayModeChangedEventArgs : IInspectable
                {
                    [propget] HRESULT DisplayMode([out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode* value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationView)]
                [uuid(FFEA1ADA-9232-5507-A320-ED2FADBE6127)]
                [version(0x00000001)]
                interface INavigationViewFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.NavigationView** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItem)]
                [uuid(30DA6E7A-AF6D-51AE-9770-E22C43DB54F5)]
                [version(0x00000001)]
                interface INavigationViewItem : IInspectable
                {
                    [propget] HRESULT Icon([out] [retval] Windows.UI.Xaml.Controls.IconElement** value);
                    [propput] HRESULT Icon([in] Windows.UI.Xaml.Controls.IconElement* value);
                    [propget] HRESULT CompactPaneLength([out] [retval] DOUBLE* value);
                    [propget] HRESULT SelectsOnInvoked([out] [retval] boolean* value);
                    [propput] HRESULT SelectsOnInvoked([in] boolean value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItemBase)]
                [uuid(33586494-AF48-513F-BE4D-F645E8C89005)]
                [version(0x00000001)]
                interface INavigationViewItemBase : IInspectable
                {
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItemBase)]
                [uuid(31B9D7B1-7C38-5916-99C6-C71F6B012B1B)]
                [version(0x00000001)]
                interface INavigationViewItemBaseFactory : IInspectable
                {
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItem)]
                [uuid(DE60A001-9385-5535-80E1-2B68F4BFDE26)]
                [version(0x00000001)]
                interface INavigationViewItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewItem** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItemHeader)]
                [uuid(432BC062-45BC-57EF-A2D3-11851A56A882)]
                [version(0x00000001)]
                interface INavigationViewItemHeader : IInspectable
                {
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItemHeader)]
                [uuid(6A5447CD-2918-5FE3-899B-93D6961285E6)]
                [version(0x00000001)]
                interface INavigationViewItemHeaderFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewItemHeader** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs)]
                [uuid(6D5E3674-A3E7-5FEB-8548-6F10D9256D2A)]
                [version(0x00000001)]
                interface INavigationViewItemInvokedEventArgs : IInspectable
                {
                    [propget] HRESULT InvokedItem([out] [retval] IInspectable** value);
                    [propget] HRESULT IsSettingsInvoked([out] [retval] boolean* value);
                    [propget] HRESULT InvokedItemContainer([out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewItemBase** value);
                    [propget] HRESULT RecommendedNavigationTransitionInfo([out] [retval] Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItemSeparator)]
                [uuid(E3C35630-1D5F-5689-A0CB-8794485CAACF)]
                [version(0x00000001)]
                interface INavigationViewItemSeparator : IInspectable
                {
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItemSeparator)]
                [uuid(181266A1-D4F8-5AF7-810B-AEE8A1D452ED)]
                [version(0x00000001)]
                interface INavigationViewItemSeparatorFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewItemSeparator** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItem)]
                [uuid(35A0DF71-C966-57CE-8681-4640E4F71AFF)]
                [version(0x00000001)]
                interface INavigationViewItemStatics : IInspectable
                {
                    [propget] HRESULT IconProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CompactPaneLengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectsOnInvokedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewList)]
                [uuid(C5B3C903-40EF-573E-84B9-1DB279EC5EF2)]
                [version(0x00000001)]
                interface INavigationViewList : IInspectable
                {
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewList)]
                [uuid(35AFB786-C86B-5960-9F47-27028C074F9A)]
                [version(0x00000001)]
                interface INavigationViewListFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewList** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewPaneClosingEventArgs)]
                [uuid(E8643304-6DB4-5AF5-BAC2-62733CA037DA)]
                [version(0x00000001)]
                interface INavigationViewPaneClosingEventArgs : IInspectable
                {
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs)]
                [uuid(1D0863EE-CB87-5BA2-AA8F-981A93DD48B2)]
                [version(0x00000001)]
                interface INavigationViewSelectionChangedEventArgs : IInspectable
                {
                    [propget] HRESULT SelectedItem([out] [retval] IInspectable** value);
                    [propget] HRESULT IsSettingsSelected([out] [retval] boolean* value);
                    [propget] HRESULT SelectedItemContainer([out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewItemBase** value);
                    [propget] HRESULT RecommendedNavigationTransitionInfo([out] [retval] Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationView)]
                [uuid(B6495F19-EB64-5811-9B7B-4C3E075399DC)]
                [version(0x00000001)]
                interface INavigationViewStatics : IInspectable
                {
                    [propget] HRESULT IsPaneOpenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CompactModeThresholdWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ExpandedModeThresholdWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaneFooterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DisplayModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsSettingsVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsPaneToggleButtonVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AlwaysShowHeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CompactPaneLengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OpenPaneLengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaneToggleButtonStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MenuItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MenuItemsSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedItemProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SettingsItemProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AutoSuggestBoxProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MenuItemTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MenuItemTemplateSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MenuItemContainerStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MenuItemContainerStyleSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsBackButtonVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsBackEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaneTitleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaneDisplayModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaneHeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaneCustomContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentOverlayProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsPaneVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectionFollowsFocusProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TemplateSettingsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ShoulderNavigationEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OverflowLabelModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings)]
                [uuid(CE777BA7-5036-5DC5-8A1F-953424F28E40)]
                [version(0x00000001)]
                interface INavigationViewTemplateSettings : IInspectable
                {
                    [propget] HRESULT TopPadding([out] [retval] DOUBLE* value);
                    [propget] HRESULT OverflowButtonVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT PaneToggleButtonVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT BackButtonVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT TopPaneVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT LeftPaneVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT SingleSelectionFollowsFocus([out] [retval] boolean* value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings)]
                [uuid(34FF6C94-6465-5F3E-B0A5-4F1EEA48E743)]
                [version(0x00000001)]
                interface INavigationViewTemplateSettingsFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings)]
                [uuid(450DF7FB-2E2F-5917-893B-67E366F46FAD)]
                [version(0x00000001)]
                interface INavigationViewTemplateSettingsStatics : IInspectable
                {
                    [propget] HRESULT TopPaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OverflowButtonVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaneToggleButtonVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BackButtonVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TopPaneVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LeftPaneVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SingleSelectionFollowsFocusProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.ParallaxView)]
                [uuid(692E1E53-4231-5DE0-ACB4-859E494DAB73)]
                [version(0x00000001)]
                interface IParallaxView : IInspectable
                {
                    [propget] HRESULT Child([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Child([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT HorizontalShift([out] [retval] DOUBLE* value);
                    [propput] HRESULT HorizontalShift([in] DOUBLE value);
                    [propget] HRESULT HorizontalSourceEndOffset([out] [retval] DOUBLE* value);
                    [propput] HRESULT HorizontalSourceEndOffset([in] DOUBLE value);
                    [propget] HRESULT HorizontalSourceOffsetKind([out] [retval] Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind* value);
                    [propput] HRESULT HorizontalSourceOffsetKind([in] Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind value);
                    [propget] HRESULT HorizontalSourceStartOffset([out] [retval] DOUBLE* value);
                    [propput] HRESULT HorizontalSourceStartOffset([in] DOUBLE value);
                    [propget] HRESULT IsHorizontalShiftClamped([out] [retval] boolean* value);
                    [propput] HRESULT IsHorizontalShiftClamped([in] boolean value);
                    [propget] HRESULT IsVerticalShiftClamped([out] [retval] boolean* value);
                    [propput] HRESULT IsVerticalShiftClamped([in] boolean value);
                    [propget] HRESULT MaxHorizontalShiftRatio([out] [retval] DOUBLE* value);
                    [propput] HRESULT MaxHorizontalShiftRatio([in] DOUBLE value);
                    [propget] HRESULT MaxVerticalShiftRatio([out] [retval] DOUBLE* value);
                    [propput] HRESULT MaxVerticalShiftRatio([in] DOUBLE value);
                    [propget] HRESULT Source([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Source([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT VerticalShift([out] [retval] DOUBLE* value);
                    [propput] HRESULT VerticalShift([in] DOUBLE value);
                    [propget] HRESULT VerticalSourceEndOffset([out] [retval] DOUBLE* value);
                    [propput] HRESULT VerticalSourceEndOffset([in] DOUBLE value);
                    [propget] HRESULT VerticalSourceOffsetKind([out] [retval] Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind* value);
                    [propput] HRESULT VerticalSourceOffsetKind([in] Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind value);
                    [propget] HRESULT VerticalSourceStartOffset([out] [retval] DOUBLE* value);
                    [propput] HRESULT VerticalSourceStartOffset([in] DOUBLE value);
                    HRESULT RefreshAutomaticHorizontalOffsets();
                    HRESULT RefreshAutomaticVerticalOffsets();
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.ParallaxView)]
                [uuid(61DC973D-C595-5261-A9B7-35F41042EB00)]
                [version(0x00000001)]
                interface IParallaxViewFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.ParallaxView** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.ParallaxView)]
                [uuid(B17A0882-E92E-5AA0-92D5-3DE69F0E6AA8)]
                [version(0x00000001)]
                interface IParallaxViewStatics : IInspectable
                {
                    [propget] HRESULT ChildProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalSourceEndOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalSourceOffsetKindProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalSourceStartOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxHorizontalShiftRatioProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalShiftProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsHorizontalShiftClampedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsVerticalShiftClampedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalSourceEndOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalSourceOffsetKindProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalSourceStartOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxVerticalShiftRatioProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalShiftProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.PathIconSource)]
                [uuid(3C89356E-0A21-5E5E-A2BA-D8837365143B)]
                [version(0x00000001)]
                interface IPathIconSource : IInspectable
                {
                    [propget] HRESULT Data([out] [retval] Windows.UI.Xaml.Media.Geometry** value);
                    [propput] HRESULT Data([in] Windows.UI.Xaml.Media.Geometry* value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.PathIconSource)]
                [uuid(9FEFE31E-5AB6-5394-A6EF-672F174D333B)]
                [version(0x00000001)]
                interface IPathIconSourceFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.PathIconSource** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.PathIconSource)]
                [uuid(1CA1C9F2-2E93-5877-B640-836142C2FAC0)]
                [version(0x00000001)]
                interface IPathIconSourceStatics : IInspectable
                {
                    [propget] HRESULT DataProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.PersonPicture)]
                [uuid(537ECA07-FEFF-5AC7-B68C-BF1BE081C2EF)]
                [version(0x00000001)]
                interface IPersonPicture : IInspectable
                {
                    [propget] HRESULT BadgeNumber([out] [retval] INT32* value);
                    [propput] HRESULT BadgeNumber([in] INT32 value);
                    [propget] HRESULT BadgeGlyph([out] [retval] HSTRING* value);
                    [propput] HRESULT BadgeGlyph([in] HSTRING value);
                    [propget] HRESULT BadgeImageSource([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT BadgeImageSource([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT BadgeText([out] [retval] HSTRING* value);
                    [propput] HRESULT BadgeText([in] HSTRING value);
                    [propget] HRESULT IsGroup([out] [retval] boolean* value);
                    [propput] HRESULT IsGroup([in] boolean value);
                    [propget] HRESULT Contact([out] [retval] Windows.ApplicationModel.Contacts.Contact** value);
                    [propput] HRESULT Contact([in] Windows.ApplicationModel.Contacts.Contact* value);
                    [propget] HRESULT DisplayName([out] [retval] HSTRING* value);
                    [propput] HRESULT DisplayName([in] HSTRING value);
                    [propget] HRESULT Initials([out] [retval] HSTRING* value);
                    [propput] HRESULT Initials([in] HSTRING value);
                    [propget] HRESULT PreferSmallImage([out] [retval] boolean* value);
                    [propput] HRESULT PreferSmallImage([in] boolean value);
                    [propget] HRESULT ProfilePicture([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT ProfilePicture([in] Windows.UI.Xaml.Media.ImageSource* value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.PersonPicture)]
                [uuid(7EC0794C-F2CC-5282-A89D-CD3BB765B71A)]
                [version(0x00000001)]
                interface IPersonPictureFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.PersonPicture** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.PersonPicture)]
                [uuid(D1AFCF40-B7BB-5873-9AB5-9EE6F065DD1E)]
                [version(0x00000001)]
                interface IPersonPictureStatics : IInspectable
                {
                    [propget] HRESULT BadgeNumberProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BadgeGlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BadgeImageSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BadgeTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsGroupProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContactProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DisplayNameProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT InitialsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PreferSmallImageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ProfilePictureProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.RatingControl)]
                [uuid(5488193B-EA4B-52C6-8544-C063219BCD90)]
                [version(0x00000001)]
                interface IRatingControl : IInspectable
                {
                    [propget] HRESULT Caption([out] [retval] HSTRING* value);
                    [propput] HRESULT Caption([in] HSTRING value);
                    [propget] HRESULT InitialSetValue([out] [retval] INT32* value);
                    [propput] HRESULT InitialSetValue([in] INT32 value);
                    [propget] HRESULT IsClearEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsClearEnabled([in] boolean value);
                    [propget] HRESULT IsReadOnly([out] [retval] boolean* value);
                    [propput] HRESULT IsReadOnly([in] boolean value);
                    [propget] HRESULT MaxRating([out] [retval] INT32* value);
                    [propput] HRESULT MaxRating([in] INT32 value);
                    [propget] HRESULT PlaceholderValue([out] [retval] DOUBLE* value);
                    [propput] HRESULT PlaceholderValue([in] DOUBLE value);
                    [propget] HRESULT ItemInfo([out] [retval] Microsoft.UI.Xaml.Controls.RatingItemInfo** value);
                    [propput] HRESULT ItemInfo([in] Microsoft.UI.Xaml.Controls.RatingItemInfo* value);
                    [propget] HRESULT Value([out] [retval] DOUBLE* value);
                    [propput] HRESULT Value([in] DOUBLE value);
                    [eventadd] HRESULT ValueChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.RatingControl*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ValueChanged([in] EventRegistrationToken token);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.RatingControl)]
                [uuid(A53B9B73-BFF9-548D-A294-AC63D819F78A)]
                [version(0x00000001)]
                interface IRatingControlFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.RatingControl** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.RatingControl)]
                [uuid(3752A048-F3F2-5EF6-878D-499572F0529B)]
                [version(0x00000001)]
                interface IRatingControlStatics : IInspectable
                {
                    [propget] HRESULT CaptionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT InitialSetValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsClearEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsReadOnlyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxRatingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaceholderValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemInfoProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.RatingItemFontInfo)]
                [uuid(995A16DC-3A0F-5727-9F38-52CFC8143654)]
                [version(0x00000001)]
                interface IRatingItemFontInfo : IInspectable
                {
                    [propget] HRESULT DisabledGlyph([out] [retval] HSTRING* value);
                    [propput] HRESULT DisabledGlyph([in] HSTRING value);
                    [propget] HRESULT Glyph([out] [retval] HSTRING* value);
                    [propput] HRESULT Glyph([in] HSTRING value);
                    [propget] HRESULT PointerOverGlyph([out] [retval] HSTRING* value);
                    [propput] HRESULT PointerOverGlyph([in] HSTRING value);
                    [propget] HRESULT PointerOverPlaceholderGlyph([out] [retval] HSTRING* value);
                    [propput] HRESULT PointerOverPlaceholderGlyph([in] HSTRING value);
                    [propget] HRESULT PlaceholderGlyph([out] [retval] HSTRING* value);
                    [propput] HRESULT PlaceholderGlyph([in] HSTRING value);
                    [propget] HRESULT UnsetGlyph([out] [retval] HSTRING* value);
                    [propput] HRESULT UnsetGlyph([in] HSTRING value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.RatingItemFontInfo)]
                [uuid(109C6541-706E-5FD7-BAAE-020B24899F61)]
                [version(0x00000001)]
                interface IRatingItemFontInfoFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.RatingItemFontInfo** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.RatingItemFontInfo)]
                [uuid(7C626902-A13F-5470-A522-BD5414DF8ED3)]
                [version(0x00000001)]
                interface IRatingItemFontInfoStatics : IInspectable
                {
                    [propget] HRESULT DisabledGlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT GlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaceholderGlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PointerOverGlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PointerOverPlaceholderGlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT UnsetGlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.RatingItemImageInfo)]
                [uuid(610268E4-AF6E-5C1C-8D0F-BB46C06D6782)]
                [version(0x00000001)]
                interface IRatingItemImageInfo : IInspectable
                {
                    [propget] HRESULT DisabledImage([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT DisabledImage([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT Image([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT Image([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT PlaceholderImage([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT PlaceholderImage([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT PointerOverImage([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT PointerOverImage([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT PointerOverPlaceholderImage([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT PointerOverPlaceholderImage([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT UnsetImage([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT UnsetImage([in] Windows.UI.Xaml.Media.ImageSource* value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.RatingItemImageInfo)]
                [uuid(4ACC8CAC-BCA8-5380-95E4-345C1BE256B2)]
                [version(0x00000001)]
                interface IRatingItemImageInfoFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.RatingItemImageInfo** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.RatingItemImageInfo)]
                [uuid(B8E6F05B-0AF5-5AA8-8E85-FD022D4C6908)]
                [version(0x00000001)]
                interface IRatingItemImageInfoStatics : IInspectable
                {
                    [propget] HRESULT DisabledImageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ImageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaceholderImageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PointerOverImageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PointerOverPlaceholderImageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT UnsetImageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.RatingItemInfo)]
                [uuid(801E924E-3613-55DD-8321-9EBABBED0B8A)]
                [version(0x00000001)]
                interface IRatingItemInfo : IInspectable
                {
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.RatingItemInfo)]
                [uuid(61F13480-CD0C-556A-B532-A0CF53E3CDA0)]
                [version(0x00000001)]
                interface IRatingItemInfoFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.RatingItemInfo** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.RefreshContainer)]
                [uuid(1C9778E8-A427-5F86-9D5E-02DB9B2C4093)]
                [version(0x00000001)]
                interface IRefreshContainer : IInspectable
                {
                    [propget] HRESULT Visualizer([out] [retval] Microsoft.UI.Xaml.Controls.RefreshVisualizer** value);
                    [propput] HRESULT Visualizer([in] Microsoft.UI.Xaml.Controls.RefreshVisualizer* value);
                    [propget] HRESULT PullDirection([out] [retval] Microsoft.UI.Xaml.Controls.RefreshPullDirection* value);
                    [propput] HRESULT PullDirection([in] Microsoft.UI.Xaml.Controls.RefreshPullDirection value);
                    [eventadd] HRESULT RefreshRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.RefreshContainer*, Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT RefreshRequested([in] EventRegistrationToken token);
                    HRESULT RequestRefresh();
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.RefreshContainer)]
                [uuid(5F228FA1-2EA2-52B5-B78A-0C133F86F020)]
                [version(0x00000001)]
                interface IRefreshContainerFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.RefreshContainer** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.RefreshContainer)]
                [uuid(1F2BC1C8-5C8F-5B46-8B0F-E006DB4EC6E1)]
                [version(0x00000001)]
                interface IRefreshContainerStatics : IInspectable
                {
                    [propget] HRESULT VisualizerProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PullDirectionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.RefreshInteractionRatioChangedEventArgs)]
                [uuid(790B70E0-F199-552B-B126-6CB45C2DE8F9)]
                [version(0x00000001)]
                interface IRefreshInteractionRatioChangedEventArgs : IInspectable
                {
                    [propget] HRESULT InteractionRatio([out] [retval] DOUBLE* value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs)]
                [uuid(ED97A956-6019-5329-9312-F885B5C774CD)]
                [version(0x00000001)]
                interface IRefreshRequestedEventArgs : IInspectable
                {
                    HRESULT GetDeferral([out] [retval] Windows.Foundation.Deferral** result);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.RefreshStateChangedEventArgs)]
                [uuid(7BE897CE-17C4-5FDF-B441-C6EF3301E0F6)]
                [version(0x00000001)]
                interface IRefreshStateChangedEventArgs : IInspectable
                {
                    [propget] HRESULT OldState([out] [retval] Microsoft.UI.Xaml.Controls.RefreshVisualizerState* value);
                    [propget] HRESULT NewState([out] [retval] Microsoft.UI.Xaml.Controls.RefreshVisualizerState* value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.RefreshVisualizer)]
                [uuid(A000AFD1-D2FC-5391-B421-EE5C975AC945)]
                [version(0x00000001)]
                interface IRefreshVisualizer : IInspectable
                {
                    HRESULT RequestRefresh();
                    [propget] HRESULT Orientation([out] [retval] Microsoft.UI.Xaml.Controls.RefreshVisualizerOrientation* value);
                    [propput] HRESULT Orientation([in] Microsoft.UI.Xaml.Controls.RefreshVisualizerOrientation value);
                    [propget] HRESULT Content([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Content([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT State([out] [retval] Microsoft.UI.Xaml.Controls.RefreshVisualizerState* value);
                    [eventadd] HRESULT RefreshRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.RefreshVisualizer*, Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT RefreshRequested([in] EventRegistrationToken token);
                    [eventadd] HRESULT RefreshStateChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.RefreshVisualizer*, Microsoft.UI.Xaml.Controls.RefreshStateChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT RefreshStateChanged([in] EventRegistrationToken token);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.RefreshVisualizer)]
                [uuid(9D6F2BF2-6628-582A-892B-68C2770C173C)]
                [version(0x00000001)]
                interface IRefreshVisualizerFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.RefreshVisualizer** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.RefreshVisualizer)]
                [uuid(7E9E32AB-3C39-58AC-9D0D-4648BE220BDC)]
                [version(0x00000001)]
                interface IRefreshVisualizerStatics : IInspectable
                {
                    [propget] HRESULT InfoProviderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.SplitButton)]
                [uuid(8B09006A-6241-594F-93E4-8BF051D7BA8F)]
                [version(0x00000001)]
                interface ISplitButton : IInspectable
                {
                    [propget] HRESULT Flyout([out] [retval] Windows.UI.Xaml.Controls.Primitives.FlyoutBase** value);
                    [propput] HRESULT Flyout([in] Windows.UI.Xaml.Controls.Primitives.FlyoutBase* value);
                    [propget] HRESULT Command([out] [retval] Windows.UI.Xaml.Input.ICommand** value);
                    [propput] HRESULT Command([in] Windows.UI.Xaml.Input.ICommand* value);
                    [propget] HRESULT CommandParameter([out] [retval] IInspectable** value);
                    [propput] HRESULT CommandParameter([in] IInspectable* value);
                    [eventadd] HRESULT Click([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.SplitButton*, Microsoft.UI.Xaml.Controls.SplitButtonClickEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Click([in] EventRegistrationToken token);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.SplitButtonAutomationPeer)]
                [uuid(19CD9B8A-EBFE-543D-A942-7A8E98E237F6)]
                [version(0x00000001)]
                interface ISplitButtonAutomationPeer : IInspectable
                {
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.SplitButtonAutomationPeer)]
                [uuid(8C87CF4E-B4DF-50A0-BF5C-07972EE07D28)]
                [version(0x00000001)]
                interface ISplitButtonAutomationPeerFactory : IInspectable
                {
                    HRESULT CreateInstance([in] Microsoft.UI.Xaml.Controls.SplitButton* owner, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.SplitButtonAutomationPeer** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.SplitButtonClickEventArgs)]
                [uuid(6AF896C2-E65A-5998-9C82-2AF8F3E0741F)]
                [version(0x00000001)]
                interface ISplitButtonClickEventArgs : IInspectable
                {
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.SplitButton)]
                [uuid(07510092-2612-55E7-981C-A536DDD4570E)]
                [version(0x00000001)]
                interface ISplitButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.SplitButton** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.SplitButton)]
                [uuid(7262C1E0-97CD-5561-B6E7-5E2ECEA46AC2)]
                [version(0x00000001)]
                interface ISplitButtonStatics : IInspectable
                {
                    [propget] HRESULT FlyoutProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CommandProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CommandParameterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.SwipeControl)]
                [uuid(337800FE-F51D-5F6B-9D35-E7F5DE10A97C)]
                [version(0x00000001)]
                interface ISwipeControl : IInspectable
                {
                    [propget] HRESULT LeftItems([out] [retval] Microsoft.UI.Xaml.Controls.SwipeItems** value);
                    [propput] HRESULT LeftItems([in] Microsoft.UI.Xaml.Controls.SwipeItems* value);
                    [propget] HRESULT RightItems([out] [retval] Microsoft.UI.Xaml.Controls.SwipeItems** value);
                    [propput] HRESULT RightItems([in] Microsoft.UI.Xaml.Controls.SwipeItems* value);
                    [propget] HRESULT TopItems([out] [retval] Microsoft.UI.Xaml.Controls.SwipeItems** value);
                    [propput] HRESULT TopItems([in] Microsoft.UI.Xaml.Controls.SwipeItems* value);
                    [propget] HRESULT BottomItems([out] [retval] Microsoft.UI.Xaml.Controls.SwipeItems** value);
                    [propput] HRESULT BottomItems([in] Microsoft.UI.Xaml.Controls.SwipeItems* value);
                    HRESULT Close();
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.SwipeControl)]
                [uuid(6E9213F4-30C1-56CA-9905-46AA1A83DFC1)]
                [version(0x00000001)]
                interface ISwipeControlFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.SwipeControl** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.SwipeControl)]
                [uuid(BE0EB518-40B4-5CED-8DFB-6CA018F1CACA)]
                [version(0x00000001)]
                interface ISwipeControlStatics : IInspectable
                {
                    [propget] HRESULT LeftItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RightItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TopItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BottomItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.SwipeItem)]
                [uuid(560FE6C5-109F-5866-B02E-31E4FA930ED0)]
                [version(0x00000001)]
                interface ISwipeItem : IInspectable
                {
                    [propget] HRESULT Text([out] [retval] HSTRING* value);
                    [propput] HRESULT Text([in] HSTRING value);
                    [propget] HRESULT IconSource([out] [retval] Microsoft.UI.Xaml.Controls.IconSource** value);
                    [propput] HRESULT IconSource([in] Microsoft.UI.Xaml.Controls.IconSource* value);
                    [propget] HRESULT Background([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Background([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT Foreground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Foreground([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT Command([out] [retval] Windows.UI.Xaml.Input.ICommand** value);
                    [propput] HRESULT Command([in] Windows.UI.Xaml.Input.ICommand* value);
                    [propget] HRESULT CommandParameter([out] [retval] IInspectable** value);
                    [propput] HRESULT CommandParameter([in] IInspectable* value);
                    [propget] HRESULT BehaviorOnInvoked([out] [retval] Microsoft.UI.Xaml.Controls.SwipeBehaviorOnInvoked* value);
                    [propput] HRESULT BehaviorOnInvoked([in] Microsoft.UI.Xaml.Controls.SwipeBehaviorOnInvoked value);
                    [eventadd] HRESULT Invoked([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.SwipeItem*, Microsoft.UI.Xaml.Controls.SwipeItemInvokedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Invoked([in] EventRegistrationToken token);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.SwipeItem)]
                [uuid(011513E1-1ADC-5A69-A74F-623FCC18A51C)]
                [version(0x00000001)]
                interface ISwipeItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.SwipeItem** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.SwipeItemInvokedEventArgs)]
                [uuid(7BF51C95-53A2-5A0D-BB32-2B4B1F7D2F20)]
                [version(0x00000001)]
                interface ISwipeItemInvokedEventArgs : IInspectable
                {
                    [propget] HRESULT SwipeControl([out] [retval] Microsoft.UI.Xaml.Controls.SwipeControl** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.SwipeItem)]
                [uuid(793256E1-27C7-5387-BB27-53D072723625)]
                [version(0x00000001)]
                interface ISwipeItemStatics : IInspectable
                {
                    [propget] HRESULT IconSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BackgroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CommandProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CommandParameterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BehaviorOnInvokedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.SwipeItems)]
                [uuid(40D3022B-C82B-5565-A4E4-AD9D7A66B1A9)]
                [version(0x00000001)]
                interface ISwipeItems : IInspectable
                {
                    [propget] HRESULT Mode([out] [retval] Microsoft.UI.Xaml.Controls.SwipeMode* value);
                    [propput] HRESULT Mode([in] Microsoft.UI.Xaml.Controls.SwipeMode value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.SwipeItems)]
                [uuid(9A5D7D77-39BD-5B81-AB4E-F44ACA6EDE3F)]
                [version(0x00000001)]
                interface ISwipeItemsFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.SwipeItems** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.SwipeItems)]
                [uuid(78D47697-EAF2-5652-9AFC-D713CA103488)]
                [version(0x00000001)]
                interface ISwipeItemsStatics : IInspectable
                {
                    [propget] HRESULT ModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.SymbolIconSource)]
                [uuid(1F8098D4-F3EA-5360-B0AA-8065BB7226AE)]
                [version(0x00000001)]
                interface ISymbolIconSource : IInspectable
                {
                    [propget] HRESULT Symbol([out] [retval] Windows.UI.Xaml.Controls.Symbol* value);
                    [propput] HRESULT Symbol([in] Windows.UI.Xaml.Controls.Symbol value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.SymbolIconSource)]
                [uuid(AFBF55FA-FF79-552A-A3A1-48E2EF17152A)]
                [version(0x00000001)]
                interface ISymbolIconSourceFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.SymbolIconSource** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.SymbolIconSource)]
                [uuid(967C25AF-2A94-5E50-A921-587D8FE81143)]
                [version(0x00000001)]
                interface ISymbolIconSourceStatics : IInspectable
                {
                    [propget] HRESULT SymbolProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.TextCommandBarFlyout)]
                [uuid(6D0F38A5-0EB3-5D73-8195-D2D89B76B0F7)]
                [version(0x00000001)]
                interface ITextCommandBarFlyout : IInspectable
                {
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.TextCommandBarFlyout)]
                [uuid(5C56A34F-621F-55F2-8D71-3E3A6E6906BD)]
                [version(0x00000001)]
                interface ITextCommandBarFlyoutFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.TextCommandBarFlyout** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.ToggleSplitButton)]
                [uuid(5C0F247B-BD00-5509-88A8-B09007AE22B0)]
                [version(0x00000001)]
                interface IToggleSplitButton : IInspectable
                {
                    [propget] HRESULT IsChecked([out] [retval] boolean* value);
                    [propput] HRESULT IsChecked([in] boolean value);
                    [eventadd] HRESULT IsCheckedChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ToggleSplitButton*, Microsoft.UI.Xaml.Controls.ToggleSplitButtonIsCheckedChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT IsCheckedChanged([in] EventRegistrationToken token);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.ToggleSplitButtonAutomationPeer)]
                [uuid(A5888C99-174C-5C22-A618-32EA86F42327)]
                [version(0x00000001)]
                interface IToggleSplitButtonAutomationPeer : IInspectable
                {
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.ToggleSplitButtonAutomationPeer)]
                [uuid(EBF3C917-E843-51D7-88F9-E73C0442CBB8)]
                [version(0x00000001)]
                interface IToggleSplitButtonAutomationPeerFactory : IInspectable
                {
                    HRESULT CreateInstance([in] Microsoft.UI.Xaml.Controls.ToggleSplitButton* owner, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.ToggleSplitButtonAutomationPeer** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.ToggleSplitButton)]
                [uuid(25459D02-0FFC-5C7C-AF56-F55AAD6DB5E7)]
                [version(0x00000001)]
                interface IToggleSplitButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.ToggleSplitButton** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.ToggleSplitButtonIsCheckedChangedEventArgs)]
                [uuid(6CAB1E15-C017-5760-828B-DAFC21D54EB2)]
                [version(0x00000001)]
                interface IToggleSplitButtonIsCheckedChangedEventArgs : IInspectable
                {
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeView)]
                [uuid(45794C76-9C29-527A-AF88-B2F0BB772BE4)]
                [version(0x00000001)]
                interface ITreeView : IInspectable
                {
                    [propget] HRESULT RootNodes([out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.TreeViewNode*>** value);
                    [propget] HRESULT SelectionMode([out] [retval] Microsoft.UI.Xaml.Controls.TreeViewSelectionMode* value);
                    [propput] HRESULT SelectionMode([in] Microsoft.UI.Xaml.Controls.TreeViewSelectionMode value);
                    [propget] HRESULT SelectedNodes([out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.TreeViewNode*>** value);
                    HRESULT Expand([in] Microsoft.UI.Xaml.Controls.TreeViewNode* value);
                    HRESULT Collapse([in] Microsoft.UI.Xaml.Controls.TreeViewNode* value);
                    HRESULT SelectAll();
                    [eventadd] HRESULT ItemInvoked([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TreeView*, Microsoft.UI.Xaml.Controls.TreeViewItemInvokedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ItemInvoked([in] EventRegistrationToken token);
                    [eventadd] HRESULT Expanding([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TreeView*, Microsoft.UI.Xaml.Controls.TreeViewExpandingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Expanding([in] EventRegistrationToken token);
                    [eventadd] HRESULT Collapsed([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TreeView*, Microsoft.UI.Xaml.Controls.TreeViewCollapsedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Collapsed([in] EventRegistrationToken token);
                    HRESULT NodeFromContainer([in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] Microsoft.UI.Xaml.Controls.TreeViewNode** result);
                    HRESULT ContainerFromNode([in] Microsoft.UI.Xaml.Controls.TreeViewNode* node, [out] [retval] Windows.UI.Xaml.DependencyObject** result);
                    HRESULT ItemFromContainer([in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] IInspectable** result);
                    HRESULT ContainerFromItem([in] IInspectable* item, [out] [retval] Windows.UI.Xaml.DependencyObject** result);
                    [propget] HRESULT CanDragItems([out] [retval] boolean* value);
                    [propput] HRESULT CanDragItems([in] boolean value);
                    [propget] HRESULT CanReorderItems([out] [retval] boolean* value);
                    [propput] HRESULT CanReorderItems([in] boolean value);
                    [propget] HRESULT ItemTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT ItemTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT ItemTemplateSelector([out] [retval] Windows.UI.Xaml.Controls.DataTemplateSelector** value);
                    [propput] HRESULT ItemTemplateSelector([in] Windows.UI.Xaml.Controls.DataTemplateSelector* value);
                    [propget] HRESULT ItemContainerStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT ItemContainerStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT ItemContainerStyleSelector([out] [retval] Windows.UI.Xaml.Controls.StyleSelector** value);
                    [propput] HRESULT ItemContainerStyleSelector([in] Windows.UI.Xaml.Controls.StyleSelector* value);
                    [propget] HRESULT ItemContainerTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT ItemContainerTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                    [propget] HRESULT ItemsSource([out] [retval] IInspectable** value);
                    [propput] HRESULT ItemsSource([in] IInspectable* value);
                    [eventadd] HRESULT DragItemsStarting([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TreeView*, Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DragItemsStarting([in] EventRegistrationToken token);
                    [eventadd] HRESULT DragItemsCompleted([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TreeView*, Microsoft.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DragItemsCompleted([in] EventRegistrationToken token);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewCollapsedEventArgs)]
                [uuid(8CF22168-D31E-5EE9-A909-B7E52085D35B)]
                [version(0x00000001)]
                interface ITreeViewCollapsedEventArgs : IInspectable
                {
                    [propget] HRESULT Node([out] [retval] Microsoft.UI.Xaml.Controls.TreeViewNode** value);
                    [propget] HRESULT Item([out] [retval] IInspectable** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs)]
                [uuid(E5B8547E-F839-55DB-9C26-2A95F57A60DC)]
                [version(0x00000001)]
                interface ITreeViewDragItemsCompletedEventArgs : IInspectable
                {
                    [propget] HRESULT DropResult([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackageOperation* value);
                    [propget] HRESULT Items([out] [retval] Windows.Foundation.Collections.IVectorView<IInspectable*>** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs)]
                [uuid(1B6C4FFC-CD32-5E06-B782-DF9F077546C7)]
                [version(0x00000001)]
                interface ITreeViewDragItemsStartingEventArgs : IInspectable
                {
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                    [propget] HRESULT Data([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackage** value);
                    [propget] HRESULT Items([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewExpandingEventArgs)]
                [uuid(165AF9D6-A4EB-577F-8D92-1A374926691A)]
                [version(0x00000001)]
                interface ITreeViewExpandingEventArgs : IInspectable
                {
                    [propget] HRESULT Node([out] [retval] Microsoft.UI.Xaml.Controls.TreeViewNode** value);
                    [propget] HRESULT Item([out] [retval] IInspectable** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeView)]
                [uuid(9C6220BE-F9EB-518A-B30E-7E41DE5EFDA9)]
                [version(0x00000001)]
                interface ITreeViewFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.TreeView** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewItem)]
                [uuid(CBAE6B02-8044-50E1-B67C-830040A5EFD8)]
                [version(0x00000001)]
                interface ITreeViewItem : IInspectable
                {
                    [propget] HRESULT GlyphOpacity([out] [retval] DOUBLE* value);
                    [propput] HRESULT GlyphOpacity([in] DOUBLE value);
                    [propget] HRESULT GlyphBrush([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT GlyphBrush([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT ExpandedGlyph([out] [retval] HSTRING* value);
                    [propput] HRESULT ExpandedGlyph([in] HSTRING value);
                    [propget] HRESULT CollapsedGlyph([out] [retval] HSTRING* value);
                    [propput] HRESULT CollapsedGlyph([in] HSTRING value);
                    [propget] HRESULT GlyphSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT GlyphSize([in] DOUBLE value);
                    [propget] HRESULT IsExpanded([out] [retval] boolean* value);
                    [propput] HRESULT IsExpanded([in] boolean value);
                    [propget] HRESULT TreeViewItemTemplateSettings([out] [retval] Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings** value);
                    [propget] HRESULT HasUnrealizedChildren([out] [retval] boolean* value);
                    [propput] HRESULT HasUnrealizedChildren([in] boolean value);
                    [propget] HRESULT ItemsSource([out] [retval] IInspectable** value);
                    [propput] HRESULT ItemsSource([in] IInspectable* value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewItem)]
                [uuid(878FD918-E77E-5BE8-8C8A-B79B27B08D9B)]
                [version(0x00000001)]
                interface ITreeViewItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.TreeViewItem** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewItemInvokedEventArgs)]
                [uuid(1A05853C-B101-542C-9A1E-775A044C4652)]
                [version(0x00000001)]
                interface ITreeViewItemInvokedEventArgs : IInspectable
                {
                    [propget] HRESULT InvokedItem([out] [retval] IInspectable** value);
                    [propput] HRESULT Handled([in] boolean value);
                    [propget] HRESULT Handled([out] [retval] boolean* value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewItem)]
                [uuid(B304730A-AA4D-5BCB-AE9A-00E36B2663DA)]
                [version(0x00000001)]
                interface ITreeViewItemStatics : IInspectable
                {
                    [propget] HRESULT GlyphOpacityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT GlyphBrushProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ExpandedGlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CollapsedGlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT GlyphSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsExpandedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TreeViewItemTemplateSettingsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HasUnrealizedChildrenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemsSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings)]
                [uuid(35B92371-3A10-5F55-89EA-59DB9A1D02CD)]
                [version(0x00000001)]
                interface ITreeViewItemTemplateSettings : IInspectable
                {
                    [propget] HRESULT ExpandedGlyphVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT CollapsedGlyphVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT Indentation([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propget] HRESULT DragItemsCount([out] [retval] INT32* value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings)]
                [uuid(1D1A66E3-F56D-5D7F-942C-F3A87F5C552E)]
                [version(0x00000001)]
                interface ITreeViewItemTemplateSettingsFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings)]
                [uuid(1E4667C8-459A-5A36-B131-2159CC2FE543)]
                [version(0x00000001)]
                interface ITreeViewItemTemplateSettingsStatics : IInspectable
                {
                    [propget] HRESULT ExpandedGlyphVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CollapsedGlyphVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IndentationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DragItemsCountProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewList)]
                [uuid(94CEE57B-7085-5A6A-AAC3-184509B8ECE0)]
                [version(0x00000001)]
                interface ITreeViewList : IInspectable
                {
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewList)]
                [uuid(461499A0-68CF-5B81-B0E4-B1AF929B0B12)]
                [version(0x00000001)]
                interface ITreeViewListFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.TreeViewList** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewNode)]
                [uuid(00378A74-790B-5328-8AFA-7D65E22DA426)]
                [version(0x00000001)]
                interface ITreeViewNode : IInspectable
                {
                    [propget] HRESULT Content([out] [retval] IInspectable** value);
                    [propput] HRESULT Content([in] IInspectable* value);
                    [propget] HRESULT Parent([out] [retval] Microsoft.UI.Xaml.Controls.TreeViewNode** value);
                    [propget] HRESULT IsExpanded([out] [retval] boolean* value);
                    [propput] HRESULT IsExpanded([in] boolean value);
                    [propget] HRESULT HasChildren([out] [retval] boolean* value);
                    [propget] HRESULT Depth([out] [retval] INT32* value);
                    [propget] HRESULT HasUnrealizedChildren([out] [retval] boolean* value);
                    [propput] HRESULT HasUnrealizedChildren([in] boolean value);
                    [propget] HRESULT Children([out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.TreeViewNode*>** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewNode)]
                [uuid(C105A5E5-CEA8-5EFD-8BE8-3D89B54CBD5F)]
                [version(0x00000001)]
                interface ITreeViewNodeFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.TreeViewNode** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewNode)]
                [uuid(1FEF99A7-988F-503C-A919-87D55DC90DF8)]
                [version(0x00000001)]
                interface ITreeViewNodeStatics : IInspectable
                {
                    [propget] HRESULT ContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DepthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsExpandedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HasChildrenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeView)]
                [uuid(3F241461-6852-5EA1-BAB7-D59309E03BBE)]
                [version(0x00000001)]
                interface ITreeViewStatics : IInspectable
                {
                    [propget] HRESULT SelectionModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanDragItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanReorderItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemTemplateSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemContainerStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemContainerStyleSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemContainerTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemsSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.XamlControlsResources)]
                [uuid(0E35A094-868E-5FBE-A92E-2E224A781DD5)]
                [version(0x00000001)]
                interface IXamlControlsResources : IInspectable
                {
                }

                [exclusiveto(Microsoft.UI.Xaml.Controls.XamlControlsResources)]
                [uuid(8FB9EB9B-850A-5225-96CF-A72036043342)]
                [version(0x00000001)]
                interface IXamlControlsResourcesStatics : IInspectable
                {
                    HRESULT EnsureRevealLights([in] Windows.UI.Xaml.UIElement* element);
                }

                [composable(Microsoft.UI.Xaml.Controls.IBitmapIconSourceFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IBitmapIconSourceStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass BitmapIconSource : Microsoft.UI.Xaml.Controls.IconSource
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IBitmapIconSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass ColorChangedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IColorChangedEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.IColorPickerFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IColorPickerStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass ColorPicker : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IColorPicker;
                }

                [composable(Microsoft.UI.Xaml.Controls.ICommandBarFlyoutFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass CommandBarFlyout : Windows.UI.Xaml.Controls.Primitives.FlyoutBase
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ICommandBarFlyout;
                }

                [composable(Microsoft.UI.Xaml.Controls.IDropDownButtonFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass DropDownButton : Windows.UI.Xaml.Controls.Button
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IDropDownButton;
                }

                [composable(Microsoft.UI.Xaml.Controls.IDropDownButtonAutomationPeerFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass DropDownButtonAutomationPeer : Windows.UI.Xaml.Automation.Peers.ButtonAutomationPeer
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IDropDownButtonAutomationPeer;
                    interface Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider;
                }

                [composable(Microsoft.UI.Xaml.Controls.IFontIconSourceFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IFontIconSourceStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass FontIconSource : Microsoft.UI.Xaml.Controls.IconSource
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IFontIconSource;
                }

                [composable(Microsoft.UI.Xaml.Controls.IIconSourceFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IIconSourceStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass IconSource : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IIconSource;
                }

                [composable(Microsoft.UI.Xaml.Controls.IMenuBarFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IMenuBarStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass MenuBar : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IMenuBar;
                }

                [composable(Microsoft.UI.Xaml.Controls.IMenuBarItemFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IMenuBarItemStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass MenuBarItem : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IMenuBarItem;
                }

                [composable(Microsoft.UI.Xaml.Controls.IMenuBarItemFlyoutFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass MenuBarItemFlyout : Windows.UI.Xaml.Controls.MenuFlyout
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IMenuBarItemFlyout;
                }

                [composable(Microsoft.UI.Xaml.Controls.INavigationViewFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.INavigationViewStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass NavigationView : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INavigationView;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass NavigationViewBackRequestedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INavigationViewBackRequestedEventArgs;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass NavigationViewDisplayModeChangedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INavigationViewDisplayModeChangedEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.INavigationViewItemFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.INavigationViewItemStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass NavigationViewItem : Microsoft.UI.Xaml.Controls.NavigationViewItemBase
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INavigationViewItem;
                }

                [composable(Microsoft.UI.Xaml.Controls.INavigationViewItemBaseFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass NavigationViewItemBase : Windows.UI.Xaml.Controls.ListViewItem
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INavigationViewItemBase;
                }

                [composable(Microsoft.UI.Xaml.Controls.INavigationViewItemHeaderFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass NavigationViewItemHeader : Microsoft.UI.Xaml.Controls.NavigationViewItemBase
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INavigationViewItemHeader;
                }

                [activatable(0x00000001)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass NavigationViewItemInvokedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INavigationViewItemInvokedEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.INavigationViewItemSeparatorFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass NavigationViewItemSeparator : Microsoft.UI.Xaml.Controls.NavigationViewItemBase
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INavigationViewItemSeparator;
                }

                [composable(Microsoft.UI.Xaml.Controls.INavigationViewListFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass NavigationViewList : Windows.UI.Xaml.Controls.ListView
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INavigationViewList;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass NavigationViewPaneClosingEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INavigationViewPaneClosingEventArgs;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass NavigationViewSelectionChangedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INavigationViewSelectionChangedEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass NavigationViewTemplateSettings : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettings;
                }

                [composable(Microsoft.UI.Xaml.Controls.IParallaxViewFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IParallaxViewStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass ParallaxView : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IParallaxView;
                }

                [composable(Microsoft.UI.Xaml.Controls.IPathIconSourceFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IPathIconSourceStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass PathIconSource : Microsoft.UI.Xaml.Controls.IconSource
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IPathIconSource;
                }

                [composable(Microsoft.UI.Xaml.Controls.IPersonPictureFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IPersonPictureStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass PersonPicture : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IPersonPicture;
                }

                [composable(Microsoft.UI.Xaml.Controls.IRatingControlFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IRatingControlStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass RatingControl : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IRatingControl;
                }

                [composable(Microsoft.UI.Xaml.Controls.IRatingItemFontInfoFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IRatingItemFontInfoStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass RatingItemFontInfo : Microsoft.UI.Xaml.Controls.RatingItemInfo
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IRatingItemFontInfo;
                }

                [composable(Microsoft.UI.Xaml.Controls.IRatingItemImageInfoFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IRatingItemImageInfoStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass RatingItemImageInfo : Microsoft.UI.Xaml.Controls.RatingItemInfo
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IRatingItemImageInfo;
                }

                [composable(Microsoft.UI.Xaml.Controls.IRatingItemInfoFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass RatingItemInfo : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IRatingItemInfo;
                }

                [composable(Microsoft.UI.Xaml.Controls.IRefreshContainerFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IRefreshContainerStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass RefreshContainer : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IRefreshContainer;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass RefreshInteractionRatioChangedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IRefreshInteractionRatioChangedEventArgs;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass RefreshRequestedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IRefreshRequestedEventArgs;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass RefreshStateChangedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IRefreshStateChangedEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.IRefreshVisualizerFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IRefreshVisualizerStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass RefreshVisualizer : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IRefreshVisualizer;
                }

                [composable(Microsoft.UI.Xaml.Controls.ISplitButtonFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.ISplitButtonStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass SplitButton : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ISplitButton;
                }

                [composable(Microsoft.UI.Xaml.Controls.ISplitButtonAutomationPeerFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass SplitButtonAutomationPeer : Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ISplitButtonAutomationPeer;
                    interface Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider;
                    interface Windows.UI.Xaml.Automation.Provider.IInvokeProvider;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass SplitButtonClickEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ISplitButtonClickEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.ISwipeControlFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.ISwipeControlStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass SwipeControl : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ISwipeControl;
                }

                [composable(Microsoft.UI.Xaml.Controls.ISwipeItemFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.ISwipeItemStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass SwipeItem : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ISwipeItem;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass SwipeItemInvokedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ISwipeItemInvokedEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.ISwipeItemsFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.ISwipeItemsStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass SwipeItems : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ISwipeItems;
                    interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.SwipeItem*>;
                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Controls.SwipeItem*>;
                }

                [composable(Microsoft.UI.Xaml.Controls.ISymbolIconSourceFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.ISymbolIconSourceStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass SymbolIconSource : Microsoft.UI.Xaml.Controls.IconSource
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ISymbolIconSource;
                }

                [composable(Microsoft.UI.Xaml.Controls.ITextCommandBarFlyoutFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass TextCommandBarFlyout : Microsoft.UI.Xaml.Controls.CommandBarFlyout
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITextCommandBarFlyout;
                }

                [composable(Microsoft.UI.Xaml.Controls.IToggleSplitButtonFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass ToggleSplitButton : Microsoft.UI.Xaml.Controls.SplitButton
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IToggleSplitButton;
                }

                [composable(Microsoft.UI.Xaml.Controls.IToggleSplitButtonAutomationPeerFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass ToggleSplitButtonAutomationPeer : Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IToggleSplitButtonAutomationPeer;
                    interface Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider;
                    interface Windows.UI.Xaml.Automation.Provider.IToggleProvider;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass ToggleSplitButtonIsCheckedChangedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IToggleSplitButtonIsCheckedChangedEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.ITreeViewFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.ITreeViewStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass TreeView : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITreeView;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass TreeViewCollapsedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITreeViewCollapsedEventArgs;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass TreeViewDragItemsCompletedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITreeViewDragItemsCompletedEventArgs;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass TreeViewDragItemsStartingEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITreeViewDragItemsStartingEventArgs;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass TreeViewExpandingEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITreeViewExpandingEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.ITreeViewItemFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.ITreeViewItemStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass TreeViewItem : Windows.UI.Xaml.Controls.ListViewItem
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITreeViewItem;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass TreeViewItemInvokedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITreeViewItemInvokedEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettingsFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettingsStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass TreeViewItemTemplateSettings : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettings;
                }

                [composable(Microsoft.UI.Xaml.Controls.ITreeViewListFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass TreeViewList : Windows.UI.Xaml.Controls.ListView
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITreeViewList;
                }

                [composable(Microsoft.UI.Xaml.Controls.ITreeViewNodeFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.ITreeViewNodeStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass TreeViewNode : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITreeViewNode;
                }

                [activatable(0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IXamlControlsResourcesStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass XamlControlsResources : Windows.UI.Xaml.ResourceDictionary
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IXamlControlsResources;
                }
            }
        }
    }
}
