//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Microsoft.UI.Xaml.Controls.idl";
import "Windows.Foundation.Numerics.idl";
import "Windows.UI.idl";
import "Windows.UI.Composition.idl";
import "Windows.UI.Input.idl";
import "Windows.UI.Xaml.idl";
import "Windows.UI.Xaml.Automation.Peers.idl";
import "Windows.UI.Xaml.Controls.idl";
import "Windows.UI.Xaml.Media.idl";

// Forward Declare
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                typedef enum ChainingMode ChainingMode;

                runtimeclass ColorChangedEventArgs;

                typedef enum ColorPickerHsvChannel ColorPickerHsvChannel;

                typedef enum ColorSpectrumComponents ColorSpectrumComponents;

                typedef enum ColorSpectrumShape ColorSpectrumShape;

                typedef enum ContentOrientation ContentOrientation;

                typedef enum InputKind InputKind;

                typedef enum InteractionState InteractionState;

                typedef enum RailingMode RailingMode;

                typedef enum ScrollMode ScrollMode;

                runtimeclass ScrollerAnchorRequestedEventArgs;

                runtimeclass ScrollerBringingIntoViewEventArgs;

                runtimeclass ScrollerChangeOffsetsOptions;

                runtimeclass ScrollerChangeOffsetsWithAdditionalVelocityOptions;

                runtimeclass ScrollerChangeZoomFactorOptions;

                runtimeclass ScrollerChangeZoomFactorWithAdditionalVelocityOptions;

                runtimeclass ScrollerChangingOffsetsEventArgs;

                runtimeclass ScrollerChangingZoomFactorEventArgs;

                runtimeclass ScrollerViewChangeCompletedEventArgs;

                typedef enum ScrollerViewChangeKind ScrollerViewChangeKind;

                typedef enum ScrollerViewChangeResult ScrollerViewChangeResult;

                typedef enum ScrollerViewKind ScrollerViewKind;

                typedef enum ZoomMode ZoomMode;
            }
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                namespace Primitives
                {
                    typedef enum ScrollerSnapPointAlignment ScrollerSnapPointAlignment;

                    typedef enum ScrollerSnapPointApplicableRangeType ScrollerSnapPointApplicableRangeType;

                    interface IColorPickerSlider;

                    interface IColorPickerSliderFactory;

                    interface IColorPickerSliderStatics;

                    interface IColorSpectrum;

                    interface IColorSpectrumFactory;

                    interface IColorSpectrumStatics;

                    interface ICommandBarFlyoutCommandBar;

                    interface ICommandBarFlyoutCommandBarFactory;

                    interface ICommandBarFlyoutCommandBarTemplateSettings;

                    interface INavigationViewItemPresenter;

                    interface INavigationViewItemPresenterFactory;

                    interface INavigationViewItemPresenterStatics;

                    interface IRadioButtonsListView;

                    interface IRadioButtonsListViewFactory;

                    interface IRadioButtonsListViewItem;

                    interface IRadioButtonsListViewItemFactory;

                    interface IScrollController;

                    interface IScrollControllerInteractionRequestedEventArgs;

                    interface IScrollControllerInteractionRequestedEventArgsFactory;

                    interface IScrollControllerOffsetChangeRequestedEventArgs;

                    interface IScrollControllerOffsetChangeRequestedEventArgsFactory;

                    interface IScrollControllerOffsetChangeWithAdditionalVelocityRequestedEventArgs;

                    interface IScrollControllerOffsetChangeWithAdditionalVelocityRequestedEventArgsFactory;

                    interface IScroller;

                    interface IScrollerAutomationPeer;

                    interface IScrollerAutomationPeerFactory;

                    interface IScrollerFactory;

                    interface IScrollerSnapPointBase;

                    interface IScrollerSnapPointBaseFactory;

                    interface IScrollerSnapPointIrregular;

                    interface IScrollerSnapPointIrregularFactory;

                    interface IScrollerSnapPointRegular;

                    interface IScrollerSnapPointRegularFactory;

                    interface IScrollerStatics;

                    runtimeclass ColorPickerSlider;

                    runtimeclass ColorSpectrum;

                    runtimeclass CommandBarFlyoutCommandBar;

                    runtimeclass CommandBarFlyoutCommandBarTemplateSettings;

                    runtimeclass NavigationViewItemPresenter;

                    runtimeclass RadioButtonsListView;

                    runtimeclass RadioButtonsListViewItem;

                    runtimeclass ScrollControllerInteractionRequestedEventArgs;

                    runtimeclass ScrollControllerOffsetChangeRequestedEventArgs;

                    runtimeclass ScrollControllerOffsetChangeWithAdditionalVelocityRequestedEventArgs;

                    runtimeclass Scroller;

                    runtimeclass ScrollerAutomationPeer;

                    runtimeclass ScrollerSnapPointBase;

                    runtimeclass ScrollerSnapPointIrregular;

                    runtimeclass ScrollerSnapPointRegular;
                }
            }
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                namespace Primitives
                {
                    declare
                    {
                        interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Controls.Primitives.ScrollerSnapPointBase*>;

                        interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Controls.Primitives.ScrollerSnapPointBase*>;

                        interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Controls.Primitives.ScrollerSnapPointBase*>;

                        interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.Primitives.ScrollerSnapPointBase*>;

                        interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, IInspectable*>;

                        interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerInteractionRequestedEventArgs*>;

                        interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerOffsetChangeRequestedEventArgs*>;

                        interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerOffsetChangeWithAdditionalVelocityRequestedEventArgs*>;

                        interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.Scroller*, IInspectable*>;
                    }
                }
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                namespace Primitives
                {
                    [experimental]
                    [version(0x00000001)]
                    enum ScrollerSnapPointAlignment
                    {
                        Near   = 0,
                        Center = 1,
                        Far    = 2
                    };

                    [experimental]
                    [version(0x00000001)]
                    enum ScrollerSnapPointApplicableRangeType
                    {
                        Mandatory       = 0,
                        MandatorySingle = 1,
                        Optional        = 2
                    };

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider)]
                    [uuid(456231BB-5A4C-564B-9B3D-2F157061A0F8)]
                    [version(0x00000001)]
                    interface IColorPickerSlider : IInspectable
                    {
                        [propget] HRESULT ColorChannel([out] [retval] Microsoft.UI.Xaml.Controls.ColorPickerHsvChannel* value);
                        [propput] HRESULT ColorChannel([in] Microsoft.UI.Xaml.Controls.ColorPickerHsvChannel value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider)]
                    [uuid(D0CB1F0E-0771-5C7D-BA14-AA431179B2AC)]
                    [version(0x00000001)]
                    interface IColorPickerSliderFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider)]
                    [uuid(9792B197-C864-59F3-9FA0-E21C7FD46B79)]
                    [version(0x00000001)]
                    interface IColorPickerSliderStatics : IInspectable
                    {
                        [propget] HRESULT ColorChannelProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum)]
                    [uuid(75305916-882D-5667-BFD0-0AF72D502D72)]
                    [version(0x00000001)]
                    interface IColorSpectrum : IInspectable
                    {
                        [propget] HRESULT Color([out] [retval] Windows.UI.Color* value);
                        [propput] HRESULT Color([in] Windows.UI.Color value);
                        [propget] HRESULT HsvColor([out] [retval] Windows.Foundation.Numerics.Vector4* value);
                        [propput] HRESULT HsvColor([in] Windows.Foundation.Numerics.Vector4 value);
                        [propget] HRESULT MinHue([out] [retval] INT32* value);
                        [propput] HRESULT MinHue([in] INT32 value);
                        [propget] HRESULT MaxHue([out] [retval] INT32* value);
                        [propput] HRESULT MaxHue([in] INT32 value);
                        [propget] HRESULT MinSaturation([out] [retval] INT32* value);
                        [propput] HRESULT MinSaturation([in] INT32 value);
                        [propget] HRESULT MaxSaturation([out] [retval] INT32* value);
                        [propput] HRESULT MaxSaturation([in] INT32 value);
                        [propget] HRESULT MinValue([out] [retval] INT32* value);
                        [propput] HRESULT MinValue([in] INT32 value);
                        [propget] HRESULT MaxValue([out] [retval] INT32* value);
                        [propput] HRESULT MaxValue([in] INT32 value);
                        [propget] HRESULT Shape([out] [retval] Microsoft.UI.Xaml.Controls.ColorSpectrumShape* value);
                        [propput] HRESULT Shape([in] Microsoft.UI.Xaml.Controls.ColorSpectrumShape value);
                        [propget] HRESULT Components([out] [retval] Microsoft.UI.Xaml.Controls.ColorSpectrumComponents* value);
                        [propput] HRESULT Components([in] Microsoft.UI.Xaml.Controls.ColorSpectrumComponents value);
                        [eventadd] HRESULT ColorChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum*, Microsoft.UI.Xaml.Controls.ColorChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT ColorChanged([in] EventRegistrationToken token);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum)]
                    [uuid(EFECD442-8C2A-50A6-88A3-3999EA01F096)]
                    [version(0x00000001)]
                    interface IColorSpectrumFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum)]
                    [uuid(AA1D251D-9E7B-5767-ADB9-FCD36855D82E)]
                    [version(0x00000001)]
                    interface IColorSpectrumStatics : IInspectable
                    {
                        [propget] HRESULT ColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT HsvColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT MinHueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT MaxHueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT MinSaturationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT MaxSaturationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT MinValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT MaxValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ShapeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ComponentsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar)]
                    [uuid(0F7120C5-6D00-5489-9171-BEDD2D4EF677)]
                    [version(0x00000001)]
                    interface ICommandBarFlyoutCommandBar : IInspectable
                    {
                        [propget] HRESULT FlyoutTemplateSettings([out] [retval] Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar)]
                    [uuid(58DBCDA9-38E4-5EFC-B740-26FDA3D0A3C6)]
                    [version(0x00000001)]
                    interface ICommandBarFlyoutCommandBarFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings)]
                    [uuid(533CC5CA-DCF7-5F9D-A460-934A883ACDC1)]
                    [version(0x00000001)]
                    interface ICommandBarFlyoutCommandBarTemplateSettings : IInspectable
                    {
                        [propget] HRESULT OpenAnimationStartPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT OpenAnimationEndPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT CloseAnimationEndPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT CurrentWidth([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandedWidth([out] [retval] DOUBLE* value);
                        [propget] HRESULT WidthExpansionDelta([out] [retval] DOUBLE* value);
                        [propget] HRESULT WidthExpansionAnimationStartPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT WidthExpansionAnimationEndPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT WidthExpansionMoreButtonAnimationStartPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT WidthExpansionMoreButtonAnimationEndPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandUpOverflowVerticalPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandDownOverflowVerticalPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandUpAnimationStartPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandUpAnimationEndPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandUpAnimationHoldPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandDownAnimationStartPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandDownAnimationEndPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandDownAnimationHoldPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ContentClipRect([out] [retval] Windows.Foundation.Rect* value);
                        [propget] HRESULT OverflowContentClipRect([out] [retval] Windows.Foundation.Rect* value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter)]
                    [uuid(6C43C315-DE90-520E-906B-8317B7564B97)]
                    [version(0x00000001)]
                    interface INavigationViewItemPresenter : IInspectable
                    {
                        [propget] HRESULT Icon([out] [retval] Windows.UI.Xaml.Controls.IconElement** value);
                        [propput] HRESULT Icon([in] Windows.UI.Xaml.Controls.IconElement* value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter)]
                    [uuid(B28B0160-022C-593C-AB9A-7B3DED2C0754)]
                    [version(0x00000001)]
                    interface INavigationViewItemPresenterFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter)]
                    [uuid(48265FC1-761E-5F41-8166-FA51733A45EF)]
                    [version(0x00000001)]
                    interface INavigationViewItemPresenterStatics : IInspectable
                    {
                        [propget] HRESULT IconProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.RadioButtonsListView)]
                    [experimental]
                    [uuid(35108696-113F-57E2-96FC-22D568CCB5F6)]
                    [version(0x00000001)]
                    interface IRadioButtonsListView : IInspectable
                    {
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.RadioButtonsListView)]
                    [experimental]
                    [uuid(055926FE-1C8B-5BDA-98CF-EDCD6595BF27)]
                    [version(0x00000001)]
                    interface IRadioButtonsListViewFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.RadioButtonsListView** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.RadioButtonsListViewItem)]
                    [experimental]
                    [uuid(A94BE650-C2A5-56BC-B60A-F932DE04EAE8)]
                    [version(0x00000001)]
                    interface IRadioButtonsListViewItem : IInspectable
                    {
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.RadioButtonsListViewItem)]
                    [experimental]
                    [uuid(AA49A764-047D-58C3-9118-8D238B00B84F)]
                    [version(0x00000001)]
                    interface IRadioButtonsListViewItemFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.RadioButtonsListViewItem** value);
                    }

                    [experimental]
                    [uuid(043C0CB3-A61A-5B15-A206-C205E9D48F81)]
                    [version(0x00000001)]
                    interface IScrollController : IInspectable
                    {
                        [propget] HRESULT AreInteractionsAllowed([out] [retval] boolean* value);
                        [propget] HRESULT AreScrollerInteractionsAllowed([out] [retval] boolean* value);
                        [propget] HRESULT IsInteracting([out] [retval] boolean* value);
                        [propget] HRESULT IsInteractionVisualRailEnabled([out] [retval] boolean* value);
                        [propget] HRESULT InteractionVisual([out] [retval] Windows.UI.Composition.Visual** value);
                        [propget] HRESULT InteractionVisualScrollOrientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                        HRESULT SetExpressionAnimationSources([in] Windows.UI.Composition.CompositionPropertySet* propertySet, [in] HSTRING minOffsetPropertyName, [in] HSTRING maxOffsetPropertyName, [in] HSTRING offsetPropertyName, [in] HSTRING multiplierPropertyName);
                        HRESULT SetScrollMode([in] Microsoft.UI.Xaml.Controls.ScrollMode scrollMode);
                        HRESULT SetValues([in] DOUBLE minOffset, [in] DOUBLE maxOffset, [in] DOUBLE offset, [in] DOUBLE viewport);
                        HRESULT GetScrollAnimation([in] INT32 offsetChangeId, [in] Windows.Foundation.Numerics.Vector2 currentPosition, [in] Windows.UI.Composition.CompositionAnimation* defaultAnimation, [out] [retval] Windows.UI.Composition.CompositionAnimation** result);
                        HRESULT OnScrollCompleted([in] INT32 offsetChangeId, [in] Microsoft.UI.Xaml.Controls.ScrollerViewChangeResult result);
                        [eventadd] HRESULT OffsetChangeRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerOffsetChangeRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT OffsetChangeRequested([in] EventRegistrationToken token);
                        [eventadd] HRESULT OffsetChangeWithAdditionalVelocityRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerOffsetChangeWithAdditionalVelocityRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT OffsetChangeWithAdditionalVelocityRequested([in] EventRegistrationToken token);
                        [eventadd] HRESULT InteractionRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerInteractionRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT InteractionRequested([in] EventRegistrationToken token);
                        [eventadd] HRESULT InteractionInfoChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT InteractionInfoChanged([in] EventRegistrationToken token);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerInteractionRequestedEventArgs)]
                    [experimental]
                    [uuid(9CA050FA-6A7B-5BED-9E26-8F2DA0EE73A1)]
                    [version(0x00000001)]
                    interface IScrollControllerInteractionRequestedEventArgs : IInspectable
                    {
                        [propget] HRESULT PointerPoint([out] [retval] Windows.UI.Input.PointerPoint** value);
                        [propget] HRESULT Handled([out] [retval] boolean* value);
                        [propput] HRESULT Handled([in] boolean value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerInteractionRequestedEventArgs)]
                    [experimental]
                    [uuid(1CCE9A33-698D-54DC-B144-D68B9E7B76C2)]
                    [version(0x00000001)]
                    interface IScrollControllerInteractionRequestedEventArgsFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] Windows.UI.Input.PointerPoint* pointerPoint, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerInteractionRequestedEventArgs** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerOffsetChangeRequestedEventArgs)]
                    [experimental]
                    [uuid(C82386EC-81F7-5174-95A5-8D68D3D4806C)]
                    [version(0x00000001)]
                    interface IScrollControllerOffsetChangeRequestedEventArgs : IInspectable
                    {
                        [propget] HRESULT Offset([out] [retval] DOUBLE* value);
                        [propget] HRESULT OffsetKind([out] [retval] Microsoft.UI.Xaml.Controls.ScrollerViewKind* value);
                        [propget] HRESULT OffsetChangeKind([out] [retval] Microsoft.UI.Xaml.Controls.ScrollerViewChangeKind* value);
                        [propget] HRESULT ViewChangeId([out] [retval] INT32* value);
                        [propput] HRESULT ViewChangeId([in] INT32 value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerOffsetChangeRequestedEventArgs)]
                    [experimental]
                    [uuid(3F3B4CC0-4CEF-53AC-B9BB-203296BB4A7F)]
                    [version(0x00000001)]
                    interface IScrollControllerOffsetChangeRequestedEventArgsFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] DOUBLE offset, [in] Microsoft.UI.Xaml.Controls.ScrollerViewKind offsetKind, [in] Microsoft.UI.Xaml.Controls.ScrollerViewChangeKind offsetChangeKind, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerOffsetChangeRequestedEventArgs** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerOffsetChangeWithAdditionalVelocityRequestedEventArgs)]
                    [experimental]
                    [uuid(587618E1-67F5-5435-AA67-A6796E5CB8B0)]
                    [version(0x00000001)]
                    interface IScrollControllerOffsetChangeWithAdditionalVelocityRequestedEventArgs : IInspectable
                    {
                        [propget] HRESULT AdditionalVelocity([out] [retval] FLOAT* value);
                        [propget] HRESULT InertiaDecayRate([out] [retval] Windows.Foundation.IReference<FLOAT>** value);
                        [propget] HRESULT ViewChangeId([out] [retval] INT32* value);
                        [propput] HRESULT ViewChangeId([in] INT32 value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerOffsetChangeWithAdditionalVelocityRequestedEventArgs)]
                    [experimental]
                    [uuid(B582B0C6-5B3A-5AF5-AF39-F5F49050478E)]
                    [version(0x00000001)]
                    interface IScrollControllerOffsetChangeWithAdditionalVelocityRequestedEventArgsFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] FLOAT additionalVelocity, [in] Windows.Foundation.IReference<FLOAT>* inertiaDecayRate, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerOffsetChangeWithAdditionalVelocityRequestedEventArgs** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.Scroller)]
                    [experimental]
                    [uuid(F6DBFC11-C20D-5A81-8DB2-5C4056A0E062)]
                    [version(0x00000001)]
                    interface IScroller : IInspectable
                    {
                        [propget] HRESULT Background([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                        [propput] HRESULT Background([in] Windows.UI.Xaml.Media.Brush* value);
                        [propget] HRESULT Content([out] [retval] Windows.UI.Xaml.UIElement** value);
                        [propput] HRESULT Content([in] Windows.UI.Xaml.UIElement* value);
                        [propget] HRESULT ExpressionAnimationSources([out] [retval] Windows.UI.Composition.CompositionPropertySet** value);
                        [propget] HRESULT HorizontalOffset([out] [retval] DOUBLE* value);
                        [propget] HRESULT VerticalOffset([out] [retval] DOUBLE* value);
                        [propget] HRESULT ZoomFactor([out] [retval] FLOAT* value);
                        [propget] HRESULT ExtentWidth([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExtentHeight([out] [retval] DOUBLE* value);
                        [propget] HRESULT ViewportWidth([out] [retval] DOUBLE* value);
                        [propget] HRESULT ViewportHeight([out] [retval] DOUBLE* value);
                        [propget] HRESULT ScrollableWidth([out] [retval] DOUBLE* value);
                        [propget] HRESULT ScrollableHeight([out] [retval] DOUBLE* value);
                        [propget] HRESULT ContentOrientation([out] [retval] Microsoft.UI.Xaml.Controls.ContentOrientation* value);
                        [propput] HRESULT ContentOrientation([in] Microsoft.UI.Xaml.Controls.ContentOrientation value);
                        [propget] HRESULT HorizontalScrollChainingMode([out] [retval] Microsoft.UI.Xaml.Controls.ChainingMode* value);
                        [propput] HRESULT HorizontalScrollChainingMode([in] Microsoft.UI.Xaml.Controls.ChainingMode value);
                        [propget] HRESULT VerticalScrollChainingMode([out] [retval] Microsoft.UI.Xaml.Controls.ChainingMode* value);
                        [propput] HRESULT VerticalScrollChainingMode([in] Microsoft.UI.Xaml.Controls.ChainingMode value);
                        [propget] HRESULT HorizontalScrollRailingMode([out] [retval] Microsoft.UI.Xaml.Controls.RailingMode* value);
                        [propput] HRESULT HorizontalScrollRailingMode([in] Microsoft.UI.Xaml.Controls.RailingMode value);
                        [propget] HRESULT VerticalScrollRailingMode([out] [retval] Microsoft.UI.Xaml.Controls.RailingMode* value);
                        [propput] HRESULT VerticalScrollRailingMode([in] Microsoft.UI.Xaml.Controls.RailingMode value);
                        [propget] HRESULT HorizontalScrollMode([out] [retval] Microsoft.UI.Xaml.Controls.ScrollMode* value);
                        [propput] HRESULT HorizontalScrollMode([in] Microsoft.UI.Xaml.Controls.ScrollMode value);
                        [propget] HRESULT VerticalScrollMode([out] [retval] Microsoft.UI.Xaml.Controls.ScrollMode* value);
                        [propput] HRESULT VerticalScrollMode([in] Microsoft.UI.Xaml.Controls.ScrollMode value);
                        [propget] HRESULT ZoomChainingMode([out] [retval] Microsoft.UI.Xaml.Controls.ChainingMode* value);
                        [propput] HRESULT ZoomChainingMode([in] Microsoft.UI.Xaml.Controls.ChainingMode value);
                        [propget] HRESULT ZoomMode([out] [retval] Microsoft.UI.Xaml.Controls.ZoomMode* value);
                        [propput] HRESULT ZoomMode([in] Microsoft.UI.Xaml.Controls.ZoomMode value);
                        [propget] HRESULT IgnoredInputKind([out] [retval] Microsoft.UI.Xaml.Controls.InputKind* value);
                        [propput] HRESULT IgnoredInputKind([in] Microsoft.UI.Xaml.Controls.InputKind value);
                        [propget] HRESULT MinZoomFactor([out] [retval] DOUBLE* value);
                        [propput] HRESULT MinZoomFactor([in] DOUBLE value);
                        [propget] HRESULT MaxZoomFactor([out] [retval] DOUBLE* value);
                        [propput] HRESULT MaxZoomFactor([in] DOUBLE value);
                        [propget] HRESULT State([out] [retval] Microsoft.UI.Xaml.Controls.InteractionState* value);
                        [propget] HRESULT HorizontalScrollController([out] [retval] Microsoft.UI.Xaml.Controls.Primitives.IScrollController** value);
                        [propput] HRESULT HorizontalScrollController([in] Microsoft.UI.Xaml.Controls.Primitives.IScrollController* value);
                        [propget] HRESULT VerticalScrollController([out] [retval] Microsoft.UI.Xaml.Controls.Primitives.IScrollController** value);
                        [propput] HRESULT VerticalScrollController([in] Microsoft.UI.Xaml.Controls.Primitives.IScrollController* value);
                        [propget] HRESULT HorizontalAnchorRatio([out] [retval] DOUBLE* value);
                        [propput] HRESULT HorizontalAnchorRatio([in] DOUBLE value);
                        [propget] HRESULT VerticalAnchorRatio([out] [retval] DOUBLE* value);
                        [propput] HRESULT VerticalAnchorRatio([in] DOUBLE value);
                        [propget] HRESULT HorizontalSnapPoints([out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.Primitives.ScrollerSnapPointBase*>** value);
                        [propget] HRESULT VerticalSnapPoints([out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.Primitives.ScrollerSnapPointBase*>** value);
                        [propget] HRESULT ZoomSnapPoints([out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.Primitives.ScrollerSnapPointBase*>** value);
                        HRESULT ChangeOffsets([in] Microsoft.UI.Xaml.Controls.ScrollerChangeOffsetsOptions* options, [out] [retval] INT32* result);
                        HRESULT ChangeOffsetsWithAdditionalVelocity([in] Microsoft.UI.Xaml.Controls.ScrollerChangeOffsetsWithAdditionalVelocityOptions* options, [out] [retval] INT32* result);
                        HRESULT ChangeZoomFactor([in] Microsoft.UI.Xaml.Controls.ScrollerChangeZoomFactorOptions* options, [out] [retval] INT32* result);
                        HRESULT ChangeZoomFactorWithAdditionalVelocity([in] Microsoft.UI.Xaml.Controls.ScrollerChangeZoomFactorWithAdditionalVelocityOptions* options, [out] [retval] INT32* result);
                        [eventadd] HRESULT ExtentChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.Scroller*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT ExtentChanged([in] EventRegistrationToken token);
                        [eventadd] HRESULT StateChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.Scroller*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT StateChanged([in] EventRegistrationToken token);
                        [eventadd] HRESULT ViewChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.Scroller*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT ViewChanged([in] EventRegistrationToken token);
                        [eventadd] HRESULT ChangingOffsets([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.Scroller*, Microsoft.UI.Xaml.Controls.ScrollerChangingOffsetsEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT ChangingOffsets([in] EventRegistrationToken token);
                        [eventadd] HRESULT ChangingZoomFactor([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.Scroller*, Microsoft.UI.Xaml.Controls.ScrollerChangingZoomFactorEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT ChangingZoomFactor([in] EventRegistrationToken token);
                        [eventadd] HRESULT ViewChangeCompleted([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.Scroller*, Microsoft.UI.Xaml.Controls.ScrollerViewChangeCompletedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT ViewChangeCompleted([in] EventRegistrationToken token);
                        [eventadd] HRESULT BringingIntoView([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.Scroller*, Microsoft.UI.Xaml.Controls.ScrollerBringingIntoViewEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT BringingIntoView([in] EventRegistrationToken token);
                        [eventadd] HRESULT AnchorRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.Scroller*, Microsoft.UI.Xaml.Controls.ScrollerAnchorRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT AnchorRequested([in] EventRegistrationToken token);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollerAutomationPeer)]
                    [experimental]
                    [uuid(5CBBA2DF-43B3-57F8-BB19-69B3262AE7D0)]
                    [version(0x00000001)]
                    interface IScrollerAutomationPeer : IInspectable
                    {
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollerAutomationPeer)]
                    [experimental]
                    [uuid(03A05EC9-B2EC-5EDD-AC25-A637065D7A47)]
                    [version(0x00000001)]
                    interface IScrollerAutomationPeerFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] Microsoft.UI.Xaml.Controls.Primitives.Scroller* owner, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ScrollerAutomationPeer** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.Scroller)]
                    [experimental]
                    [uuid(6094F4DD-F93D-5636-B4B5-E938C0CB068E)]
                    [version(0x00000001)]
                    interface IScrollerFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.Scroller** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollerSnapPointBase)]
                    [experimental]
                    [uuid(AF467EA5-C57B-52D5-8566-120D1CF6EA79)]
                    [version(0x00000001)]
                    interface IScrollerSnapPointBase : IInspectable
                    {
                        [propget] HRESULT Alignment([out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ScrollerSnapPointAlignment* value);
                        [propput] HRESULT Alignment([in] Microsoft.UI.Xaml.Controls.Primitives.ScrollerSnapPointAlignment value);
                        [propget] HRESULT SpecifiedApplicableRange([out] [retval] DOUBLE* value);
                        [propget] HRESULT ApplicableRangeType([out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ScrollerSnapPointApplicableRangeType* value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollerSnapPointBase)]
                    [experimental]
                    [uuid(2D80813B-F76B-5250-9881-D4B14D28C6CD)]
                    [version(0x00000001)]
                    interface IScrollerSnapPointBaseFactory : IInspectable
                    {
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollerSnapPointIrregular)]
                    [experimental]
                    [uuid(0323AFB6-2979-5255-921F-AB06A91125EC)]
                    [version(0x00000001)]
                    interface IScrollerSnapPointIrregular : IInspectable
                    {
                        [propget] HRESULT Value([out] [retval] DOUBLE* value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollerSnapPointIrregular)]
                    [experimental]
                    [uuid(4071EA53-F0E5-5E83-A507-24BD30A43147)]
                    [version(0x00000001)]
                    interface IScrollerSnapPointIrregularFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] DOUBLE snapPointValue, [in] Microsoft.UI.Xaml.Controls.Primitives.ScrollerSnapPointAlignment alignment, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ScrollerSnapPointIrregular** value);
                        HRESULT CreateInstance2([in] DOUBLE snapPointValue, [in] DOUBLE applicableRange, [in] Microsoft.UI.Xaml.Controls.Primitives.ScrollerSnapPointAlignment alignment, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ScrollerSnapPointIrregular** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollerSnapPointRegular)]
                    [experimental]
                    [uuid(A58E15DB-8A05-5C59-B6B9-E954A49053FC)]
                    [version(0x00000001)]
                    interface IScrollerSnapPointRegular : IInspectable
                    {
                        [propget] HRESULT Offset([out] [retval] DOUBLE* value);
                        [propget] HRESULT Interval([out] [retval] DOUBLE* value);
                        [propget] HRESULT Start([out] [retval] DOUBLE* value);
                        [propget] HRESULT End([out] [retval] DOUBLE* value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollerSnapPointRegular)]
                    [experimental]
                    [uuid(C55C2C0A-AB11-51E8-9B7D-0D4C923AA44C)]
                    [version(0x00000001)]
                    interface IScrollerSnapPointRegularFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] DOUBLE offset, [in] DOUBLE interval, [in] DOUBLE start, [in] DOUBLE end, [in] Microsoft.UI.Xaml.Controls.Primitives.ScrollerSnapPointAlignment alignment, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ScrollerSnapPointRegular** value);
                        HRESULT CreateInstance2([in] DOUBLE offset, [in] DOUBLE interval, [in] DOUBLE start, [in] DOUBLE end, [in] DOUBLE applicableRange, [in] Microsoft.UI.Xaml.Controls.Primitives.ScrollerSnapPointAlignment alignment, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ScrollerSnapPointRegular** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.Scroller)]
                    [experimental]
                    [uuid(D46A8A1D-9B3A-5A40-80F8-F0070FF51004)]
                    [version(0x00000001)]
                    interface IScrollerStatics : IInspectable
                    {
                        [propget] HRESULT BackgroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ContentOrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT HorizontalScrollChainingModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT VerticalScrollChainingModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT HorizontalScrollRailingModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT VerticalScrollRailingModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT HorizontalScrollModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT VerticalScrollModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ZoomChainingModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ZoomModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT IgnoredInputKindProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT MinZoomFactorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT MaxZoomFactorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT HorizontalAnchorRatioProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT VerticalAnchorRatioProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSliderFactory, public, 0x00000001)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSliderStatics, 0x00000001)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass ColorPickerSlider : Windows.UI.Xaml.Controls.Slider
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSlider;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumFactory, public, 0x00000001)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics, 0x00000001)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass ColorSpectrum : Windows.UI.Xaml.Controls.Control
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarFactory, public, 0x00000001)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass CommandBarFlyoutCommandBar : Windows.UI.Xaml.Controls.CommandBar
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBar;
                    }

                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass CommandBarFlyoutCommandBarTemplateSettings : Windows.UI.Xaml.DependencyObject
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterFactory, public, 0x00000001)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterStatics, 0x00000001)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass NavigationViewItemPresenter : Windows.UI.Xaml.Controls.ContentControl
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenter;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IRadioButtonsListViewFactory, public, 0x00000001)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass RadioButtonsListView : Windows.UI.Xaml.Controls.ListView
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IRadioButtonsListView;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IRadioButtonsListViewItemFactory, public, 0x00000001)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass RadioButtonsListViewItem : Windows.UI.Xaml.Controls.ListViewItem
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IRadioButtonsListViewItem;
                    }

                    [activatable(Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerInteractionRequestedEventArgsFactory, 0x00000001)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass ScrollControllerInteractionRequestedEventArgs
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerInteractionRequestedEventArgs;
                    }

                    [activatable(Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerOffsetChangeRequestedEventArgsFactory, 0x00000001)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass ScrollControllerOffsetChangeRequestedEventArgs
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerOffsetChangeRequestedEventArgs;
                    }

                    [activatable(Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerOffsetChangeWithAdditionalVelocityRequestedEventArgsFactory, 0x00000001)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass ScrollControllerOffsetChangeWithAdditionalVelocityRequestedEventArgs
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerOffsetChangeWithAdditionalVelocityRequestedEventArgs;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IScrollerFactory, public, 0x00000001)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.IScrollerStatics, 0x00000001)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass Scroller : Windows.UI.Xaml.FrameworkElement
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IScroller;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IScrollerAutomationPeerFactory, public, 0x00000001)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass ScrollerAutomationPeer : Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IScrollerAutomationPeer;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IScrollerSnapPointBaseFactory, public, 0x00000001)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass ScrollerSnapPointBase : Windows.UI.Xaml.DependencyObject
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IScrollerSnapPointBase;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IScrollerSnapPointIrregularFactory, public, 0x00000001)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass ScrollerSnapPointIrregular : Microsoft.UI.Xaml.Controls.Primitives.ScrollerSnapPointBase
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IScrollerSnapPointIrregular;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IScrollerSnapPointRegularFactory, public, 0x00000001)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass ScrollerSnapPointRegular : Microsoft.UI.Xaml.Controls.Primitives.ScrollerSnapPointBase
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IScrollerSnapPointRegular;
                    }
                }
            }
        }
    }
}
