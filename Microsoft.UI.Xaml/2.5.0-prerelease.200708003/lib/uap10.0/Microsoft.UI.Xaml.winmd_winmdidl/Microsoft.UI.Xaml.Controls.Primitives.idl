//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Microsoft.UI.Xaml.Controls.idl";
import "Windows.Foundation.Numerics.idl";
import "Windows.UI.idl";
import "Windows.UI.Composition.idl";
import "Windows.UI.Input.idl";
import "Windows.UI.Xaml.idl";
import "Windows.UI.Xaml.Controls.idl";
import "Windows.UI.Xaml.Data.idl";
import "Windows.UI.Xaml.Media.idl";

// Forward Declare
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                typedef enum ChainingMode ChainingMode;

                runtimeclass ColorChangedEventArgs;

                typedef enum ColorPickerHsvChannel ColorPickerHsvChannel;

                typedef enum ColorSpectrumComponents ColorSpectrumComponents;

                typedef enum ColorSpectrumShape ColorSpectrumShape;

                typedef enum ContentOrientation ContentOrientation;

                typedef enum InputKind InputKind;

                typedef enum InteractionState InteractionState;

                typedef enum RailingMode RailingMode;

                typedef struct ScrollInfo ScrollInfo;

                typedef enum ScrollMode ScrollMode;

                runtimeclass ScrollingAnchorRequestedEventArgs;

                runtimeclass ScrollingBringingIntoViewEventArgs;

                runtimeclass ScrollingScrollAnimationStartingEventArgs;

                runtimeclass ScrollingScrollCompletedEventArgs;

                runtimeclass ScrollingScrollOptions;

                runtimeclass ScrollingZoomAnimationStartingEventArgs;

                runtimeclass ScrollingZoomCompletedEventArgs;

                runtimeclass ScrollingZoomOptions;

                typedef struct ZoomInfo ZoomInfo;

                typedef enum ZoomMode ZoomMode;
            }
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        namespace Numerics
        {
            typedef struct Vector2 Vector2;

            typedef struct Vector4 Vector4;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        typedef struct Rect Rect;
    }
}
namespace Windows
{
    namespace UI
    {
        typedef struct Color Color;
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Composition
        {
            runtimeclass CompositionAnimation;

            runtimeclass CompositionPropertySet;

            runtimeclass Visual;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Input
        {
            runtimeclass PointerPoint;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                runtimeclass AutoSuggestBox;

                runtimeclass ComboBox;

                runtimeclass IconElement;

                typedef enum Orientation Orientation;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Data
            {
                interface IValueConverter;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            runtimeclass DependencyProperty;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Media
            {
                runtimeclass Brush;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            runtimeclass UIElement;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                namespace Primitives
                {
                    typedef enum CornerRadiusFilterKind CornerRadiusFilterKind;

                    typedef enum CornerRadiusToThicknessConverterKind CornerRadiusToThicknessConverterKind;

                    typedef enum ScrollSnapPointsAlignment ScrollSnapPointsAlignment;

                    interface IAutoSuggestBoxHelper;

                    interface IAutoSuggestBoxHelperStatics;

                    interface IColorPickerSlider;

                    interface IColorPickerSliderFactory;

                    interface IColorPickerSliderStatics;

                    interface IColorSpectrum;

                    interface IColorSpectrumFactory;

                    interface IColorSpectrumStatics;

                    interface IColumnMajorUniformToLargestGridLayout;

                    interface IColumnMajorUniformToLargestGridLayoutFactory;

                    interface IColumnMajorUniformToLargestGridLayoutStatics;

                    interface IComboBoxHelper;

                    interface IComboBoxHelperStatics;

                    interface ICommandBarFlyoutCommandBar;

                    interface ICommandBarFlyoutCommandBarFactory;

                    interface ICommandBarFlyoutCommandBarTemplateSettings;

                    interface ICornerRadiusFilterConverter;

                    interface ICornerRadiusFilterConverterStatics;

                    interface ICornerRadiusToThicknessConverter;

                    interface ICornerRadiusToThicknessConverterStatics;

                    interface INavigationViewItemPresenter;

                    interface INavigationViewItemPresenterFactory;

                    interface INavigationViewItemPresenterStatics;

                    interface IRepeatedScrollSnapPoint;

                    interface IRepeatedScrollSnapPointFactory;

                    interface IRepeatedZoomSnapPoint;

                    interface IRepeatedZoomSnapPointFactory;

                    interface IScrollController;

                    interface IScrollControllerInteractionRequestedEventArgs;

                    interface IScrollControllerInteractionRequestedEventArgsFactory;

                    interface IScrollControllerScrollByRequestedEventArgs;

                    interface IScrollControllerScrollByRequestedEventArgsFactory;

                    interface IScrollControllerScrollFromRequestedEventArgs;

                    interface IScrollControllerScrollFromRequestedEventArgsFactory;

                    interface IScrollControllerScrollToRequestedEventArgs;

                    interface IScrollControllerScrollToRequestedEventArgsFactory;

                    interface IScrollPresenter;

                    interface IScrollPresenterFactory;

                    interface IScrollPresenterStatics;

                    interface IScrollSnapPoint;

                    interface IScrollSnapPointBase;

                    interface IScrollSnapPointBaseFactory;

                    interface IScrollSnapPointFactory;

                    interface ISnapPointBase;

                    interface ISnapPointBaseFactory;

                    interface ITabViewListView;

                    interface ITabViewListViewFactory;

                    interface IZoomSnapPoint;

                    interface IZoomSnapPointBase;

                    interface IZoomSnapPointBaseFactory;

                    interface IZoomSnapPointFactory;

                    runtimeclass AutoSuggestBoxHelper;

                    runtimeclass ColorPickerSlider;

                    runtimeclass ColorSpectrum;

                    runtimeclass ColumnMajorUniformToLargestGridLayout;

                    runtimeclass ComboBoxHelper;

                    runtimeclass CommandBarFlyoutCommandBar;

                    runtimeclass CommandBarFlyoutCommandBarTemplateSettings;

                    runtimeclass CornerRadiusFilterConverter;

                    runtimeclass CornerRadiusToThicknessConverter;

                    runtimeclass NavigationViewItemPresenter;

                    runtimeclass RepeatedScrollSnapPoint;

                    runtimeclass RepeatedZoomSnapPoint;

                    runtimeclass ScrollControllerInteractionRequestedEventArgs;

                    runtimeclass ScrollControllerScrollByRequestedEventArgs;

                    runtimeclass ScrollControllerScrollFromRequestedEventArgs;

                    runtimeclass ScrollControllerScrollToRequestedEventArgs;

                    runtimeclass ScrollPresenter;

                    runtimeclass ScrollSnapPoint;

                    runtimeclass ScrollSnapPointBase;

                    runtimeclass SnapPointBase;

                    runtimeclass TabViewListView;

                    runtimeclass ZoomSnapPoint;

                    runtimeclass ZoomSnapPointBase;
                }
            }
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                namespace Primitives
                {
                    declare
                    {
                        interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointBase*>;

                        interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPointBase*>;

                        interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointBase*>;

                        interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPointBase*>;

                        interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointBase*>;

                        interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPointBase*>;

                        interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointBase*>;

                        interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPointBase*>;

                        interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, IInspectable*>;

                        interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerInteractionRequestedEventArgs*>;

                        interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs*>;

                        interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollFromRequestedEventArgs*>;

                        interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs*>;

                        interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter*, IInspectable*>;
                    }
                }
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                namespace Primitives
                {
                    [version(0x00000001)]
                    enum CornerRadiusFilterKind
                    {
                        None             = 0,
                        Top              = 1,
                        Right            = 2,
                        Bottom           = 3,
                        Left             = 4,
                        TopLeftValue     = 5,
                        BottomRightValue = 6
                    };

                    [version(0x00000001)]
                    enum CornerRadiusToThicknessConverterKind
                    {
                        FilterTopAndBottomFromLeft   = 0,
                        FilterTopAndBottomFromRight  = 1,
                        FilterLeftAndRightFromTop    = 2,
                        FilterLeftAndRightFromBottom = 3
                    };

                    [experimental]
                    [version(0x00000001)]
                    enum ScrollSnapPointsAlignment
                    {
                        Near   = 0,
                        Center = 1,
                        Far    = 2
                    };

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.AutoSuggestBoxHelper)]
                    [uuid(1E56736C-8248-57D9-AC04-E4E7DCC3F9E1)]
                    [version(0x00000001)]
                    interface IAutoSuggestBoxHelper : IInspectable
                    {
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.AutoSuggestBoxHelper)]
                    [uuid(1FD01B5A-71AB-5D3A-93E7-141BFD6EDF6A)]
                    [version(0x00000001)]
                    interface IAutoSuggestBoxHelperStatics : IInspectable
                    {
                        [propget] HRESULT KeepInteriorCornersSquareProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        HRESULT SetKeepInteriorCornersSquare([in] Windows.UI.Xaml.Controls.AutoSuggestBox* autoSuggestBox, [in] boolean value);
                        HRESULT GetKeepInteriorCornersSquare([in] Windows.UI.Xaml.Controls.AutoSuggestBox* autoSuggestBox, [out] [retval] boolean* result);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider)]
                    [uuid(456231BB-5A4C-564B-9B3D-2F157061A0F8)]
                    [version(0x00000001)]
                    interface IColorPickerSlider : IInspectable
                    {
                        [propget] HRESULT ColorChannel([out] [retval] Microsoft.UI.Xaml.Controls.ColorPickerHsvChannel* value);
                        [propput] HRESULT ColorChannel([in] Microsoft.UI.Xaml.Controls.ColorPickerHsvChannel value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider)]
                    [uuid(D0CB1F0E-0771-5C7D-BA14-AA431179B2AC)]
                    [version(0x00000001)]
                    interface IColorPickerSliderFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider)]
                    [uuid(9792B197-C864-59F3-9FA0-E21C7FD46B79)]
                    [version(0x00000001)]
                    interface IColorPickerSliderStatics : IInspectable
                    {
                        [propget] HRESULT ColorChannelProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum)]
                    [uuid(75305916-882D-5667-BFD0-0AF72D502D72)]
                    [version(0x00000001)]
                    interface IColorSpectrum : IInspectable
                    {
                        [propget] HRESULT Color([out] [retval] Windows.UI.Color* value);
                        [propput] HRESULT Color([in] Windows.UI.Color value);
                        [propget] HRESULT HsvColor([out] [retval] Windows.Foundation.Numerics.Vector4* value);
                        [propput] HRESULT HsvColor([in] Windows.Foundation.Numerics.Vector4 value);
                        [propget] HRESULT MinHue([out] [retval] INT32* value);
                        [propput] HRESULT MinHue([in] INT32 value);
                        [propget] HRESULT MaxHue([out] [retval] INT32* value);
                        [propput] HRESULT MaxHue([in] INT32 value);
                        [propget] HRESULT MinSaturation([out] [retval] INT32* value);
                        [propput] HRESULT MinSaturation([in] INT32 value);
                        [propget] HRESULT MaxSaturation([out] [retval] INT32* value);
                        [propput] HRESULT MaxSaturation([in] INT32 value);
                        [propget] HRESULT MinValue([out] [retval] INT32* value);
                        [propput] HRESULT MinValue([in] INT32 value);
                        [propget] HRESULT MaxValue([out] [retval] INT32* value);
                        [propput] HRESULT MaxValue([in] INT32 value);
                        [propget] HRESULT Shape([out] [retval] Microsoft.UI.Xaml.Controls.ColorSpectrumShape* value);
                        [propput] HRESULT Shape([in] Microsoft.UI.Xaml.Controls.ColorSpectrumShape value);
                        [propget] HRESULT Components([out] [retval] Microsoft.UI.Xaml.Controls.ColorSpectrumComponents* value);
                        [propput] HRESULT Components([in] Microsoft.UI.Xaml.Controls.ColorSpectrumComponents value);
                        [eventadd] HRESULT ColorChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum*, Microsoft.UI.Xaml.Controls.ColorChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT ColorChanged([in] EventRegistrationToken token);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum)]
                    [uuid(EFECD442-8C2A-50A6-88A3-3999EA01F096)]
                    [version(0x00000001)]
                    interface IColorSpectrumFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum)]
                    [uuid(AA1D251D-9E7B-5767-ADB9-FCD36855D82E)]
                    [version(0x00000001)]
                    interface IColorSpectrumStatics : IInspectable
                    {
                        [propget] HRESULT ColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT HsvColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT MinHueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT MaxHueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT MinSaturationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT MaxSaturationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT MinValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT MaxValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ShapeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ComponentsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ColumnMajorUniformToLargestGridLayout)]
                    [uuid(EE10A6AA-EFEB-51AC-B791-71913AE8C235)]
                    [version(0x00000001)]
                    interface IColumnMajorUniformToLargestGridLayout : IInspectable
                    {
                        [propget] HRESULT MaxColumns([out] [retval] INT32* value);
                        [propput] HRESULT MaxColumns([in] INT32 value);
                        [propget] HRESULT ColumnSpacing([out] [retval] DOUBLE* value);
                        [propput] HRESULT ColumnSpacing([in] DOUBLE value);
                        [propget] HRESULT RowSpacing([out] [retval] DOUBLE* value);
                        [propput] HRESULT RowSpacing([in] DOUBLE value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ColumnMajorUniformToLargestGridLayout)]
                    [uuid(2F21AF59-1585-5325-8412-2B83BF05D345)]
                    [version(0x00000001)]
                    interface IColumnMajorUniformToLargestGridLayoutFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ColumnMajorUniformToLargestGridLayout** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ColumnMajorUniformToLargestGridLayout)]
                    [uuid(29A1AC22-EE31-501F-94F8-A00D338F100A)]
                    [version(0x00000001)]
                    interface IColumnMajorUniformToLargestGridLayoutStatics : IInspectable
                    {
                        [propget] HRESULT MaxColumnsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ColumnSpacingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT RowSpacingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ComboBoxHelper)]
                    [uuid(5A3C87AC-C399-5E5F-873F-B9D0E8BCCEB7)]
                    [version(0x00000001)]
                    interface IComboBoxHelper : IInspectable
                    {
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ComboBoxHelper)]
                    [uuid(59B4EB2D-BD79-59B2-B343-FA72C747D72A)]
                    [version(0x00000001)]
                    interface IComboBoxHelperStatics : IInspectable
                    {
                        [propget] HRESULT KeepInteriorCornersSquareProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        HRESULT SetKeepInteriorCornersSquare([in] Windows.UI.Xaml.Controls.ComboBox* comboBox, [in] boolean value);
                        HRESULT GetKeepInteriorCornersSquare([in] Windows.UI.Xaml.Controls.ComboBox* comboBox, [out] [retval] boolean* result);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar)]
                    [uuid(0F7120C5-6D00-5489-9171-BEDD2D4EF677)]
                    [version(0x00000001)]
                    interface ICommandBarFlyoutCommandBar : IInspectable
                    {
                        [propget] HRESULT FlyoutTemplateSettings([out] [retval] Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar)]
                    [uuid(58DBCDA9-38E4-5EFC-B740-26FDA3D0A3C6)]
                    [version(0x00000001)]
                    interface ICommandBarFlyoutCommandBarFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings)]
                    [uuid(533CC5CA-DCF7-5F9D-A460-934A883ACDC1)]
                    [version(0x00000001)]
                    interface ICommandBarFlyoutCommandBarTemplateSettings : IInspectable
                    {
                        [propget] HRESULT OpenAnimationStartPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT OpenAnimationEndPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT CloseAnimationEndPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT CurrentWidth([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandedWidth([out] [retval] DOUBLE* value);
                        [propget] HRESULT WidthExpansionDelta([out] [retval] DOUBLE* value);
                        [propget] HRESULT WidthExpansionAnimationStartPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT WidthExpansionAnimationEndPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT WidthExpansionMoreButtonAnimationStartPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT WidthExpansionMoreButtonAnimationEndPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandUpOverflowVerticalPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandDownOverflowVerticalPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandUpAnimationStartPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandUpAnimationEndPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandUpAnimationHoldPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandDownAnimationStartPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandDownAnimationEndPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandDownAnimationHoldPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ContentClipRect([out] [retval] Windows.Foundation.Rect* value);
                        [propget] HRESULT OverflowContentClipRect([out] [retval] Windows.Foundation.Rect* value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterConverter)]
                    [uuid(6F1A3ED2-F965-545E-BD44-441DB1794F5F)]
                    [version(0x00000001)]
                    interface ICornerRadiusFilterConverter : IInspectable
                    {
                        [propget] HRESULT Filter([out] [retval] Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterKind* value);
                        [propput] HRESULT Filter([in] Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterKind value);
                        [propget] HRESULT Scale([out] [retval] DOUBLE* value);
                        [propput] HRESULT Scale([in] DOUBLE value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterConverter)]
                    [uuid(F1A547F3-4C0E-5F23-9F1E-A4C08CABDE88)]
                    [version(0x00000001)]
                    interface ICornerRadiusFilterConverterStatics : IInspectable
                    {
                        [propget] HRESULT FilterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ScaleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverter)]
                    [uuid(04F7ECA4-89C2-5731-AFF9-6B66B0A0C01E)]
                    [version(0x00000001)]
                    interface ICornerRadiusToThicknessConverter : IInspectable
                    {
                        [propget] HRESULT ConversionKind([out] [retval] Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverterKind* value);
                        [propput] HRESULT ConversionKind([in] Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverterKind value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverter)]
                    [uuid(0409BA7E-9267-573E-9377-FF8A2BD9C62D)]
                    [version(0x00000001)]
                    interface ICornerRadiusToThicknessConverterStatics : IInspectable
                    {
                        [propget] HRESULT ConversionKindProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter)]
                    [uuid(6C43C315-DE90-520E-906B-8317B7564B97)]
                    [version(0x00000001)]
                    interface INavigationViewItemPresenter : IInspectable
                    {
                        [propget] HRESULT Icon([out] [retval] Windows.UI.Xaml.Controls.IconElement** value);
                        [propput] HRESULT Icon([in] Windows.UI.Xaml.Controls.IconElement* value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter)]
                    [uuid(B28B0160-022C-593C-AB9A-7B3DED2C0754)]
                    [version(0x00000001)]
                    interface INavigationViewItemPresenterFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter)]
                    [uuid(48265FC1-761E-5F41-8166-FA51733A45EF)]
                    [version(0x00000001)]
                    interface INavigationViewItemPresenterStatics : IInspectable
                    {
                        [propget] HRESULT IconProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.RepeatedScrollSnapPoint)]
                    [experimental]
                    [uuid(5828FB51-8EBB-596D-A871-50063479362D)]
                    [version(0x00000001)]
                    interface IRepeatedScrollSnapPoint : IInspectable
                    {
                        [propget] HRESULT Offset([out] [retval] DOUBLE* value);
                        [propget] HRESULT Interval([out] [retval] DOUBLE* value);
                        [propget] HRESULT Start([out] [retval] DOUBLE* value);
                        [propget] HRESULT End([out] [retval] DOUBLE* value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.RepeatedScrollSnapPoint)]
                    [experimental]
                    [uuid(F2FD8403-679E-5C31-B431-72A0E0014E6A)]
                    [version(0x00000001)]
                    interface IRepeatedScrollSnapPointFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] DOUBLE offset, [in] DOUBLE interval, [in] DOUBLE start, [in] DOUBLE end, [in] Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointsAlignment alignment, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.RepeatedScrollSnapPoint** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.RepeatedZoomSnapPoint)]
                    [experimental]
                    [uuid(1FA6DBBE-5E11-5D32-873B-C92B1D171538)]
                    [version(0x00000001)]
                    interface IRepeatedZoomSnapPoint : IInspectable
                    {
                        [propget] HRESULT Offset([out] [retval] DOUBLE* value);
                        [propget] HRESULT Interval([out] [retval] DOUBLE* value);
                        [propget] HRESULT Start([out] [retval] DOUBLE* value);
                        [propget] HRESULT End([out] [retval] DOUBLE* value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.RepeatedZoomSnapPoint)]
                    [experimental]
                    [uuid(7D032A7C-D91C-5660-B1C2-B36E8810AC65)]
                    [version(0x00000001)]
                    interface IRepeatedZoomSnapPointFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] DOUBLE offset, [in] DOUBLE interval, [in] DOUBLE start, [in] DOUBLE end, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.RepeatedZoomSnapPoint** value);
                    }

                    [experimental]
                    [uuid(B1DF52E4-8B76-54C2-B000-3BA4FC6ABE9D)]
                    [version(0x00000001)]
                    interface IScrollController : IInspectable
                    {
                        [propget] HRESULT AreScrollControllerInteractionsAllowed([out] [retval] boolean* value);
                        [propget] HRESULT AreScrollerInteractionsAllowed([out] [retval] boolean* value);
                        [propget] HRESULT IsInteracting([out] [retval] boolean* value);
                        [propget] HRESULT IsInteractionVisualRailEnabled([out] [retval] boolean* value);
                        [propget] HRESULT InteractionVisual([out] [retval] Windows.UI.Composition.Visual** value);
                        [propget] HRESULT InteractionVisualScrollOrientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                        HRESULT SetExpressionAnimationSources([in] Windows.UI.Composition.CompositionPropertySet* propertySet, [in] HSTRING minOffsetPropertyName, [in] HSTRING maxOffsetPropertyName, [in] HSTRING offsetPropertyName, [in] HSTRING multiplierPropertyName);
                        HRESULT SetScrollMode([in] Microsoft.UI.Xaml.Controls.ScrollMode scrollMode);
                        HRESULT SetValues([in] DOUBLE minOffset, [in] DOUBLE maxOffset, [in] DOUBLE offset, [in] DOUBLE viewport);
                        HRESULT GetScrollAnimation([in] Microsoft.UI.Xaml.Controls.ScrollInfo info, [in] Windows.Foundation.Numerics.Vector2 currentPosition, [in] Windows.UI.Composition.CompositionAnimation* defaultAnimation, [out] [retval] Windows.UI.Composition.CompositionAnimation** result);
                        HRESULT OnScrollCompleted([in] Microsoft.UI.Xaml.Controls.ScrollInfo info);
                        [eventadd] HRESULT ScrollToRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT ScrollToRequested([in] EventRegistrationToken token);
                        [eventadd] HRESULT ScrollByRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT ScrollByRequested([in] EventRegistrationToken token);
                        [eventadd] HRESULT ScrollFromRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollFromRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT ScrollFromRequested([in] EventRegistrationToken token);
                        [eventadd] HRESULT InteractionRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerInteractionRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT InteractionRequested([in] EventRegistrationToken token);
                        [eventadd] HRESULT InteractionInfoChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT InteractionInfoChanged([in] EventRegistrationToken token);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerInteractionRequestedEventArgs)]
                    [experimental]
                    [uuid(9CA050FA-6A7B-5BED-9E26-8F2DA0EE73A1)]
                    [version(0x00000001)]
                    interface IScrollControllerInteractionRequestedEventArgs : IInspectable
                    {
                        [propget] HRESULT PointerPoint([out] [retval] Windows.UI.Input.PointerPoint** value);
                        [propget] HRESULT Handled([out] [retval] boolean* value);
                        [propput] HRESULT Handled([in] boolean value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerInteractionRequestedEventArgs)]
                    [experimental]
                    [uuid(1CCE9A33-698D-54DC-B144-D68B9E7B76C2)]
                    [version(0x00000001)]
                    interface IScrollControllerInteractionRequestedEventArgsFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] Windows.UI.Input.PointerPoint* pointerPoint, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerInteractionRequestedEventArgs** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs)]
                    [experimental]
                    [uuid(F8D027F8-E2C1-58E7-BAC4-C98DD7C7B5C4)]
                    [version(0x00000001)]
                    interface IScrollControllerScrollByRequestedEventArgs : IInspectable
                    {
                        [propget] HRESULT OffsetDelta([out] [retval] DOUBLE* value);
                        [propget] HRESULT Options([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingScrollOptions** value);
                        [propget] HRESULT Info([out] [retval] Microsoft.UI.Xaml.Controls.ScrollInfo* value);
                        [propput] HRESULT Info([in] Microsoft.UI.Xaml.Controls.ScrollInfo value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs)]
                    [experimental]
                    [uuid(7ECF01A7-EF3F-5AF9-93B4-38BC1BAFD335)]
                    [version(0x00000001)]
                    interface IScrollControllerScrollByRequestedEventArgsFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] DOUBLE offsetDelta, [in] Microsoft.UI.Xaml.Controls.ScrollingScrollOptions* options, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollFromRequestedEventArgs)]
                    [experimental]
                    [uuid(CFB817EB-2A20-550B-97BC-BD15BADA69EC)]
                    [version(0x00000001)]
                    interface IScrollControllerScrollFromRequestedEventArgs : IInspectable
                    {
                        [propget] HRESULT OffsetVelocity([out] [retval] FLOAT* value);
                        [propget] HRESULT InertiaDecayRate([out] [retval] Windows.Foundation.IReference<FLOAT>** value);
                        [propget] HRESULT Info([out] [retval] Microsoft.UI.Xaml.Controls.ScrollInfo* value);
                        [propput] HRESULT Info([in] Microsoft.UI.Xaml.Controls.ScrollInfo value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollFromRequestedEventArgs)]
                    [experimental]
                    [uuid(0C4F8B39-D458-51DA-B7B7-BE899D0D9835)]
                    [version(0x00000001)]
                    interface IScrollControllerScrollFromRequestedEventArgsFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] FLOAT offsetVelocity, [in] Windows.Foundation.IReference<FLOAT>* inertiaDecayRate, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollFromRequestedEventArgs** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs)]
                    [experimental]
                    [uuid(8D519827-0A3F-5953-8FB7-1E236B8847AB)]
                    [version(0x00000001)]
                    interface IScrollControllerScrollToRequestedEventArgs : IInspectable
                    {
                        [propget] HRESULT Offset([out] [retval] DOUBLE* value);
                        [propget] HRESULT Options([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingScrollOptions** value);
                        [propget] HRESULT Info([out] [retval] Microsoft.UI.Xaml.Controls.ScrollInfo* value);
                        [propput] HRESULT Info([in] Microsoft.UI.Xaml.Controls.ScrollInfo value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs)]
                    [experimental]
                    [uuid(01675DC4-1074-54E8-BEBB-66B03A33DA0D)]
                    [version(0x00000001)]
                    interface IScrollControllerScrollToRequestedEventArgsFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] DOUBLE offset, [in] Microsoft.UI.Xaml.Controls.ScrollingScrollOptions* options, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter)]
                    [experimental]
                    [uuid(EC4E01B9-FBD1-5C15-B224-25DE22A88341)]
                    [version(0x00000001)]
                    interface IScrollPresenter : IInspectable
                    {
                        [propget] HRESULT Background([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                        [propput] HRESULT Background([in] Windows.UI.Xaml.Media.Brush* value);
                        [propget] HRESULT Content([out] [retval] Windows.UI.Xaml.UIElement** value);
                        [propput] HRESULT Content([in] Windows.UI.Xaml.UIElement* value);
                        [propget] HRESULT ExpressionAnimationSources([out] [retval] Windows.UI.Composition.CompositionPropertySet** value);
                        [propget] HRESULT HorizontalOffset([out] [retval] DOUBLE* value);
                        [propget] HRESULT VerticalOffset([out] [retval] DOUBLE* value);
                        [propget] HRESULT ZoomFactor([out] [retval] FLOAT* value);
                        [propget] HRESULT ExtentWidth([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExtentHeight([out] [retval] DOUBLE* value);
                        [propget] HRESULT ViewportWidth([out] [retval] DOUBLE* value);
                        [propget] HRESULT ViewportHeight([out] [retval] DOUBLE* value);
                        [propget] HRESULT ScrollableWidth([out] [retval] DOUBLE* value);
                        [propget] HRESULT ScrollableHeight([out] [retval] DOUBLE* value);
                        [propget] HRESULT ContentOrientation([out] [retval] Microsoft.UI.Xaml.Controls.ContentOrientation* value);
                        [propput] HRESULT ContentOrientation([in] Microsoft.UI.Xaml.Controls.ContentOrientation value);
                        [propget] HRESULT HorizontalScrollChainingMode([out] [retval] Microsoft.UI.Xaml.Controls.ChainingMode* value);
                        [propput] HRESULT HorizontalScrollChainingMode([in] Microsoft.UI.Xaml.Controls.ChainingMode value);
                        [propget] HRESULT VerticalScrollChainingMode([out] [retval] Microsoft.UI.Xaml.Controls.ChainingMode* value);
                        [propput] HRESULT VerticalScrollChainingMode([in] Microsoft.UI.Xaml.Controls.ChainingMode value);
                        [propget] HRESULT HorizontalScrollRailingMode([out] [retval] Microsoft.UI.Xaml.Controls.RailingMode* value);
                        [propput] HRESULT HorizontalScrollRailingMode([in] Microsoft.UI.Xaml.Controls.RailingMode value);
                        [propget] HRESULT VerticalScrollRailingMode([out] [retval] Microsoft.UI.Xaml.Controls.RailingMode* value);
                        [propput] HRESULT VerticalScrollRailingMode([in] Microsoft.UI.Xaml.Controls.RailingMode value);
                        [propget] HRESULT HorizontalScrollMode([out] [retval] Microsoft.UI.Xaml.Controls.ScrollMode* value);
                        [propput] HRESULT HorizontalScrollMode([in] Microsoft.UI.Xaml.Controls.ScrollMode value);
                        [propget] HRESULT VerticalScrollMode([out] [retval] Microsoft.UI.Xaml.Controls.ScrollMode* value);
                        [propput] HRESULT VerticalScrollMode([in] Microsoft.UI.Xaml.Controls.ScrollMode value);
                        [propget] HRESULT ZoomChainingMode([out] [retval] Microsoft.UI.Xaml.Controls.ChainingMode* value);
                        [propput] HRESULT ZoomChainingMode([in] Microsoft.UI.Xaml.Controls.ChainingMode value);
                        [propget] HRESULT ZoomMode([out] [retval] Microsoft.UI.Xaml.Controls.ZoomMode* value);
                        [propput] HRESULT ZoomMode([in] Microsoft.UI.Xaml.Controls.ZoomMode value);
                        [propget] HRESULT IgnoredInputKind([out] [retval] Microsoft.UI.Xaml.Controls.InputKind* value);
                        [propput] HRESULT IgnoredInputKind([in] Microsoft.UI.Xaml.Controls.InputKind value);
                        [propget] HRESULT MinZoomFactor([out] [retval] DOUBLE* value);
                        [propput] HRESULT MinZoomFactor([in] DOUBLE value);
                        [propget] HRESULT MaxZoomFactor([out] [retval] DOUBLE* value);
                        [propput] HRESULT MaxZoomFactor([in] DOUBLE value);
                        [propget] HRESULT State([out] [retval] Microsoft.UI.Xaml.Controls.InteractionState* value);
                        [propget] HRESULT HorizontalScrollController([out] [retval] Microsoft.UI.Xaml.Controls.Primitives.IScrollController** value);
                        [propput] HRESULT HorizontalScrollController([in] Microsoft.UI.Xaml.Controls.Primitives.IScrollController* value);
                        [propget] HRESULT VerticalScrollController([out] [retval] Microsoft.UI.Xaml.Controls.Primitives.IScrollController** value);
                        [propput] HRESULT VerticalScrollController([in] Microsoft.UI.Xaml.Controls.Primitives.IScrollController* value);
                        [propget] HRESULT HorizontalAnchorRatio([out] [retval] DOUBLE* value);
                        [propput] HRESULT HorizontalAnchorRatio([in] DOUBLE value);
                        [propget] HRESULT VerticalAnchorRatio([out] [retval] DOUBLE* value);
                        [propput] HRESULT VerticalAnchorRatio([in] DOUBLE value);
                        [propget] HRESULT HorizontalSnapPoints([out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointBase*>** value);
                        [propget] HRESULT VerticalSnapPoints([out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointBase*>** value);
                        [propget] HRESULT ZoomSnapPoints([out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPointBase*>** value);
                        [overload("ScrollTo")] HRESULT ScrollTo([in] DOUBLE horizontalOffset, [in] DOUBLE verticalOffset, [out] [retval] Microsoft.UI.Xaml.Controls.ScrollInfo* result);
                        [overload("ScrollTo")] HRESULT ScrollToWithOptions([in] DOUBLE horizontalOffset, [in] DOUBLE verticalOffset, [in] Microsoft.UI.Xaml.Controls.ScrollingScrollOptions* options, [out] [retval] Microsoft.UI.Xaml.Controls.ScrollInfo* result);
                        [overload("ScrollBy")] HRESULT ScrollBy([in] DOUBLE horizontalOffsetDelta, [in] DOUBLE verticalOffsetDelta, [out] [retval] Microsoft.UI.Xaml.Controls.ScrollInfo* result);
                        [overload("ScrollBy")] HRESULT ScrollByWithOptions([in] DOUBLE horizontalOffsetDelta, [in] DOUBLE verticalOffsetDelta, [in] Microsoft.UI.Xaml.Controls.ScrollingScrollOptions* options, [out] [retval] Microsoft.UI.Xaml.Controls.ScrollInfo* result);
                        HRESULT ScrollFrom([in] Windows.Foundation.Numerics.Vector2 offsetsVelocity, [in] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector2>* inertiaDecayRate, [out] [retval] Microsoft.UI.Xaml.Controls.ScrollInfo* result);
                        [overload("ZoomTo")] HRESULT ZoomTo([in] FLOAT zoomFactor, [in] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector2>* centerPoint, [out] [retval] Microsoft.UI.Xaml.Controls.ZoomInfo* result);
                        [overload("ZoomTo")] HRESULT ZoomToWithOptions([in] FLOAT zoomFactor, [in] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector2>* centerPoint, [in] Microsoft.UI.Xaml.Controls.ScrollingZoomOptions* options, [out] [retval] Microsoft.UI.Xaml.Controls.ZoomInfo* result);
                        [overload("ZoomBy")] HRESULT ZoomBy([in] FLOAT zoomFactorDelta, [in] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector2>* centerPoint, [out] [retval] Microsoft.UI.Xaml.Controls.ZoomInfo* result);
                        [overload("ZoomBy")] HRESULT ZoomByWithOptions([in] FLOAT zoomFactorDelta, [in] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector2>* centerPoint, [in] Microsoft.UI.Xaml.Controls.ScrollingZoomOptions* options, [out] [retval] Microsoft.UI.Xaml.Controls.ZoomInfo* result);
                        HRESULT ZoomFrom([in] FLOAT zoomFactorVelocity, [in] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector2>* centerPoint, [in] Windows.Foundation.IReference<FLOAT>* inertiaDecayRate, [out] [retval] Microsoft.UI.Xaml.Controls.ZoomInfo* result);
                        [eventadd] HRESULT ExtentChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT ExtentChanged([in] EventRegistrationToken token);
                        [eventadd] HRESULT StateChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT StateChanged([in] EventRegistrationToken token);
                        [eventadd] HRESULT ViewChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT ViewChanged([in] EventRegistrationToken token);
                        [eventadd] HRESULT ScrollAnimationStarting([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter*, Microsoft.UI.Xaml.Controls.ScrollingScrollAnimationStartingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT ScrollAnimationStarting([in] EventRegistrationToken token);
                        [eventadd] HRESULT ZoomAnimationStarting([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter*, Microsoft.UI.Xaml.Controls.ScrollingZoomAnimationStartingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT ZoomAnimationStarting([in] EventRegistrationToken token);
                        [eventadd] HRESULT ScrollCompleted([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter*, Microsoft.UI.Xaml.Controls.ScrollingScrollCompletedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT ScrollCompleted([in] EventRegistrationToken token);
                        [eventadd] HRESULT ZoomCompleted([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter*, Microsoft.UI.Xaml.Controls.ScrollingZoomCompletedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT ZoomCompleted([in] EventRegistrationToken token);
                        [eventadd] HRESULT BringingIntoView([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter*, Microsoft.UI.Xaml.Controls.ScrollingBringingIntoViewEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT BringingIntoView([in] EventRegistrationToken token);
                        [eventadd] HRESULT AnchorRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter*, Microsoft.UI.Xaml.Controls.ScrollingAnchorRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT AnchorRequested([in] EventRegistrationToken token);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter)]
                    [experimental]
                    [uuid(9F5CDC57-D229-52B2-AEE4-37C496764EA3)]
                    [version(0x00000001)]
                    interface IScrollPresenterFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter)]
                    [experimental]
                    [uuid(6CE9F412-D609-5DA0-808C-28E7EF496489)]
                    [version(0x00000001)]
                    interface IScrollPresenterStatics : IInspectable
                    {
                        [propget] HRESULT BackgroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ContentOrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT HorizontalScrollChainingModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT VerticalScrollChainingModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT HorizontalScrollRailingModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT VerticalScrollRailingModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT HorizontalScrollModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT VerticalScrollModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ZoomChainingModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ZoomModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT IgnoredInputKindProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT MinZoomFactorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT MaxZoomFactorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT HorizontalAnchorRatioProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT VerticalAnchorRatioProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPoint)]
                    [experimental]
                    [uuid(73D918FF-D16C-52CD-9657-E392EE08868A)]
                    [version(0x00000001)]
                    interface IScrollSnapPoint : IInspectable
                    {
                        [propget] HRESULT Value([out] [retval] DOUBLE* value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointBase)]
                    [experimental]
                    [uuid(45D7319D-C9EB-5109-9668-FF3FC6CCDF11)]
                    [version(0x00000001)]
                    interface IScrollSnapPointBase : IInspectable
                    {
                        [propget] HRESULT Alignment([out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointsAlignment* value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointBase)]
                    [experimental]
                    [uuid(3FA2E552-1A45-5691-99DC-6400087CBB38)]
                    [version(0x00000001)]
                    interface IScrollSnapPointBaseFactory : IInspectable
                    {
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPoint)]
                    [experimental]
                    [uuid(39304BC7-0E54-5C06-8920-ADCF67E7C466)]
                    [version(0x00000001)]
                    interface IScrollSnapPointFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] DOUBLE snapPointValue, [in] Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointsAlignment alignment, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPoint** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.SnapPointBase)]
                    [experimental]
                    [uuid(14ED1089-FB97-5211-8C45-C352CD8B96A1)]
                    [version(0x00000001)]
                    interface ISnapPointBase : IInspectable
                    {
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.SnapPointBase)]
                    [experimental]
                    [uuid(50266508-15F8-530A-A213-E976E04E670B)]
                    [version(0x00000001)]
                    interface ISnapPointBaseFactory : IInspectable
                    {
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.TabViewListView)]
                    [uuid(EC48EFB5-2CB3-562B-921C-E554923CE1D5)]
                    [version(0x00000001)]
                    interface ITabViewListView : IInspectable
                    {
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.TabViewListView)]
                    [uuid(8A084FDD-86F0-51EE-98DF-5FBD0B5669BE)]
                    [version(0x00000001)]
                    interface ITabViewListViewFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.TabViewListView** value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPoint)]
                    [experimental]
                    [uuid(8101D353-8DB3-5AC6-A7F8-B18EB9C123AC)]
                    [version(0x00000001)]
                    interface IZoomSnapPoint : IInspectable
                    {
                        [propget] HRESULT Value([out] [retval] DOUBLE* value);
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPointBase)]
                    [experimental]
                    [uuid(C6D08756-0860-5C2D-ABEC-6EB4AA4B53D7)]
                    [version(0x00000001)]
                    interface IZoomSnapPointBase : IInspectable
                    {
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPointBase)]
                    [experimental]
                    [uuid(2C689EEA-B6CF-5024-847B-589355D5A2FA)]
                    [version(0x00000001)]
                    interface IZoomSnapPointBaseFactory : IInspectable
                    {
                    }

                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPoint)]
                    [experimental]
                    [uuid(0B3B5418-BFF6-5A9E-B734-B68ADF49F775)]
                    [version(0x00000001)]
                    interface IZoomSnapPointFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] DOUBLE snapPointValue, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPoint** value);
                    }

                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.IAutoSuggestBoxHelperStatics, 0x00000001)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass AutoSuggestBoxHelper
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.IAutoSuggestBoxHelper;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSliderFactory, public, 0x00000001)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSliderStatics, 0x00000001)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass ColorPickerSlider : Windows.UI.Xaml.Controls.Slider
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSlider;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumFactory, public, 0x00000001)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics, 0x00000001)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass ColorSpectrum : Windows.UI.Xaml.Controls.Control
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayoutFactory, public, 0x00000001)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayoutStatics, 0x00000001)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass ColumnMajorUniformToLargestGridLayout : Microsoft.UI.Xaml.Controls.NonVirtualizingLayout
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayout;
                    }

                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.IComboBoxHelperStatics, 0x00000001)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass ComboBoxHelper
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.IComboBoxHelper;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarFactory, public, 0x00000001)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass CommandBarFlyoutCommandBar : Windows.UI.Xaml.Controls.CommandBar
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBar;
                    }

                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass CommandBarFlyoutCommandBarTemplateSettings : Windows.UI.Xaml.DependencyObject
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings;
                    }

                    [activatable(0x00000001)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusFilterConverterStatics, 0x00000001)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass CornerRadiusFilterConverter : Windows.UI.Xaml.DependencyObject
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusFilterConverter;
                        interface Windows.UI.Xaml.Data.IValueConverter;
                    }

                    [activatable(0x00000001)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusToThicknessConverterStatics, 0x00000001)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass CornerRadiusToThicknessConverter : Windows.UI.Xaml.DependencyObject
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusToThicknessConverter;
                        interface Windows.UI.Xaml.Data.IValueConverter;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterFactory, public, 0x00000001)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterStatics, 0x00000001)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass NavigationViewItemPresenter : Windows.UI.Xaml.Controls.ContentControl
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenter;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IRepeatedScrollSnapPointFactory, public, 0x00000001)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass RepeatedScrollSnapPoint : Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointBase
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IRepeatedScrollSnapPoint;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IRepeatedZoomSnapPointFactory, public, 0x00000001)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass RepeatedZoomSnapPoint : Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPointBase
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IRepeatedZoomSnapPoint;
                    }

                    [activatable(Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerInteractionRequestedEventArgsFactory, 0x00000001)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass ScrollControllerInteractionRequestedEventArgs
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerInteractionRequestedEventArgs;
                    }

                    [activatable(Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerScrollByRequestedEventArgsFactory, 0x00000001)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass ScrollControllerScrollByRequestedEventArgs
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerScrollByRequestedEventArgs;
                    }

                    [activatable(Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerScrollFromRequestedEventArgsFactory, 0x00000001)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass ScrollControllerScrollFromRequestedEventArgs
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerScrollFromRequestedEventArgs;
                    }

                    [activatable(Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerScrollToRequestedEventArgsFactory, 0x00000001)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass ScrollControllerScrollToRequestedEventArgs
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerScrollToRequestedEventArgs;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IScrollPresenterFactory, public, 0x00000001)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.IScrollPresenterStatics, 0x00000001)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass ScrollPresenter : Windows.UI.Xaml.FrameworkElement
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IScrollPresenter;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointFactory, public, 0x00000001)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass ScrollSnapPoint : Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointBase
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPoint;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointBaseFactory, public, 0x00000001)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass ScrollSnapPointBase : Microsoft.UI.Xaml.Controls.Primitives.SnapPointBase
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointBase;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.ISnapPointBaseFactory, public, 0x00000001)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass SnapPointBase : Windows.UI.Xaml.DependencyObject
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.ISnapPointBase;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.ITabViewListViewFactory, public, 0x00000001)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass TabViewListView : Windows.UI.Xaml.Controls.ListView
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.ITabViewListView;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IZoomSnapPointFactory, public, 0x00000001)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass ZoomSnapPoint : Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPointBase
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IZoomSnapPoint;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IZoomSnapPointBaseFactory, public, 0x00000001)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x00000001)]
                    runtimeclass ZoomSnapPointBase : Microsoft.UI.Xaml.Controls.Primitives.SnapPointBase
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IZoomSnapPointBase;
                    }
                }
            }
        }
    }
}
