//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Microsoft.UI.Xaml.idl";
import "Microsoft.UI.Xaml.Controls.Primitives.idl";
import "Microsoft.Web.WebView2.Core.idl";
import "Windows.ApplicationModel.Contacts.idl";
import "Windows.ApplicationModel.DataTransfer.idl";
import "Windows.Foundation.Numerics.idl";
import "Windows.Globalization.NumberFormatting.idl";
import "Windows.UI.idl";
import "Windows.UI.Composition.idl";
import "Windows.UI.Text.idl";
import "Windows.UI.Xaml.idl";
import "Windows.UI.Xaml.Controls.idl";
import "Windows.UI.Xaml.Controls.Primitives.idl";
import "Windows.UI.Xaml.Data.idl";
import "Windows.UI.Xaml.Input.idl";
import "Windows.UI.Xaml.Interop.idl";
import "Windows.UI.Xaml.Media.idl";
import "Windows.UI.Xaml.Media.Animation.idl";

// Forward Declare
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                namespace Primitives
                {
                    runtimeclass ColorSpectrum;

                    runtimeclass ScrollPresenter;
                }
            }
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            apicontract XamlContract;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                typedef enum AnimationContext AnimationContext;

                typedef enum ColorPickerHsvChannel ColorPickerHsvChannel;

                typedef enum ColorSpectrumComponents ColorSpectrumComponents;

                typedef enum ColorSpectrumShape ColorSpectrumShape;

                typedef enum ControlsResourcesVersion ControlsResourcesVersion;

                typedef enum ElementRealizationOptions ElementRealizationOptions;

                typedef enum ExpandDirection ExpandDirection;

                typedef enum FlowLayoutLineAlignment FlowLayoutLineAlignment;

                typedef enum InfoBarCloseReason InfoBarCloseReason;

                typedef enum InfoBarSeverity InfoBarSeverity;

                typedef enum NavigationViewBackButtonVisible NavigationViewBackButtonVisible;

                typedef enum NavigationViewDisplayMode NavigationViewDisplayMode;

                typedef enum NavigationViewOverflowLabelMode NavigationViewOverflowLabelMode;

                typedef enum NavigationViewPaneDisplayMode NavigationViewPaneDisplayMode;

                typedef enum NavigationViewSelectionFollowsFocus NavigationViewSelectionFollowsFocus;

                typedef enum NavigationViewShoulderNavigationEnabled NavigationViewShoulderNavigationEnabled;

                typedef enum NumberBoxSpinButtonPlacementMode NumberBoxSpinButtonPlacementMode;

                typedef enum NumberBoxValidationMode NumberBoxValidationMode;

                typedef enum PagerControlButtonVisibility PagerControlButtonVisibility;

                typedef enum PagerControlDisplayMode PagerControlDisplayMode;

                typedef enum ParallaxSourceOffsetKind ParallaxSourceOffsetKind;

                typedef enum PipsPagerButtonVisibility PipsPagerButtonVisibility;

                typedef enum RefreshPullDirection RefreshPullDirection;

                typedef enum RefreshVisualizerOrientation RefreshVisualizerOrientation;

                typedef enum RefreshVisualizerState RefreshVisualizerState;

                typedef enum ScrollingAnimationMode ScrollingAnimationMode;

                typedef enum ScrollingChainMode ScrollingChainMode;

                typedef enum ScrollingContentOrientation ScrollingContentOrientation;

                typedef enum ScrollingInputKinds ScrollingInputKinds;

                typedef enum ScrollingInteractionState ScrollingInteractionState;

                typedef enum ScrollingRailMode ScrollingRailMode;

                typedef enum ScrollingScrollBarVisibility ScrollingScrollBarVisibility;

                typedef enum ScrollingScrollMode ScrollingScrollMode;

                typedef enum ScrollingSnapPointsMode ScrollingSnapPointsMode;

                typedef enum ScrollingZoomMode ScrollingZoomMode;

                typedef enum StylesVersion StylesVersion;

                typedef enum SwipeBehaviorOnInvoked SwipeBehaviorOnInvoked;

                typedef enum SwipeMode SwipeMode;

                typedef enum TabViewCloseButtonOverlayMode TabViewCloseButtonOverlayMode;

                typedef enum TabViewWidthMode TabViewWidthMode;

                typedef enum TeachingTipCloseReason TeachingTipCloseReason;

                typedef enum TeachingTipHeroContentPlacementMode TeachingTipHeroContentPlacementMode;

                typedef enum TeachingTipPlacementMode TeachingTipPlacementMode;

                typedef enum TeachingTipTailVisibility TeachingTipTailVisibility;

                typedef enum TreeViewSelectionMode TreeViewSelectionMode;

                typedef enum TwoPaneViewMode TwoPaneViewMode;

                typedef enum TwoPaneViewPriority TwoPaneViewPriority;

                typedef enum TwoPaneViewTallModeConfiguration TwoPaneViewTallModeConfiguration;

                typedef enum TwoPaneViewWideModeConfiguration TwoPaneViewWideModeConfiguration;

                typedef enum UniformGridLayoutItemsJustification UniformGridLayoutItemsJustification;

                typedef enum UniformGridLayoutItemsStretch UniformGridLayoutItemsStretch;

                typedef struct FlowLayoutAnchorInfo FlowLayoutAnchorInfo;

                delegate ElementAnimationCompleted;

                interface IAnimatedIcon;

                interface IAnimatedIconFactory;

                interface IAnimatedIconSource;

                interface IAnimatedIconSourceFactory;

                interface IAnimatedIconSourceStatics;

                interface IAnimatedIconStatics;

                interface IAnimatedVisual;

                interface IAnimatedVisualPlayer;

                interface IAnimatedVisualPlayerFactory;

                interface IAnimatedVisualPlayerStatics;

                interface IAnimatedVisualSource;

                interface IAnimatedVisualSource2;

                interface IApplicationViewSpanningRects;

                interface IBackdropMaterial;

                interface IBackdropMaterialFactory;

                interface IBackdropMaterialStatics;

                interface IBitmapIconSource;

                interface IBitmapIconSourceFactory;

                interface IBitmapIconSourceStatics;

                interface IBreadcrumbBar;

                interface IBreadcrumbBarFactory;

                interface IBreadcrumbBarItem;

                interface IBreadcrumbBarItemClickedEventArgs;

                interface IBreadcrumbBarItemFactory;

                interface IBreadcrumbBarStatics;

                interface IColorChangedEventArgs;

                interface IColorPicker;

                interface IColorPicker2;

                interface IColorPickerFactory;

                interface IColorPickerStatics;

                interface IColorPickerStatics2;

                interface ICommandBarFlyout;

                interface ICommandBarFlyout2;

                interface ICommandBarFlyoutFactory;

                interface ICoreWebView2InitializedEventArgs;

                interface IDropDownButton;

                interface IDropDownButtonFactory;

                interface IDynamicAnimatedVisualSource;

                interface IElementAnimator;

                interface IElementAnimatorFactory;

                interface IElementAnimatorOverrides;

                interface IElementAnimatorProtected;

                interface IElementFactory;

                interface IElementFactoryFactory;

                interface IElementFactoryGetArgs;

                interface IElementFactoryOverrides;

                interface IElementFactoryRecycleArgs;

                interface IElementFactoryShim;

                interface IExpander;

                interface IExpanderCollapsedEventArgs;

                interface IExpanderExpandingEventArgs;

                interface IExpanderFactory;

                interface IExpanderStatics;

                interface IExpanderTemplateSettings;

                interface IFlowLayout;

                interface IFlowLayoutFactory;

                interface IFlowLayoutOverrides;

                interface IFlowLayoutState;

                interface IFlowLayoutStateFactory;

                interface IFlowLayoutStatics;

                interface IFontIconSource;

                interface IFontIconSourceFactory;

                interface IFontIconSourceStatics;

                interface IIconSource;

                interface IIconSourceFactory;

                interface IIconSourceStatics;

                interface IImageIcon;

                interface IImageIconFactory;

                interface IImageIconSource;

                interface IImageIconSourceFactory;

                interface IImageIconSourceStatics;

                interface IImageIconStatics;

                interface IIndexPath;

                interface IIndexPathStatics;

                interface IInfoBadge;

                interface IInfoBadgeFactory;

                interface IInfoBadgeStatics;

                interface IInfoBadgeTemplateSettings;

                interface IInfoBadgeTemplateSettingsFactory;

                interface IInfoBadgeTemplateSettingsStatics;

                interface IInfoBar;

                interface IInfoBarClosedEventArgs;

                interface IInfoBarClosedEventArgsFactory;

                interface IInfoBarClosingEventArgs;

                interface IInfoBarClosingEventArgsFactory;

                interface IInfoBarFactory;

                interface IInfoBarStatics;

                interface IInfoBarTemplateSettings;

                interface IInfoBarTemplateSettingsFactory;

                interface IInfoBarTemplateSettingsStatics;

                interface IItemsRepeater;

                interface IItemsRepeater2;

                interface IItemsRepeaterElementClearingEventArgs;

                interface IItemsRepeaterElementIndexChangedEventArgs;

                interface IItemsRepeaterElementPreparedEventArgs;

                interface IItemsRepeaterFactory;

                interface IItemsRepeaterScrollHost;

                interface IItemsRepeaterStatics;

                interface IItemsRepeaterStatics2;

                interface IItemsSourceView;

                interface IItemsSourceViewFactory;

                interface IKeyIndexMapping;

                interface ILayout;

                interface ILayoutContext;

                interface ILayoutContextFactory;

                interface ILayoutContextOverrides;

                interface ILayoutFactory;

                interface ILayoutPanel;

                interface ILayoutPanelFactory;

                interface ILayoutPanelStatics;

                interface ILayoutProtected;

                interface IMenuBar;

                interface IMenuBarFactory;

                interface IMenuBarItem;

                interface IMenuBarItemFactory;

                interface IMenuBarItemFlyout;

                interface IMenuBarItemFlyoutFactory;

                interface IMenuBarItemStatics;

                interface IMenuBarStatics;

                interface INavigationView;

                interface INavigationView2;

                interface INavigationViewBackRequestedEventArgs;

                interface INavigationViewDisplayModeChangedEventArgs;

                interface INavigationViewFactory;

                interface INavigationViewItem;

                interface INavigationViewItem2;

                interface INavigationViewItem3;

                interface INavigationViewItemBase;

                interface INavigationViewItemBase2;

                interface INavigationViewItemBaseFactory;

                interface INavigationViewItemBaseStatics;

                interface INavigationViewItemCollapsedEventArgs;

                interface INavigationViewItemExpandingEventArgs;

                interface INavigationViewItemFactory;

                interface INavigationViewItemHeader;

                interface INavigationViewItemHeaderFactory;

                interface INavigationViewItemInvokedEventArgs;

                interface INavigationViewItemInvokedEventArgs2;

                interface INavigationViewItemSeparator;

                interface INavigationViewItemSeparatorFactory;

                interface INavigationViewItemStatics;

                interface INavigationViewItemStatics2;

                interface INavigationViewItemStatics3;

                interface INavigationViewPaneClosingEventArgs;

                interface INavigationViewSelectionChangedEventArgs;

                interface INavigationViewSelectionChangedEventArgs2;

                interface INavigationViewStatics;

                interface INavigationViewStatics2;

                interface INavigationViewTemplateSettings;

                interface INavigationViewTemplateSettings2;

                interface INavigationViewTemplateSettingsFactory;

                interface INavigationViewTemplateSettingsStatics;

                interface INavigationViewTemplateSettingsStatics2;

                interface INonVirtualizingLayout;

                interface INonVirtualizingLayoutContext;

                interface INonVirtualizingLayoutContextFactory;

                interface INonVirtualizingLayoutContextOverrides;

                interface INonVirtualizingLayoutFactory;

                interface INonVirtualizingLayoutOverrides;

                interface INumberBox;

                interface INumberBox2;

                interface INumberBoxFactory;

                interface INumberBoxStatics;

                interface INumberBoxStatics2;

                interface INumberBoxValueChangedEventArgs;

                interface IPagerControl;

                interface IPagerControlFactory;

                interface IPagerControlSelectedIndexChangedEventArgs;

                interface IPagerControlStatics;

                interface IPagerControlTemplateSettings;

                interface IPagerControlTemplateSettingsFactory;

                interface IParallaxView;

                interface IParallaxViewFactory;

                interface IParallaxViewStatics;

                interface IPathIconSource;

                interface IPathIconSourceFactory;

                interface IPathIconSourceStatics;

                interface IPersonPicture;

                interface IPersonPictureFactory;

                interface IPersonPictureStatics;

                interface IPersonPictureTemplateSettings;

                interface IPipsPager;

                interface IPipsPagerFactory;

                interface IPipsPagerSelectedIndexChangedEventArgs;

                interface IPipsPagerStatics;

                interface IPipsPagerTemplateSettings;

                interface IProgressBar;

                interface IProgressBarFactory;

                interface IProgressBarStatics;

                interface IProgressBarTemplateSettings;

                interface IProgressRing;

                interface IProgressRing2;

                interface IProgressRingFactory;

                interface IProgressRingStatics;

                interface IProgressRingStatics2;

                interface IProgressRingTemplateSettings;

                interface IRadioButtons;

                interface IRadioButtonsFactory;

                interface IRadioButtonsStatics;

                interface IRadioMenuFlyoutItem;

                interface IRadioMenuFlyoutItemFactory;

                interface IRadioMenuFlyoutItemStatics;

                interface IRadioMenuFlyoutItemStatics2;

                interface IRatingControl;

                interface IRatingControlFactory;

                interface IRatingControlStatics;

                interface IRatingItemFontInfo;

                interface IRatingItemFontInfoFactory;

                interface IRatingItemFontInfoStatics;

                interface IRatingItemImageInfo;

                interface IRatingItemImageInfoFactory;

                interface IRatingItemImageInfoStatics;

                interface IRatingItemInfo;

                interface IRatingItemInfoFactory;

                interface IRecyclePool;

                interface IRecyclePoolFactory;

                interface IRecyclePoolOverrides;

                interface IRecyclePoolStatics;

                interface IRecyclingElementFactory;

                interface IRecyclingElementFactoryFactory;

                interface IRecyclingElementFactoryOverrides;

                interface IRefreshContainer;

                interface IRefreshContainerFactory;

                interface IRefreshContainerStatics;

                interface IRefreshInteractionRatioChangedEventArgs;

                interface IRefreshRequestedEventArgs;

                interface IRefreshStateChangedEventArgs;

                interface IRefreshVisualizer;

                interface IRefreshVisualizerFactory;

                interface IRefreshVisualizerStatics;

                interface IRevealListViewItemPresenter;

                interface IRevealListViewItemPresenterFactory;

                interface IScrollView;

                interface IScrollViewFactory;

                interface IScrollViewStatics;

                interface IScrollingAnchorRequestedEventArgs;

                interface IScrollingBringingIntoViewEventArgs;

                interface IScrollingScrollAnimationStartingEventArgs;

                interface IScrollingScrollCompletedEventArgs;

                interface IScrollingScrollOptions;

                interface IScrollingScrollOptionsFactory;

                interface IScrollingZoomAnimationStartingEventArgs;

                interface IScrollingZoomCompletedEventArgs;

                interface IScrollingZoomOptions;

                interface IScrollingZoomOptionsFactory;

                interface ISelectTemplateEventArgs;

                interface ISelectionModel;

                interface ISelectionModelChildrenRequestedEventArgs;

                interface ISelectionModelFactory;

                interface ISelectionModelProtected;

                interface ISelectionModelSelectionChangedEventArgs;

                interface ISelfPlayingAnimatedVisual;

                interface ISplitButton;

                interface ISplitButtonClickEventArgs;

                interface ISplitButtonFactory;

                interface ISplitButtonStatics;

                interface IStackLayout;

                interface IStackLayout2;

                interface IStackLayoutFactory;

                interface IStackLayoutState;

                interface IStackLayoutStateFactory;

                interface IStackLayoutStatics;

                interface IStackLayoutStatics2;

                interface ISwipeControl;

                interface ISwipeControlFactory;

                interface ISwipeControlStatics;

                interface ISwipeItem;

                interface ISwipeItemFactory;

                interface ISwipeItemInvokedEventArgs;

                interface ISwipeItemStatics;

                interface ISwipeItems;

                interface ISwipeItemsFactory;

                interface ISwipeItemsStatics;

                interface ISymbolIconSource;

                interface ISymbolIconSourceFactory;

                interface ISymbolIconSourceStatics;

                interface ITabView;

                interface ITabViewFactory;

                interface ITabViewItem;

                interface ITabViewItemFactory;

                interface ITabViewItemStatics;

                interface ITabViewItemTemplateSettings;

                interface ITabViewItemTemplateSettingsFactory;

                interface ITabViewItemTemplateSettingsStatics;

                interface ITabViewStatics;

                interface ITabViewTabCloseRequestedEventArgs;

                interface ITabViewTabDragCompletedEventArgs;

                interface ITabViewTabDragStartingEventArgs;

                interface ITabViewTabDroppedOutsideEventArgs;

                interface ITeachingTip;

                interface ITeachingTipClosedEventArgs;

                interface ITeachingTipClosingEventArgs;

                interface ITeachingTipFactory;

                interface ITeachingTipStatics;

                interface ITeachingTipTemplateSettings;

                interface ITeachingTipTemplateSettingsFactory;

                interface ITeachingTipTemplateSettingsStatics;

                interface ITextCommandBarFlyout;

                interface ITextCommandBarFlyoutFactory;

                interface IToggleSplitButton;

                interface IToggleSplitButtonFactory;

                interface IToggleSplitButtonIsCheckedChangedEventArgs;

                interface IToggleSplitButtonStatics;

                interface ITreeView;

                interface ITreeView2;

                interface ITreeView3;

                interface ITreeViewCollapsedEventArgs;

                interface ITreeViewCollapsedEventArgs2;

                interface ITreeViewDragItemsCompletedEventArgs;

                interface ITreeViewDragItemsCompletedEventArgs2;

                interface ITreeViewDragItemsStartingEventArgs;

                interface ITreeViewExpandingEventArgs;

                interface ITreeViewExpandingEventArgs2;

                interface ITreeViewFactory;

                interface ITreeViewItem;

                interface ITreeViewItem2;

                interface ITreeViewItemFactory;

                interface ITreeViewItemInvokedEventArgs;

                interface ITreeViewItemStatics;

                interface ITreeViewItemStatics2;

                interface ITreeViewItemTemplateSettings;

                interface ITreeViewItemTemplateSettingsFactory;

                interface ITreeViewItemTemplateSettingsStatics;

                interface ITreeViewList;

                interface ITreeViewListFactory;

                interface ITreeViewNode;

                interface ITreeViewNodeFactory;

                interface ITreeViewNodeStatics;

                interface ITreeViewSelectionChangedEventArgs;

                interface ITreeViewStatics;

                interface ITreeViewStatics2;

                interface ITwoPaneView;

                interface ITwoPaneViewFactory;

                interface ITwoPaneViewStatics;

                interface IUniformGridLayout;

                interface IUniformGridLayoutFactory;

                interface IUniformGridLayoutState;

                interface IUniformGridLayoutStateFactory;

                interface IUniformGridLayoutStatics;

                interface IVirtualizingLayout;

                interface IVirtualizingLayoutContext;

                interface IVirtualizingLayoutContextFactory;

                interface IVirtualizingLayoutContextOverrides;

                interface IVirtualizingLayoutFactory;

                interface IVirtualizingLayoutOverrides;

                interface IWebView2;

                interface IWebView2Factory;

                interface IWebView2Statics;

                interface IXamlControlsResources;

                interface IXamlControlsResources2;

                interface IXamlControlsResources3;

                interface IXamlControlsResourcesStatics;

                interface IXamlControlsResourcesStatics2;

                interface IXamlControlsResourcesStatics3;

                runtimeclass AnimatedIcon;

                runtimeclass AnimatedIconSource;

                runtimeclass AnimatedVisualPlayer;

                runtimeclass BackdropMaterial;

                runtimeclass BitmapIconSource;

                runtimeclass BreadcrumbBar;

                runtimeclass BreadcrumbBarItem;

                runtimeclass BreadcrumbBarItemClickedEventArgs;

                runtimeclass ColorChangedEventArgs;

                runtimeclass ColorPicker;

                runtimeclass CommandBarFlyout;

                runtimeclass CoreWebView2InitializedEventArgs;

                runtimeclass DropDownButton;

                runtimeclass ElementAnimator;

                runtimeclass ElementFactory;

                runtimeclass ElementFactoryGetArgs;

                runtimeclass ElementFactoryRecycleArgs;

                runtimeclass Expander;

                runtimeclass ExpanderCollapsedEventArgs;

                runtimeclass ExpanderExpandingEventArgs;

                runtimeclass ExpanderTemplateSettings;

                runtimeclass FlowLayout;

                runtimeclass FlowLayoutState;

                runtimeclass FontIconSource;

                runtimeclass IconSource;

                runtimeclass ImageIcon;

                runtimeclass ImageIconSource;

                runtimeclass IndexPath;

                runtimeclass InfoBadge;

                runtimeclass InfoBadgeTemplateSettings;

                runtimeclass InfoBar;

                runtimeclass InfoBarClosedEventArgs;

                runtimeclass InfoBarClosingEventArgs;

                runtimeclass InfoBarTemplateSettings;

                runtimeclass ItemsRepeater;

                runtimeclass ItemsRepeaterElementClearingEventArgs;

                runtimeclass ItemsRepeaterElementIndexChangedEventArgs;

                runtimeclass ItemsRepeaterElementPreparedEventArgs;

                runtimeclass ItemsRepeaterScrollHost;

                runtimeclass ItemsSourceView;

                runtimeclass Layout;

                runtimeclass LayoutContext;

                runtimeclass LayoutPanel;

                runtimeclass MenuBar;

                runtimeclass MenuBarItem;

                runtimeclass MenuBarItemFlyout;

                runtimeclass NavigationView;

                runtimeclass NavigationViewBackRequestedEventArgs;

                runtimeclass NavigationViewDisplayModeChangedEventArgs;

                runtimeclass NavigationViewItem;

                runtimeclass NavigationViewItemBase;

                runtimeclass NavigationViewItemCollapsedEventArgs;

                runtimeclass NavigationViewItemExpandingEventArgs;

                runtimeclass NavigationViewItemHeader;

                runtimeclass NavigationViewItemInvokedEventArgs;

                runtimeclass NavigationViewItemSeparator;

                runtimeclass NavigationViewPaneClosingEventArgs;

                runtimeclass NavigationViewSelectionChangedEventArgs;

                runtimeclass NavigationViewTemplateSettings;

                runtimeclass NonVirtualizingLayout;

                runtimeclass NonVirtualizingLayoutContext;

                runtimeclass NumberBox;

                runtimeclass NumberBoxValueChangedEventArgs;

                runtimeclass PagerControl;

                runtimeclass PagerControlSelectedIndexChangedEventArgs;

                runtimeclass PagerControlTemplateSettings;

                runtimeclass ParallaxView;

                runtimeclass PathIconSource;

                runtimeclass PersonPicture;

                runtimeclass PersonPictureTemplateSettings;

                runtimeclass PipsPager;

                runtimeclass PipsPagerSelectedIndexChangedEventArgs;

                runtimeclass PipsPagerTemplateSettings;

                runtimeclass ProgressBar;

                runtimeclass ProgressBarTemplateSettings;

                runtimeclass ProgressRing;

                runtimeclass ProgressRingTemplateSettings;

                runtimeclass RadioButtons;

                runtimeclass RadioMenuFlyoutItem;

                runtimeclass RatingControl;

                runtimeclass RatingItemFontInfo;

                runtimeclass RatingItemImageInfo;

                runtimeclass RatingItemInfo;

                runtimeclass RecyclePool;

                runtimeclass RecyclingElementFactory;

                runtimeclass RefreshContainer;

                runtimeclass RefreshInteractionRatioChangedEventArgs;

                runtimeclass RefreshRequestedEventArgs;

                runtimeclass RefreshStateChangedEventArgs;

                runtimeclass RefreshVisualizer;

                runtimeclass RevealListViewItemPresenter;

                runtimeclass ScrollView;

                runtimeclass ScrollingAnchorRequestedEventArgs;

                runtimeclass ScrollingBringingIntoViewEventArgs;

                runtimeclass ScrollingScrollAnimationStartingEventArgs;

                runtimeclass ScrollingScrollCompletedEventArgs;

                runtimeclass ScrollingScrollOptions;

                runtimeclass ScrollingZoomAnimationStartingEventArgs;

                runtimeclass ScrollingZoomCompletedEventArgs;

                runtimeclass ScrollingZoomOptions;

                runtimeclass SelectTemplateEventArgs;

                runtimeclass SelectionModel;

                runtimeclass SelectionModelChildrenRequestedEventArgs;

                runtimeclass SelectionModelSelectionChangedEventArgs;

                runtimeclass SplitButton;

                runtimeclass SplitButtonClickEventArgs;

                runtimeclass StackLayout;

                runtimeclass StackLayoutState;

                runtimeclass SwipeControl;

                runtimeclass SwipeItem;

                runtimeclass SwipeItemInvokedEventArgs;

                runtimeclass SwipeItems;

                runtimeclass SymbolIconSource;

                runtimeclass TabView;

                runtimeclass TabViewItem;

                runtimeclass TabViewItemTemplateSettings;

                runtimeclass TabViewTabCloseRequestedEventArgs;

                runtimeclass TabViewTabDragCompletedEventArgs;

                runtimeclass TabViewTabDragStartingEventArgs;

                runtimeclass TabViewTabDroppedOutsideEventArgs;

                runtimeclass TeachingTip;

                runtimeclass TeachingTipClosedEventArgs;

                runtimeclass TeachingTipClosingEventArgs;

                runtimeclass TeachingTipTemplateSettings;

                runtimeclass TextCommandBarFlyout;

                runtimeclass ToggleSplitButton;

                runtimeclass ToggleSplitButtonIsCheckedChangedEventArgs;

                runtimeclass TreeView;

                runtimeclass TreeViewCollapsedEventArgs;

                runtimeclass TreeViewDragItemsCompletedEventArgs;

                runtimeclass TreeViewDragItemsStartingEventArgs;

                runtimeclass TreeViewExpandingEventArgs;

                runtimeclass TreeViewItem;

                runtimeclass TreeViewItemInvokedEventArgs;

                runtimeclass TreeViewItemTemplateSettings;

                runtimeclass TreeViewList;

                runtimeclass TreeViewNode;

                runtimeclass TreeViewSelectionChangedEventArgs;

                runtimeclass TwoPaneView;

                runtimeclass UniformGridLayout;

                runtimeclass UniformGridLayoutState;

                runtimeclass VirtualizingLayout;

                runtimeclass VirtualizingLayoutContext;

                runtimeclass WebView2;

                runtimeclass XamlControlsResources;
            }
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                declare
                {
                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Controls.IndexPath*>;

                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Controls.MenuBarItem*>;

                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Controls.SwipeItem*>;

                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Controls.TreeViewNode*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Controls.IndexPath*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Controls.MenuBarItem*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Controls.SwipeItem*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Controls.TreeViewNode*>;

                    interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Controls.IndexPath*>;

                    interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Controls.MenuBarItem*>;

                    interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Controls.SwipeItem*>;

                    interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Controls.TreeViewNode*>;

                    interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.MenuBarItem*>;

                    interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.SwipeItem*>;

                    interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.TreeViewNode*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.BreadcrumbBar*, Microsoft.UI.Xaml.Controls.BreadcrumbBarItemClickedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ColorPicker*, Microsoft.UI.Xaml.Controls.ColorChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Expander*, Microsoft.UI.Xaml.Controls.ExpanderCollapsedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Expander*, Microsoft.UI.Xaml.Controls.ExpanderExpandingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.IDynamicAnimatedVisualSource*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.InfoBar*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.InfoBar*, Microsoft.UI.Xaml.Controls.InfoBarClosedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.InfoBar*, Microsoft.UI.Xaml.Controls.InfoBarClosingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ItemsRepeater*, Microsoft.UI.Xaml.Controls.ItemsRepeaterElementClearingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ItemsRepeater*, Microsoft.UI.Xaml.Controls.ItemsRepeaterElementIndexChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ItemsRepeater*, Microsoft.UI.Xaml.Controls.ItemsRepeaterElementPreparedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Layout*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, Microsoft.UI.Xaml.Controls.NavigationViewBackRequestedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, Microsoft.UI.Xaml.Controls.NavigationViewDisplayModeChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, Microsoft.UI.Xaml.Controls.NavigationViewItemCollapsedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, Microsoft.UI.Xaml.Controls.NavigationViewItemExpandingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, Microsoft.UI.Xaml.Controls.NavigationViewPaneClosingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NumberBox*, Microsoft.UI.Xaml.Controls.NumberBoxValueChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.PagerControl*, Microsoft.UI.Xaml.Controls.PagerControlSelectedIndexChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.PipsPager*, Microsoft.UI.Xaml.Controls.PipsPagerSelectedIndexChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum*, Microsoft.UI.Xaml.Controls.ColorChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter*, Microsoft.UI.Xaml.Controls.ScrollingAnchorRequestedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter*, Microsoft.UI.Xaml.Controls.ScrollingBringingIntoViewEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter*, Microsoft.UI.Xaml.Controls.ScrollingScrollAnimationStartingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter*, Microsoft.UI.Xaml.Controls.ScrollingScrollCompletedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter*, Microsoft.UI.Xaml.Controls.ScrollingZoomAnimationStartingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter*, Microsoft.UI.Xaml.Controls.ScrollingZoomCompletedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.RatingControl*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.RecyclingElementFactory*, Microsoft.UI.Xaml.Controls.SelectTemplateEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.RefreshContainer*, Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.RefreshVisualizer*, Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.RefreshVisualizer*, Microsoft.UI.Xaml.Controls.RefreshStateChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ScrollView*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ScrollView*, Microsoft.UI.Xaml.Controls.ScrollingAnchorRequestedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ScrollView*, Microsoft.UI.Xaml.Controls.ScrollingBringingIntoViewEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ScrollView*, Microsoft.UI.Xaml.Controls.ScrollingScrollAnimationStartingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ScrollView*, Microsoft.UI.Xaml.Controls.ScrollingScrollCompletedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ScrollView*, Microsoft.UI.Xaml.Controls.ScrollingZoomAnimationStartingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ScrollView*, Microsoft.UI.Xaml.Controls.ScrollingZoomCompletedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.SelectionModel*, Microsoft.UI.Xaml.Controls.SelectionModelChildrenRequestedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.SelectionModel*, Microsoft.UI.Xaml.Controls.SelectionModelSelectionChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.SplitButton*, Microsoft.UI.Xaml.Controls.SplitButtonClickEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.SwipeItem*, Microsoft.UI.Xaml.Controls.SwipeItemInvokedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TabView*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TabView*, Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TabView*, Microsoft.UI.Xaml.Controls.TabViewTabDragCompletedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TabView*, Microsoft.UI.Xaml.Controls.TabViewTabDragStartingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TabView*, Microsoft.UI.Xaml.Controls.TabViewTabDroppedOutsideEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TabViewItem*, Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TeachingTip*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TeachingTip*, Microsoft.UI.Xaml.Controls.TeachingTipClosedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TeachingTip*, Microsoft.UI.Xaml.Controls.TeachingTipClosingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ToggleSplitButton*, Microsoft.UI.Xaml.Controls.ToggleSplitButtonIsCheckedChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TreeView*, Microsoft.UI.Xaml.Controls.TreeViewCollapsedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TreeView*, Microsoft.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TreeView*, Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TreeView*, Microsoft.UI.Xaml.Controls.TreeViewExpandingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TreeView*, Microsoft.UI.Xaml.Controls.TreeViewItemInvokedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TreeView*, Microsoft.UI.Xaml.Controls.TreeViewSelectionChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TwoPaneView*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.WebView2*, Microsoft.UI.Xaml.Controls.CoreWebView2InitializedEventArgs*>;
                }
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [flags]
                enum AnimationContext
                {
                    None                   = 0x0,
                    CollectionChangeAdd    = 0x1,
                    CollectionChangeRemove = 0x2,
                    CollectionChangeReset  = 0x4,
                    LayoutTransition       = 0x8
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum ColorPickerHsvChannel
                {
                    Hue        = 0,
                    Saturation = 1,
                    Value      = 2,
                    Alpha      = 3
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum ColorSpectrumComponents
                {
                    HueValue        = 0,
                    ValueHue        = 1,
                    HueSaturation   = 2,
                    SaturationHue   = 3,
                    SaturationValue = 4,
                    ValueSaturation = 5
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum ColorSpectrumShape
                {
                    Box  = 0,
                    Ring = 1
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 2.0)]
                enum ControlsResourcesVersion
                {
                    Version1 = 1,
                    Version2 = 2
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [flags]
                enum ElementRealizationOptions
                {
                    None                = 0x0,
                    ForceCreate         = 0x1,
                    SuppressAutoRecycle = 0x2
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum ExpandDirection
                {
                    Down = 0,
                    Up   = 1
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                enum FlowLayoutLineAlignment
                {
                    Start        = 0,
                    Center       = 1,
                    End          = 2,
                    SpaceAround  = 3,
                    SpaceBetween = 4,
                    SpaceEvenly  = 5
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum InfoBarCloseReason
                {
                    CloseButton  = 0,
                    Programmatic = 1
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum InfoBarSeverity
                {
                    Informational = 0,
                    Success       = 1,
                    Warning       = 2,
                    Error         = 3
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum NavigationViewBackButtonVisible
                {
                    Collapsed = 0,
                    Visible   = 1,
                    Auto      = 2
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum NavigationViewDisplayMode
                {
                    Minimal  = 0,
                    Compact  = 1,
                    Expanded = 2
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum NavigationViewOverflowLabelMode
                {
                    MoreLabel = 0,
                    NoLabel   = 1
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum NavigationViewPaneDisplayMode
                {
                    Auto        = 0,
                    Left        = 1,
                    Top         = 2,
                    LeftCompact = 3,
                    LeftMinimal = 4
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum NavigationViewSelectionFollowsFocus
                {
                    Disabled = 0,
                    Enabled  = 1
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum NavigationViewShoulderNavigationEnabled
                {
                    WhenSelectionFollowsFocus = 0,
                    Always                    = 1,
                    Never                     = 2
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum NumberBoxSpinButtonPlacementMode
                {
                    Hidden  = 0,
                    Compact = 1,
                    Inline  = 2
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum NumberBoxValidationMode
                {
                    InvalidInputOverwritten = 0,
                    Disabled                = 1
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                enum PagerControlButtonVisibility
                {
                    Visible      = 0,
                    HiddenOnEdge = 1,
                    Hidden       = 2
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                enum PagerControlDisplayMode
                {
                    Auto        = 0,
                    ComboBox    = 1,
                    NumberBox   = 2,
                    ButtonPanel = 3
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum ParallaxSourceOffsetKind
                {
                    Absolute = 0,
                    Relative = 1
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum PipsPagerButtonVisibility
                {
                    Visible              = 0,
                    VisibleOnPointerOver = 1,
                    Collapsed            = 2
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum RefreshPullDirection
                {
                    LeftToRight = 0,
                    TopToBottom = 1,
                    RightToLeft = 2,
                    BottomToTop = 3
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum RefreshVisualizerOrientation
                {
                    Auto                             = 0,
                    Normal                           = 1,
                    Rotate90DegreesCounterclockwise  = 2,
                    Rotate270DegreesCounterclockwise = 3
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum RefreshVisualizerState
                {
                    Idle        = 0,
                    Peeking     = 1,
                    Interacting = 2,
                    Pending     = 3,
                    Refreshing  = 4
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                enum ScrollingAnimationMode
                {
                    Disabled = 0,
                    Enabled  = 1,
                    Auto     = 2
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                enum ScrollingChainMode
                {
                    Auto   = 0,
                    Always = 1,
                    Never  = 2
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                enum ScrollingContentOrientation
                {
                    Vertical   = 0,
                    Horizontal = 1,
                    None       = 2,
                    Both       = 3
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [flags]
                enum ScrollingInputKinds
                {
                    None       = 0x0,
                    Touch      = 0x1,
                    Pen        = 0x2,
                    MouseWheel = 0x4,
                    Keyboard   = 0x8,
                    Gamepad    = 0x10,
                    All        = 0xFF
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                enum ScrollingInteractionState
                {
                    Idle        = 0,
                    Interaction = 1,
                    Inertia     = 2,
                    Animation   = 3
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                enum ScrollingRailMode
                {
                    Enabled  = 0,
                    Disabled = 1
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                enum ScrollingScrollBarVisibility
                {
                    Auto    = 0,
                    Visible = 1,
                    Hidden  = 2
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                enum ScrollingScrollMode
                {
                    Enabled  = 0,
                    Disabled = 1
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                enum ScrollingSnapPointsMode
                {
                    Default = 0,
                    Ignore  = 1
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                enum ScrollingZoomMode
                {
                    Enabled  = 0,
                    Disabled = 1
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                enum StylesVersion
                {
                    Latest      = 0,
                    WinUI_2dot5 = 1
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum SwipeBehaviorOnInvoked
                {
                    Auto       = 0,
                    Close      = 1,
                    RemainOpen = 2
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum SwipeMode
                {
                    Reveal  = 0,
                    Execute = 1
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum TabViewCloseButtonOverlayMode
                {
                    Auto          = 0,
                    OnPointerOver = 1,
                    Always        = 2
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum TabViewWidthMode
                {
                    Equal         = 0,
                    SizeToContent = 1,
                    Compact       = 2
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum TeachingTipCloseReason
                {
                    CloseButton  = 0,
                    LightDismiss = 1,
                    Programmatic = 2
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum TeachingTipHeroContentPlacementMode
                {
                    Auto   = 0,
                    Top    = 1,
                    Bottom = 2
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum TeachingTipPlacementMode
                {
                    Auto        = 0,
                    Top         = 1,
                    Bottom      = 2,
                    Left        = 3,
                    Right       = 4,
                    TopRight    = 5,
                    TopLeft     = 6,
                    BottomRight = 7,
                    BottomLeft  = 8,
                    LeftTop     = 9,
                    LeftBottom  = 10,
                    RightTop    = 11,
                    RightBottom = 12,
                    Center      = 13
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum TeachingTipTailVisibility
                {
                    Auto      = 0,
                    Visible   = 1,
                    Collapsed = 2
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum TreeViewSelectionMode
                {
                    None     = 0,
                    Single   = 1,
                    Multiple = 2
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum TwoPaneViewMode
                {
                    SinglePane = 0,
                    Wide       = 1,
                    Tall       = 2
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum TwoPaneViewPriority
                {
                    Pane1 = 0,
                    Pane2 = 1
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum TwoPaneViewTallModeConfiguration
                {
                    SinglePane = 0,
                    TopBottom  = 1,
                    BottomTop  = 2
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum TwoPaneViewWideModeConfiguration
                {
                    SinglePane = 0,
                    LeftRight  = 1,
                    RightLeft  = 2
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum UniformGridLayoutItemsJustification
                {
                    Start        = 0,
                    Center       = 1,
                    End          = 2,
                    SpaceAround  = 3,
                    SpaceBetween = 4,
                    SpaceEvenly  = 5
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                enum UniformGridLayoutItemsStretch
                {
                    None    = 0,
                    Fill    = 1,
                    Uniform = 2
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                struct FlowLayoutAnchorInfo
                {
                    INT32 Index;
                    DOUBLE Offset;
                };

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [uuid(7A2A1C12-0EF6-5040-BDD9-65F8C5B6A281)]
                delegate
                    HRESULT ElementAnimationCompleted([in] Microsoft.UI.Xaml.Controls.ElementAnimator* sender, [in] Windows.UI.Xaml.UIElement* element);

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.AnimatedIcon)]
                [uuid(F705DFDA-8196-56D0-8DCF-2B66C2AED791)]
                interface IAnimatedIcon : IInspectable
                {
                    [propget] HRESULT Source([out] [retval] Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2** value);
                    [propput] HRESULT Source([in] Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2* value);
                    [propget] HRESULT FallbackIconSource([out] [retval] Microsoft.UI.Xaml.Controls.IconSource** value);
                    [propput] HRESULT FallbackIconSource([in] Microsoft.UI.Xaml.Controls.IconSource* value);
                    [propget] HRESULT MirroredWhenRightToLeft([out] [retval] boolean* value);
                    [propput] HRESULT MirroredWhenRightToLeft([in] boolean value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.AnimatedIcon)]
                [uuid(3356E0D1-D82F-5FC1-8165-9B9D1B9D9514)]
                interface IAnimatedIconFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.AnimatedIcon** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.AnimatedIconSource)]
                [uuid(2846A198-731B-5379-85AC-8F28027F7183)]
                interface IAnimatedIconSource : IInspectable
                {
                    [propget] HRESULT Source([out] [retval] Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2** value);
                    [propput] HRESULT Source([in] Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2* value);
                    [propget] HRESULT FallbackIconSource([out] [retval] Microsoft.UI.Xaml.Controls.IconSource** value);
                    [propput] HRESULT FallbackIconSource([in] Microsoft.UI.Xaml.Controls.IconSource* value);
                    [propget] HRESULT MirroredWhenRightToLeft([out] [retval] boolean* value);
                    [propput] HRESULT MirroredWhenRightToLeft([in] boolean value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.AnimatedIconSource)]
                [uuid(AE8FB7DE-7EC2-5AE2-B461-BEAD570420FA)]
                interface IAnimatedIconSourceFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.AnimatedIconSource** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.AnimatedIconSource)]
                [uuid(6E0F1325-DBD8-51B3-B4BD-2D5B7CCF5178)]
                interface IAnimatedIconSourceStatics : IInspectable
                {
                    [propget] HRESULT SourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FallbackIconSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MirroredWhenRightToLeftProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.AnimatedIcon)]
                [uuid(381896A8-EE9F-5823-ABF1-B596ADCC77D1)]
                interface IAnimatedIconStatics : IInspectable
                {
                    [propget] HRESULT StateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT SetState([in] Windows.UI.Xaml.DependencyObject* object, [in] HSTRING value);
                    HRESULT GetState([in] Windows.UI.Xaml.DependencyObject* object, [out] [retval] HSTRING* result);
                    [propget] HRESULT SourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FallbackIconSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MirroredWhenRightToLeftProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [uuid(84100919-9E15-5106-9647-9654EDE335DE)]
                interface IAnimatedVisual : IInspectable
                    requires
                        Windows.Foundation.IClosable
                {
                    [propget] HRESULT RootVisual([out] [retval] Windows.UI.Composition.Visual** value);
                    [propget] HRESULT Size([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                    [propget] HRESULT Duration([out] [retval] Windows.Foundation.TimeSpan* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer)]
                [uuid(BF7F8865-7B79-5354-9788-C21E523591EA)]
                interface IAnimatedVisualPlayer : IInspectable
                {
                    [propget] HRESULT Diagnostics([out] [retval] IInspectable** value);
                    [propget] HRESULT Duration([out] [retval] Windows.Foundation.TimeSpan* value);
                    [propget] HRESULT Source([out] [retval] Microsoft.UI.Xaml.Controls.IAnimatedVisualSource** value);
                    [propput] HRESULT Source([in] Microsoft.UI.Xaml.Controls.IAnimatedVisualSource* value);
                    [propget] HRESULT FallbackContent([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT FallbackContent([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT AutoPlay([out] [retval] boolean* value);
                    [propput] HRESULT AutoPlay([in] boolean value);
                    [propget] HRESULT IsAnimatedVisualLoaded([out] [retval] boolean* value);
                    [propget] HRESULT IsPlaying([out] [retval] boolean* value);
                    [propget] HRESULT PlaybackRate([out] [retval] DOUBLE* value);
                    [propput] HRESULT PlaybackRate([in] DOUBLE value);
                    [propget] HRESULT ProgressObject([out] [retval] Windows.UI.Composition.CompositionObject** value);
                    [propget] HRESULT Stretch([out] [retval] Windows.UI.Xaml.Media.Stretch* value);
                    [propput] HRESULT Stretch([in] Windows.UI.Xaml.Media.Stretch value);
                    HRESULT Pause();
                    HRESULT PlayAsync([in] DOUBLE fromProgress, [in] DOUBLE toProgress, [in] boolean looped, [out] [retval] Windows.Foundation.IAsyncAction** operation);
                    HRESULT Resume();
                    HRESULT SetProgress([in] DOUBLE progress);
                    HRESULT Stop();
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer)]
                [uuid(EBC0C6E6-C91A-5025-B4A4-E786D83BE1D8)]
                interface IAnimatedVisualPlayerFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer)]
                [uuid(A4ADBA25-A34C-5D7A-BD40-61E0DDCA1298)]
                interface IAnimatedVisualPlayerStatics : IInspectable
                {
                    [propget] HRESULT AutoPlayProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DiagnosticsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DurationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FallbackContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsAnimatedVisualLoadedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsPlayingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaybackRateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [uuid(57AF690E-B331-5462-8CC6-C529A5DA4123)]
                interface IAnimatedVisualSource : IInspectable
                {
                    HRESULT TryCreateAnimatedVisual([in] Windows.UI.Composition.Compositor* compositor, [out] IInspectable** diagnostics, [out] [retval] Microsoft.UI.Xaml.Controls.IAnimatedVisual** result);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [uuid(1A3B53A7-A8FE-59A1-B544-43A4D9C81EF2)]
                interface IAnimatedVisualSource2 : IInspectable
                    requires
                        Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
                {
                    [propget] HRESULT Markers([out] [retval] Windows.Foundation.Collections.IMapView<HSTRING, DOUBLE>** value);
                    HRESULT SetColorProperty([in] HSTRING propertyName, [in] Windows.UI.Color value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [uuid(645737E4-A882-4E16-B289-FD860560106A)]
                interface IApplicationViewSpanningRects : IInspectable
                {
                    HRESULT GetSpanningRects([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Foundation.Rect>** result);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.BackdropMaterial)]
                [uuid(00D918AA-9B55-5841-9AF5-637DE7982EA7)]
                interface IBackdropMaterial : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.BackdropMaterial)]
                [uuid(1D1F674F-CB53-5C41-AA3E-15F30C8EF7A5)]
                interface IBackdropMaterialFactory : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.BackdropMaterial)]
                [uuid(707F26F5-042D-5BA6-A1C8-CBC66246F7A1)]
                interface IBackdropMaterialStatics : IInspectable
                {
                    [propget] HRESULT ApplyToRootOrPageBackgroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT SetApplyToRootOrPageBackground([in] Windows.UI.Xaml.Controls.Control* element, [in] boolean value);
                    HRESULT GetApplyToRootOrPageBackground([in] Windows.UI.Xaml.Controls.Control* element, [out] [retval] boolean* result);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.BitmapIconSource)]
                [uuid(A6B6CCCC-EA8F-53CA-831F-2ABE85CD6D8C)]
                interface IBitmapIconSource : IInspectable
                {
                    [propget] HRESULT UriSource([out] [retval] Windows.Foundation.Uri** value);
                    [propput] HRESULT UriSource([in] Windows.Foundation.Uri* value);
                    [propget] HRESULT ShowAsMonochrome([out] [retval] boolean* value);
                    [propput] HRESULT ShowAsMonochrome([in] boolean value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.BitmapIconSource)]
                [uuid(7D484C14-F5F6-5E39-B4E4-B6108D2EE095)]
                interface IBitmapIconSourceFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.BitmapIconSource** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.BitmapIconSource)]
                [uuid(7E603B56-5580-5A9B-900D-0564162A5F37)]
                interface IBitmapIconSourceStatics : IInspectable
                {
                    [propget] HRESULT UriSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ShowAsMonochromeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.BreadcrumbBar)]
                [uuid(2E47B7D6-5FBD-54C7-B0B1-CEFF4A19C744)]
                interface IBreadcrumbBar : IInspectable
                {
                    [propget] HRESULT ItemsSource([out] [retval] IInspectable** value);
                    [propput] HRESULT ItemsSource([in] IInspectable* value);
                    [propget] HRESULT ItemTemplate([out] [retval] IInspectable** value);
                    [propput] HRESULT ItemTemplate([in] IInspectable* value);
                    [eventadd] HRESULT ItemClicked([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.BreadcrumbBar*, Microsoft.UI.Xaml.Controls.BreadcrumbBarItemClickedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ItemClicked([in] EventRegistrationToken token);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.BreadcrumbBar)]
                [uuid(D5B6A6D9-3148-5CBC-A6AE-0F44CDE41952)]
                interface IBreadcrumbBarFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.BreadcrumbBar** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.BreadcrumbBarItem)]
                [uuid(34582DE4-6BEF-5BA0-86CA-7CC1A3DB37EE)]
                interface IBreadcrumbBarItem : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.BreadcrumbBarItemClickedEventArgs)]
                [uuid(1CEEA503-365E-580D-BCD4-E9AD0248F6B5)]
                interface IBreadcrumbBarItemClickedEventArgs : IInspectable
                {
                    [propget] HRESULT Index([out] [retval] INT32* value);
                    [propget] HRESULT Item([out] [retval] IInspectable** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.BreadcrumbBarItem)]
                [uuid(186C3BD3-7008-5544-8D3A-65AF8FE9FE69)]
                interface IBreadcrumbBarItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.BreadcrumbBarItem** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.BreadcrumbBar)]
                [uuid(95DAAAEC-E224-56AC-9749-4EDDAC0C3043)]
                interface IBreadcrumbBarStatics : IInspectable
                {
                    [propget] HRESULT ItemsSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ColorChangedEventArgs)]
                [uuid(148D57A2-B1CB-5F5D-B6B5-512805D71761)]
                interface IColorChangedEventArgs : IInspectable
                {
                    [propget] HRESULT OldColor([out] [retval] Windows.UI.Color* value);
                    [propget] HRESULT NewColor([out] [retval] Windows.UI.Color* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ColorPicker)]
                [uuid(AE72B24B-F93F-5A19-8CE4-A18B73C3356D)]
                interface IColorPicker : IInspectable
                {
                    [propget] HRESULT Color([out] [retval] Windows.UI.Color* value);
                    [propput] HRESULT Color([in] Windows.UI.Color value);
                    [propget] HRESULT PreviousColor([out] [retval] Windows.Foundation.IReference<Windows.UI.Color>** value);
                    [propput] HRESULT PreviousColor([in] Windows.Foundation.IReference<Windows.UI.Color>* value);
                    [propget] HRESULT IsAlphaEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsAlphaEnabled([in] boolean value);
                    [propget] HRESULT IsColorSpectrumVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsColorSpectrumVisible([in] boolean value);
                    [propget] HRESULT IsColorPreviewVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsColorPreviewVisible([in] boolean value);
                    [propget] HRESULT IsColorSliderVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsColorSliderVisible([in] boolean value);
                    [propget] HRESULT IsAlphaSliderVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsAlphaSliderVisible([in] boolean value);
                    [propget] HRESULT IsMoreButtonVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsMoreButtonVisible([in] boolean value);
                    [propget] HRESULT IsColorChannelTextInputVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsColorChannelTextInputVisible([in] boolean value);
                    [propget] HRESULT IsAlphaTextInputVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsAlphaTextInputVisible([in] boolean value);
                    [propget] HRESULT IsHexInputVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsHexInputVisible([in] boolean value);
                    [propget] HRESULT MinHue([out] [retval] INT32* value);
                    [propput] HRESULT MinHue([in] INT32 value);
                    [propget] HRESULT MaxHue([out] [retval] INT32* value);
                    [propput] HRESULT MaxHue([in] INT32 value);
                    [propget] HRESULT MinSaturation([out] [retval] INT32* value);
                    [propput] HRESULT MinSaturation([in] INT32 value);
                    [propget] HRESULT MaxSaturation([out] [retval] INT32* value);
                    [propput] HRESULT MaxSaturation([in] INT32 value);
                    [propget] HRESULT MinValue([out] [retval] INT32* value);
                    [propput] HRESULT MinValue([in] INT32 value);
                    [propget] HRESULT MaxValue([out] [retval] INT32* value);
                    [propput] HRESULT MaxValue([in] INT32 value);
                    [propget] HRESULT ColorSpectrumShape([out] [retval] Microsoft.UI.Xaml.Controls.ColorSpectrumShape* value);
                    [propput] HRESULT ColorSpectrumShape([in] Microsoft.UI.Xaml.Controls.ColorSpectrumShape value);
                    [propget] HRESULT ColorSpectrumComponents([out] [retval] Microsoft.UI.Xaml.Controls.ColorSpectrumComponents* value);
                    [propput] HRESULT ColorSpectrumComponents([in] Microsoft.UI.Xaml.Controls.ColorSpectrumComponents value);
                    [eventadd] HRESULT ColorChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ColorPicker*, Microsoft.UI.Xaml.Controls.ColorChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ColorChanged([in] EventRegistrationToken token);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 2.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ColorPicker)]
                [uuid(1ED6D5F5-1972-55C6-B19F-57FA1E8161FE)]
                interface IColorPicker2 : IInspectable
                {
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ColorPicker)]
                [uuid(72C350E2-0A20-5B9B-AC54-633B97D7FFDE)]
                interface IColorPickerFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.ColorPicker** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ColorPicker)]
                [uuid(AF1E1848-98DE-569E-A84B-1C88BBD0D479)]
                interface IColorPickerStatics : IInspectable
                {
                    [propget] HRESULT ColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PreviousColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsAlphaEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsColorSpectrumVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsColorPreviewVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsColorSliderVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsAlphaSliderVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsMoreButtonVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsColorChannelTextInputVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsAlphaTextInputVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsHexInputVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinHueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxHueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinSaturationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxSaturationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ColorSpectrumShapeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ColorSpectrumComponentsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 2.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ColorPicker)]
                [uuid(98EE8031-972D-5DD3-B7E6-2B7A154EA25E)]
                interface IColorPickerStatics2 : IInspectable
                {
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.CommandBarFlyout)]
                [uuid(F8F5B8BC-8D67-5FA9-8FB0-C2C3311E1B7C)]
                interface ICommandBarFlyout : IInspectable
                {
                    [propget] HRESULT PrimaryCommands([out] [retval] Windows.Foundation.Collections.IObservableVector<Windows.UI.Xaml.Controls.ICommandBarElement*>** value);
                    [propget] HRESULT SecondaryCommands([out] [retval] Windows.Foundation.Collections.IObservableVector<Windows.UI.Xaml.Controls.ICommandBarElement*>** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 2.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.CommandBarFlyout)]
                [uuid(5F81EC9E-A9D2-5F04-B5B1-013DAEF026DD)]
                interface ICommandBarFlyout2 : IInspectable
                {
                    [propget] HRESULT AlwaysExpanded([out] [retval] boolean* value);
                    [propput] HRESULT AlwaysExpanded([in] boolean value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.CommandBarFlyout)]
                [uuid(A194DBE6-4311-5BD2-A8EB-B49C4733A33C)]
                interface ICommandBarFlyoutFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.CommandBarFlyout** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.CoreWebView2InitializedEventArgs)]
                [experimental]
                [uuid(EE59D277-8B2E-57AB-8631-91D27B12EBD9)]
                interface ICoreWebView2InitializedEventArgs : IInspectable
                {
                    [propget] HRESULT Exception([out] [retval] HRESULT* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.DropDownButton)]
                [uuid(C1E9FA91-4F95-5796-8A7B-3B7594A12C69)]
                interface IDropDownButton : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.DropDownButton)]
                [uuid(7CF3E13B-668D-57E7-B5D6-F5CA3DBC80BD)]
                interface IDropDownButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.DropDownButton** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [uuid(AB00E5CF-1BE6-559C-AD5B-0253BB17C0F7)]
                interface IDynamicAnimatedVisualSource : IInspectable
                    requires
                        Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
                {
                    [eventadd] HRESULT AnimatedVisualInvalidated([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.IDynamicAnimatedVisualSource*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT AnimatedVisualInvalidated([in] EventRegistrationToken token);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ElementAnimator)]
                [experimental]
                [uuid(D7FABADB-6E51-5CB2-9318-5C9BB0008771)]
                interface IElementAnimator : IInspectable
                {
                    [eventadd] HRESULT ShowAnimationCompleted([in] Microsoft.UI.Xaml.Controls.ElementAnimationCompleted* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ShowAnimationCompleted([in] EventRegistrationToken token);
                    [eventadd] HRESULT HideAnimationCompleted([in] Microsoft.UI.Xaml.Controls.ElementAnimationCompleted* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT HideAnimationCompleted([in] EventRegistrationToken token);
                    [eventadd] HRESULT BoundsChangeAnimationCompleted([in] Microsoft.UI.Xaml.Controls.ElementAnimationCompleted* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT BoundsChangeAnimationCompleted([in] EventRegistrationToken token);
                    HRESULT OnElementShown([in] Windows.UI.Xaml.UIElement* element, [in] Microsoft.UI.Xaml.Controls.AnimationContext context);
                    HRESULT OnElementHidden([in] Windows.UI.Xaml.UIElement* element, [in] Microsoft.UI.Xaml.Controls.AnimationContext context);
                    HRESULT OnElementBoundsChanged([in] Windows.UI.Xaml.UIElement* element, [in] Microsoft.UI.Xaml.Controls.AnimationContext context, [in] Windows.Foundation.Rect oldBounds, [in] Windows.Foundation.Rect newBounds);
                    HRESULT HasShowAnimation([in] Windows.UI.Xaml.UIElement* element, [in] Microsoft.UI.Xaml.Controls.AnimationContext context, [out] [retval] boolean* result);
                    HRESULT HasHideAnimation([in] Windows.UI.Xaml.UIElement* element, [in] Microsoft.UI.Xaml.Controls.AnimationContext context, [out] [retval] boolean* result);
                    HRESULT HasBoundsChangeAnimation([in] Windows.UI.Xaml.UIElement* element, [in] Microsoft.UI.Xaml.Controls.AnimationContext context, [in] Windows.Foundation.Rect oldBounds, [in] Windows.Foundation.Rect newBounds, [out] [retval] boolean* result);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ElementAnimator)]
                [experimental]
                [uuid(EA26E91C-8DC0-58B6-86AD-07077748EDA3)]
                interface IElementAnimatorFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.ElementAnimator** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ElementAnimator)]
                [experimental]
                [uuid(E8372F46-D57A-5FEA-8FD7-5B822753F46B)]
                interface IElementAnimatorOverrides : IInspectable
                {
                    HRESULT HasShowAnimationCore([in] Windows.UI.Xaml.UIElement* element, [in] Microsoft.UI.Xaml.Controls.AnimationContext context, [out] [retval] boolean* result);
                    HRESULT HasHideAnimationCore([in] Windows.UI.Xaml.UIElement* element, [in] Microsoft.UI.Xaml.Controls.AnimationContext context, [out] [retval] boolean* result);
                    HRESULT HasBoundsChangeAnimationCore([in] Windows.UI.Xaml.UIElement* element, [in] Microsoft.UI.Xaml.Controls.AnimationContext context, [in] Windows.Foundation.Rect oldBounds, [in] Windows.Foundation.Rect newBounds, [out] [retval] boolean* result);
                    HRESULT StartShowAnimation([in] Windows.UI.Xaml.UIElement* element, [in] Microsoft.UI.Xaml.Controls.AnimationContext context);
                    HRESULT StartHideAnimation([in] Windows.UI.Xaml.UIElement* element, [in] Microsoft.UI.Xaml.Controls.AnimationContext context);
                    HRESULT StartBoundsChangeAnimation([in] Windows.UI.Xaml.UIElement* element, [in] Microsoft.UI.Xaml.Controls.AnimationContext context, [in] Windows.Foundation.Rect oldBounds, [in] Windows.Foundation.Rect newBounds);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ElementAnimator)]
                [experimental]
                [uuid(BDD03C3B-B45A-5F59-BAC0-1E9EB2042393)]
                interface IElementAnimatorProtected : IInspectable
                {
                    [propget] HRESULT HasShowAnimationsPending([out] [retval] boolean* value);
                    [propget] HRESULT HasHideAnimationsPending([out] [retval] boolean* value);
                    [propget] HRESULT HasBoundsChangeAnimationsPending([out] [retval] boolean* value);
                    [propget] HRESULT SharedContext([out] [retval] Microsoft.UI.Xaml.Controls.AnimationContext* value);
                    HRESULT OnShowAnimationCompleted([in] Windows.UI.Xaml.UIElement* element);
                    HRESULT OnHideAnimationCompleted([in] Windows.UI.Xaml.UIElement* element);
                    HRESULT OnBoundsChangeAnimationCompleted([in] Windows.UI.Xaml.UIElement* element);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ElementFactory)]
                [experimental]
                [uuid(122278A6-3E28-5644-BE8E-1052E3AE4EC9)]
                interface IElementFactory : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ElementFactory)]
                [experimental]
                [uuid(D892556F-A875-534F-8D7F-681803342732)]
                interface IElementFactoryFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.ElementFactory** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ElementFactoryGetArgs)]
                [uuid(909791CE-213D-5075-A23C-BFE46C16B34D)]
                interface IElementFactoryGetArgs : IInspectable
                {
                    [propget] HRESULT Data([out] [retval] IInspectable** value);
                    [propput] HRESULT Data([in] IInspectable* value);
                    [propget] HRESULT Parent([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Parent([in] Windows.UI.Xaml.UIElement* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ElementFactory)]
                [experimental]
                [uuid(BDDC3E33-DA7D-5F43-8D07-75FB5006CF5D)]
                interface IElementFactoryOverrides : IInspectable
                {
                    HRESULT GetElementCore([in] Microsoft.UI.Xaml.Controls.ElementFactoryGetArgs* args, [out] [retval] Windows.UI.Xaml.UIElement** result);
                    HRESULT RecycleElementCore([in] Microsoft.UI.Xaml.Controls.ElementFactoryRecycleArgs* args);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ElementFactoryRecycleArgs)]
                [uuid(C7386123-7139-509C-886B-9D74CBA956DE)]
                interface IElementFactoryRecycleArgs : IInspectable
                {
                    [propget] HRESULT Element([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Element([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT Parent([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Parent([in] Windows.UI.Xaml.UIElement* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [uuid(94CD53E1-53E9-5921-B8EC-DDB9396D418E)]
                interface IElementFactoryShim : IInspectable
                {
                    HRESULT GetElement([in] Microsoft.UI.Xaml.Controls.ElementFactoryGetArgs* args, [out] [retval] Windows.UI.Xaml.UIElement** result);
                    HRESULT RecycleElement([in] Microsoft.UI.Xaml.Controls.ElementFactoryRecycleArgs* args);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.Expander)]
                [uuid(CD1D4EDE-8D39-5BEF-A735-9FDF6038E86B)]
                interface IExpander : IInspectable
                {
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT HeaderTemplateSelector([out] [retval] Windows.UI.Xaml.Controls.DataTemplateSelector** value);
                    [propput] HRESULT HeaderTemplateSelector([in] Windows.UI.Xaml.Controls.DataTemplateSelector* value);
                    [propget] HRESULT IsExpanded([out] [retval] boolean* value);
                    [propput] HRESULT IsExpanded([in] boolean value);
                    [propget] HRESULT ExpandDirection([out] [retval] Microsoft.UI.Xaml.Controls.ExpandDirection* value);
                    [propput] HRESULT ExpandDirection([in] Microsoft.UI.Xaml.Controls.ExpandDirection value);
                    [eventadd] HRESULT Expanding([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Expander*, Microsoft.UI.Xaml.Controls.ExpanderExpandingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Expanding([in] EventRegistrationToken token);
                    [eventadd] HRESULT Collapsed([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Expander*, Microsoft.UI.Xaml.Controls.ExpanderCollapsedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Collapsed([in] EventRegistrationToken token);
                    [propget] HRESULT TemplateSettings([out] [retval] Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ExpanderCollapsedEventArgs)]
                [uuid(968A6870-7426-535E-A526-279E6EEDECD0)]
                interface IExpanderCollapsedEventArgs : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ExpanderExpandingEventArgs)]
                [uuid(433F2E36-19E7-579C-B4CE-9CE5D510D001)]
                interface IExpanderExpandingEventArgs : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.Expander)]
                [uuid(51A5AFC2-B16D-516E-83AE-5A10476B13AF)]
                interface IExpanderFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Expander** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.Expander)]
                [uuid(C83ECF19-CADC-5C26-B608-1164AC46C1F5)]
                interface IExpanderStatics : IInspectable
                {
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsExpandedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ExpandDirectionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings)]
                [uuid(8F959018-F6B8-5C02-BE08-CD196C9FCD2D)]
                interface IExpanderTemplateSettings : IInspectable
                {
                    [propget] HRESULT ContentHeight([out] [retval] DOUBLE* value);
                    [propget] HRESULT NegativeContentHeight([out] [retval] DOUBLE* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.FlowLayout)]
                [experimental]
                [uuid(7EA81F44-72D6-5205-8C07-7CB108B476D7)]
                interface IFlowLayout : IInspectable
                {
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                    [propget] HRESULT MinRowSpacing([out] [retval] DOUBLE* value);
                    [propput] HRESULT MinRowSpacing([in] DOUBLE value);
                    [propget] HRESULT MinColumnSpacing([out] [retval] DOUBLE* value);
                    [propput] HRESULT MinColumnSpacing([in] DOUBLE value);
                    [propget] HRESULT LineAlignment([out] [retval] Microsoft.UI.Xaml.Controls.FlowLayoutLineAlignment* value);
                    [propput] HRESULT LineAlignment([in] Microsoft.UI.Xaml.Controls.FlowLayoutLineAlignment value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.FlowLayout)]
                [experimental]
                [uuid(F4AD1DE0-DB32-52E7-9037-43C6DB9841A8)]
                interface IFlowLayoutFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.FlowLayout** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.FlowLayout)]
                [experimental]
                [uuid(8356A08E-C714-56CE-B6AC-6C5F8FCB5664)]
                interface IFlowLayoutOverrides : IInspectable
                {
                    HRESULT GetMeasureSize([in] INT32 index, [in] Windows.Foundation.Size availableSize, [out] [retval] Windows.Foundation.Size* result);
                    HRESULT GetProvisionalArrangeSize([in] INT32 index, [in] Windows.Foundation.Size measureSize, [in] Windows.Foundation.Size desiredSize, [out] [retval] Windows.Foundation.Size* result);
                    HRESULT ShouldBreakLine([in] INT32 index, [in] DOUBLE remainingSpace, [out] [retval] boolean* result);
                    HRESULT GetAnchorForRealizationRect([in] Windows.Foundation.Size availableSize, [in] Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext* context, [out] [retval] Microsoft.UI.Xaml.Controls.FlowLayoutAnchorInfo* result);
                    HRESULT GetAnchorForTargetElement([in] INT32 targetIndex, [in] Windows.Foundation.Size availableSize, [in] Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext* context, [out] [retval] Microsoft.UI.Xaml.Controls.FlowLayoutAnchorInfo* result);
                    HRESULT GetExtent([in] Windows.Foundation.Size availableSize, [in] Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext* context, [in] Windows.UI.Xaml.UIElement* firstRealized, [in] INT32 firstRealizedItemIndex, [in] Windows.Foundation.Rect firstRealizedLayoutBounds, [in] Windows.UI.Xaml.UIElement* lastRealized, [in] INT32 lastRealizedItemIndex, [in] Windows.Foundation.Rect lastRealizedLayoutBounds, [out] [retval] Windows.Foundation.Rect* result);
                    HRESULT OnElementMeasured([in] Windows.UI.Xaml.UIElement* element, [in] INT32 index, [in] Windows.Foundation.Size availableSize, [in] Windows.Foundation.Size measureSize, [in] Windows.Foundation.Size desiredSize, [in] Windows.Foundation.Size provisionalArrangeSize, [in] Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext* context);
                    HRESULT OnLineArranged([in] INT32 startIndex, [in] INT32 countInLine, [in] DOUBLE lineSize, [in] Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext* context);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.FlowLayoutState)]
                [experimental]
                [uuid(D31F39C3-0FB4-513E-AD5E-24375218B5AB)]
                interface IFlowLayoutState : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.FlowLayoutState)]
                [experimental]
                [uuid(6FDBE8EE-2309-5F1C-B7C5-C41359349A9E)]
                interface IFlowLayoutStateFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.FlowLayoutState** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.FlowLayout)]
                [experimental]
                [uuid(47F65870-8251-5A25-AFAF-255C0573EFBC)]
                interface IFlowLayoutStatics : IInspectable
                {
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinRowSpacingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinColumnSpacingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LineAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.FontIconSource)]
                [uuid(DDF34704-C53D-571C-890F-3B5E305DDC69)]
                interface IFontIconSource : IInspectable
                {
                    [propget] HRESULT Glyph([out] [retval] HSTRING* value);
                    [propput] HRESULT Glyph([in] HSTRING value);
                    [propget] HRESULT FontSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT FontSize([in] DOUBLE value);
                    [propget] HRESULT FontFamily([out] [retval] Windows.UI.Xaml.Media.FontFamily** value);
                    [propput] HRESULT FontFamily([in] Windows.UI.Xaml.Media.FontFamily* value);
                    [propget] HRESULT FontWeight([out] [retval] Windows.UI.Text.FontWeight* value);
                    [propput] HRESULT FontWeight([in] Windows.UI.Text.FontWeight value);
                    [propget] HRESULT FontStyle([out] [retval] Windows.UI.Text.FontStyle* value);
                    [propput] HRESULT FontStyle([in] Windows.UI.Text.FontStyle value);
                    [propget] HRESULT IsTextScaleFactorEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsTextScaleFactorEnabled([in] boolean value);
                    [propget] HRESULT MirroredWhenRightToLeft([out] [retval] boolean* value);
                    [propput] HRESULT MirroredWhenRightToLeft([in] boolean value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.FontIconSource)]
                [uuid(BB40EEEE-64D1-5133-B1D6-AE13C21B6678)]
                interface IFontIconSourceFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.FontIconSource** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.FontIconSource)]
                [uuid(12C4716A-31C1-510A-9526-01AB3E2B0738)]
                interface IFontIconSourceStatics : IInspectable
                {
                    [propget] HRESULT GlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontFamilyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontWeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTextScaleFactorEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MirroredWhenRightToLeftProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.IconSource)]
                [uuid(6E3501ED-DD31-51E9-8F14-2561F99C8A8F)]
                interface IIconSource : IInspectable
                {
                    HRESULT CreateIconElement([out] [retval] Windows.UI.Xaml.Controls.IconElement** result);
                    [propget] HRESULT Foreground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Foreground([in] Windows.UI.Xaml.Media.Brush* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.IconSource)]
                [uuid(E8BC19C6-9A64-5C54-9338-E18E076875BF)]
                interface IIconSourceFactory : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.IconSource)]
                [uuid(4DA53AB6-8945-562B-A1A5-FAB5E2E8D575)]
                interface IIconSourceStatics : IInspectable
                {
                    [propget] HRESULT ForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ImageIcon)]
                [uuid(E30C7C6C-2026-5E76-A271-1B9FAB3F849D)]
                interface IImageIcon : IInspectable
                {
                    [propget] HRESULT Source([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT Source([in] Windows.UI.Xaml.Media.ImageSource* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ImageIcon)]
                [uuid(235E0279-A7D0-5FDA-A308-9B7CB9C4C912)]
                interface IImageIconFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.ImageIcon** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ImageIconSource)]
                [uuid(C789D80C-0494-54BE-B941-757D3F723003)]
                interface IImageIconSource : IInspectable
                {
                    [propget] HRESULT ImageSource([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT ImageSource([in] Windows.UI.Xaml.Media.ImageSource* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ImageIconSource)]
                [uuid(24F76321-71BD-530A-8CC8-3F615CD1437A)]
                interface IImageIconSourceFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.ImageIconSource** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ImageIconSource)]
                [uuid(9AD9935A-8D99-562A-856A-C8BA17823D23)]
                interface IImageIconSourceStatics : IInspectable
                {
                    [propget] HRESULT ImageSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ImageIcon)]
                [uuid(0A74C66E-F1B7-5254-9135-2627EEC5156C)]
                interface IImageIconStatics : IInspectable
                {
                    [propget] HRESULT SourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.IndexPath)]
                [experimental]
                [uuid(7AC1252A-2A4A-5E17-96FB-F667294D4FFA)]
                interface IIndexPath : IInspectable
                {
                    HRESULT GetSize([out] [retval] INT32* result);
                    HRESULT GetAt([in] INT32 index, [out] [retval] INT32* result);
                    HRESULT CompareTo([in] Microsoft.UI.Xaml.Controls.IndexPath* other, [out] [retval] INT32* result);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.IndexPath)]
                [experimental]
                [uuid(CCFD4ACE-5FA0-502D-82B4-1674D805390D)]
                interface IIndexPathStatics : IInspectable
                {
                    [default_overload] [overload("CreateFrom")] HRESULT CreateFrom([in] INT32 index, [out] [retval] Microsoft.UI.Xaml.Controls.IndexPath** result);
                    [overload("CreateFrom")] HRESULT CreateFromGroupAndItemIndex([in] INT32 groupIndex, [in] INT32 itemIndex, [out] [retval] Microsoft.UI.Xaml.Controls.IndexPath** result);
                    HRESULT CreateFromIndices([in] Windows.Foundation.Collections.IVector<INT32>* indices, [out] [retval] Microsoft.UI.Xaml.Controls.IndexPath** result);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.InfoBadge)]
                [uuid(82104D7F-03D4-5EA4-872E-F9ECAB758601)]
                interface IInfoBadge : IInspectable
                {
                    [propget] HRESULT Value([out] [retval] INT32* value);
                    [propput] HRESULT Value([in] INT32 value);
                    [propget] HRESULT IconSource([out] [retval] Microsoft.UI.Xaml.Controls.IconSource** value);
                    [propput] HRESULT IconSource([in] Microsoft.UI.Xaml.Controls.IconSource* value);
                    [propget] HRESULT TemplateSettings([out] [retval] Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.InfoBadge)]
                [uuid(FB498205-2DE0-5986-8AEC-2C46AC235087)]
                interface IInfoBadgeFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.InfoBadge** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.InfoBadge)]
                [uuid(64E214C3-F566-57BC-B221-8E9B25E34572)]
                interface IInfoBadgeStatics : IInspectable
                {
                    [propget] HRESULT ValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IconSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TemplateSettingsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings)]
                [uuid(01051F06-1CE9-569D-84F0-09DCEF30C977)]
                interface IInfoBadgeTemplateSettings : IInspectable
                {
                    [propget] HRESULT InfoBadgeCornerRadius([out] [retval] Windows.UI.Xaml.CornerRadius* value);
                    [propput] HRESULT InfoBadgeCornerRadius([in] Windows.UI.Xaml.CornerRadius value);
                    [propget] HRESULT IconElement([out] [retval] Windows.UI.Xaml.Controls.IconElement** value);
                    [propput] HRESULT IconElement([in] Windows.UI.Xaml.Controls.IconElement* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings)]
                [uuid(5D366775-1F6E-558C-AAB4-667704B3070C)]
                interface IInfoBadgeTemplateSettingsFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings)]
                [uuid(FE785851-5534-5AE7-B111-B1DA780FAC3E)]
                interface IInfoBadgeTemplateSettingsStatics : IInspectable
                {
                    [propget] HRESULT InfoBadgeCornerRadiusProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IconElementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.InfoBar)]
                [uuid(273FFDE8-9324-55B7-9FFE-7D995A8AF56B)]
                interface IInfoBar : IInspectable
                {
                    [propget] HRESULT IsOpen([out] [retval] boolean* value);
                    [propput] HRESULT IsOpen([in] boolean value);
                    [propget] HRESULT Title([out] [retval] HSTRING* value);
                    [propput] HRESULT Title([in] HSTRING value);
                    [propget] HRESULT Message([out] [retval] HSTRING* value);
                    [propput] HRESULT Message([in] HSTRING value);
                    [propget] HRESULT Severity([out] [retval] Microsoft.UI.Xaml.Controls.InfoBarSeverity* value);
                    [propput] HRESULT Severity([in] Microsoft.UI.Xaml.Controls.InfoBarSeverity value);
                    [propget] HRESULT IconSource([out] [retval] Microsoft.UI.Xaml.Controls.IconSource** value);
                    [propput] HRESULT IconSource([in] Microsoft.UI.Xaml.Controls.IconSource* value);
                    [propget] HRESULT IsIconVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsIconVisible([in] boolean value);
                    [propget] HRESULT IsClosable([out] [retval] boolean* value);
                    [propput] HRESULT IsClosable([in] boolean value);
                    [propget] HRESULT CloseButtonStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT CloseButtonStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT CloseButtonCommand([out] [retval] Windows.UI.Xaml.Input.ICommand** value);
                    [propput] HRESULT CloseButtonCommand([in] Windows.UI.Xaml.Input.ICommand* value);
                    [propget] HRESULT CloseButtonCommandParameter([out] [retval] IInspectable** value);
                    [propput] HRESULT CloseButtonCommandParameter([in] IInspectable* value);
                    [propget] HRESULT ActionButton([out] [retval] Windows.UI.Xaml.Controls.Primitives.ButtonBase** value);
                    [propput] HRESULT ActionButton([in] Windows.UI.Xaml.Controls.Primitives.ButtonBase* value);
                    [propget] HRESULT Content([out] [retval] IInspectable** value);
                    [propput] HRESULT Content([in] IInspectable* value);
                    [propget] HRESULT ContentTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT ContentTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT TemplateSettings([out] [retval] Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings** value);
                    [eventadd] HRESULT CloseButtonClick([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.InfoBar*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT CloseButtonClick([in] EventRegistrationToken token);
                    [eventadd] HRESULT Closing([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.InfoBar*, Microsoft.UI.Xaml.Controls.InfoBarClosingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Closing([in] EventRegistrationToken token);
                    [eventadd] HRESULT Closed([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.InfoBar*, Microsoft.UI.Xaml.Controls.InfoBarClosedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Closed([in] EventRegistrationToken token);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.InfoBarClosedEventArgs)]
                [uuid(593AF0B3-BDED-53DA-8F56-80ED3C64322C)]
                interface IInfoBarClosedEventArgs : IInspectable
                {
                    [propget] HRESULT Reason([out] [retval] Microsoft.UI.Xaml.Controls.InfoBarCloseReason* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.InfoBarClosedEventArgs)]
                [uuid(42FE1F7E-6D68-5A85-8A5C-ABB7EFFCDF26)]
                interface IInfoBarClosedEventArgsFactory : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.InfoBarClosingEventArgs)]
                [uuid(062D01D6-61AF-5435-8C4B-C51106583B5B)]
                interface IInfoBarClosingEventArgs : IInspectable
                {
                    [propget] HRESULT Reason([out] [retval] Microsoft.UI.Xaml.Controls.InfoBarCloseReason* value);
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.InfoBarClosingEventArgs)]
                [uuid(D6CFCC14-5206-5C9D-801C-3A90B4E2EBE4)]
                interface IInfoBarClosingEventArgsFactory : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.InfoBar)]
                [uuid(60618A60-9BE7-5DF5-BE0D-933D34DDB44C)]
                interface IInfoBarFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.InfoBar** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.InfoBar)]
                [uuid(9CE6008A-54F4-5500-A73D-8D010250E4DA)]
                interface IInfoBarStatics : IInspectable
                {
                    [propget] HRESULT IsOpenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TitleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MessageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SeverityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IconSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsIconVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsClosableProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CloseButtonStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CloseButtonCommandProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CloseButtonCommandParameterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ActionButtonProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TemplateSettingsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings)]
                [uuid(04686C8F-EC5D-58AB-83F9-3F17113CEC18)]
                interface IInfoBarTemplateSettings : IInspectable
                {
                    [propget] HRESULT IconElement([out] [retval] Windows.UI.Xaml.Controls.IconElement** value);
                    [propput] HRESULT IconElement([in] Windows.UI.Xaml.Controls.IconElement* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings)]
                [uuid(29517DAF-C763-56CE-8D54-EEFCAF7F2E01)]
                interface IInfoBarTemplateSettingsFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings)]
                [uuid(CD900277-E17A-52C9-8094-0FB4F5CC19B8)]
                interface IInfoBarTemplateSettingsStatics : IInspectable
                {
                    [propget] HRESULT IconElementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ItemsRepeater)]
                [uuid(0BD894F2-EDFC-5DDF-A166-2DB14BBFDF35)]
                interface IItemsRepeater : IInspectable
                {
                    [propget] HRESULT ItemsSource([out] [retval] IInspectable** value);
                    [propput] HRESULT ItemsSource([in] IInspectable* value);
                    [propget] HRESULT ItemsSourceView([out] [retval] Microsoft.UI.Xaml.Controls.ItemsSourceView** value);
                    [propget] HRESULT ItemTemplate([out] [retval] IInspectable** value);
                    [propput] HRESULT ItemTemplate([in] IInspectable* value);
                    [propget] HRESULT Layout([out] [retval] Microsoft.UI.Xaml.Controls.Layout** value);
                    [propput] HRESULT Layout([in] Microsoft.UI.Xaml.Controls.Layout* value);
                    [propget] HRESULT HorizontalCacheLength([out] [retval] DOUBLE* value);
                    [propput] HRESULT HorizontalCacheLength([in] DOUBLE value);
                    [propget] HRESULT VerticalCacheLength([out] [retval] DOUBLE* value);
                    [propput] HRESULT VerticalCacheLength([in] DOUBLE value);
                    [propget] HRESULT Background([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Background([in] Windows.UI.Xaml.Media.Brush* value);
                    HRESULT GetElementIndex([in] Windows.UI.Xaml.UIElement* element, [out] [retval] INT32* result);
                    HRESULT TryGetElement([in] INT32 index, [out] [retval] Windows.UI.Xaml.UIElement** result);
                    HRESULT GetOrCreateElement([in] INT32 index, [out] [retval] Windows.UI.Xaml.UIElement** result);
                    [eventadd] HRESULT ElementPrepared([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ItemsRepeater*, Microsoft.UI.Xaml.Controls.ItemsRepeaterElementPreparedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ElementPrepared([in] EventRegistrationToken token);
                    [eventadd] HRESULT ElementClearing([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ItemsRepeater*, Microsoft.UI.Xaml.Controls.ItemsRepeaterElementClearingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ElementClearing([in] EventRegistrationToken token);
                    [eventadd] HRESULT ElementIndexChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ItemsRepeater*, Microsoft.UI.Xaml.Controls.ItemsRepeaterElementIndexChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ElementIndexChanged([in] EventRegistrationToken token);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ItemsRepeater)]
                [experimental]
                [uuid(2A698AE1-A6B1-5C55-8787-3B79AC8AB313)]
                interface IItemsRepeater2 : IInspectable
                {
                    [propget] HRESULT Animator([out] [retval] Microsoft.UI.Xaml.Controls.ElementAnimator** value);
                    [propput] HRESULT Animator([in] Microsoft.UI.Xaml.Controls.ElementAnimator* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ItemsRepeaterElementClearingEventArgs)]
                [uuid(1E30B4C7-F1BC-5A6F-8A5B-8C54ADAC5F80)]
                interface IItemsRepeaterElementClearingEventArgs : IInspectable
                {
                    [propget] HRESULT Element([out] [retval] Windows.UI.Xaml.UIElement** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ItemsRepeaterElementIndexChangedEventArgs)]
                [uuid(995EE1FD-E2C3-5FE3-9443-A95A3FAD5A9F)]
                interface IItemsRepeaterElementIndexChangedEventArgs : IInspectable
                {
                    [propget] HRESULT Element([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propget] HRESULT OldIndex([out] [retval] INT32* value);
                    [propget] HRESULT NewIndex([out] [retval] INT32* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ItemsRepeaterElementPreparedEventArgs)]
                [uuid(A56D3912-EE00-560E-8D3E-0EDFD8D56691)]
                interface IItemsRepeaterElementPreparedEventArgs : IInspectable
                {
                    [propget] HRESULT Element([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propget] HRESULT Index([out] [retval] INT32* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ItemsRepeater)]
                [uuid(C3C1F244-67A8-568F-A6F7-5DA8B0EADD49)]
                interface IItemsRepeaterFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.ItemsRepeater** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost)]
                [uuid(A29B4785-8210-5E6E-A40C-36A82B787B4F)]
                interface IItemsRepeaterScrollHost : IInspectable
                {
                    [propget] HRESULT ScrollViewer([out] [retval] Windows.UI.Xaml.Controls.ScrollViewer** value);
                    [propput] HRESULT ScrollViewer([in] Windows.UI.Xaml.Controls.ScrollViewer* value);
                    [propget] HRESULT CurrentAnchor([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propget] HRESULT HorizontalAnchorRatio([out] [retval] DOUBLE* value);
                    [propput] HRESULT HorizontalAnchorRatio([in] DOUBLE value);
                    [propget] HRESULT VerticalAnchorRatio([out] [retval] DOUBLE* value);
                    [propput] HRESULT VerticalAnchorRatio([in] DOUBLE value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ItemsRepeater)]
                [uuid(0B85268A-6714-5D24-A850-D4338E6A91A8)]
                interface IItemsRepeaterStatics : IInspectable
                {
                    [propget] HRESULT ItemsSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LayoutProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalCacheLengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalCacheLengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BackgroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ItemsRepeater)]
                [experimental]
                [uuid(9CC9A40D-4DF7-5A56-AF19-95FFF0AB9F8F)]
                interface IItemsRepeaterStatics2 : IInspectable
                {
                    [propget] HRESULT AnimatorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ItemsSourceView)]
                [uuid(F7F802DE-E79C-5C5F-ABF8-CCBD486B89D6)]
                interface IItemsSourceView : IInspectable
                {
                    [propget] HRESULT Count([out] [retval] INT32* value);
                    HRESULT GetAt([in] INT32 index, [out] [retval] IInspectable** result);
                    [propget] HRESULT HasKeyIndexMapping([out] [retval] boolean* value);
                    HRESULT KeyFromIndex([in] INT32 index, [out] [retval] HSTRING* result);
                    HRESULT IndexFromKey([in] HSTRING key, [out] [retval] INT32* result);
                    HRESULT IndexOf([in] IInspectable* item, [out] [retval] INT32* result);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ItemsSourceView)]
                [uuid(AADC6FDD-EB00-5E58-B95D-120F891D733F)]
                interface IItemsSourceViewFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* source, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.ItemsSourceView** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [uuid(B1F3BBA0-108E-560D-9681-26391B4BC30D)]
                interface IKeyIndexMapping : IInspectable
                {
                    HRESULT KeyFromIndex([in] INT32 index, [out] [retval] HSTRING* result);
                    HRESULT IndexFromKey([in] HSTRING key, [out] [retval] INT32* result);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.Layout)]
                [uuid(24E50C1C-9C51-5144-9DDC-3F500191C262)]
                interface ILayout : IInspectable
                {
                    HRESULT InitializeForContext([in] Microsoft.UI.Xaml.Controls.LayoutContext* context);
                    HRESULT UninitializeForContext([in] Microsoft.UI.Xaml.Controls.LayoutContext* context);
                    HRESULT Measure([in] Microsoft.UI.Xaml.Controls.LayoutContext* context, [in] Windows.Foundation.Size availableSize, [out] [retval] Windows.Foundation.Size* result);
                    HRESULT Arrange([in] Microsoft.UI.Xaml.Controls.LayoutContext* context, [in] Windows.Foundation.Size finalSize, [out] [retval] Windows.Foundation.Size* result);
                    [eventadd] HRESULT MeasureInvalidated([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Layout*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT MeasureInvalidated([in] EventRegistrationToken token);
                    [eventadd] HRESULT ArrangeInvalidated([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Layout*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ArrangeInvalidated([in] EventRegistrationToken token);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.LayoutContext)]
                [uuid(B45A2E55-2ECC-5462-BB26-D47C455BB48E)]
                interface ILayoutContext : IInspectable
                {
                    [propget] HRESULT LayoutState([out] [retval] IInspectable** value);
                    [propput] HRESULT LayoutState([in] IInspectable* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.LayoutContext)]
                [uuid(F7664771-9242-599E-A7DD-0705565DEF98)]
                interface ILayoutContextFactory : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.LayoutContext)]
                [uuid(FDA70E44-6526-5535-BE2B-EC2743670AE2)]
                interface ILayoutContextOverrides : IInspectable
                {
                    [propget] HRESULT LayoutStateCore([out] [retval] IInspectable** value);
                    [propput] HRESULT LayoutStateCore([in] IInspectable* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.Layout)]
                [uuid(EAF956B4-59C9-5E13-A49D-F35B171D8FC9)]
                interface ILayoutFactory : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.LayoutPanel)]
                [experimental]
                [uuid(BCEF3CD8-053F-5AA7-A515-AA6F4635D8D4)]
                interface ILayoutPanel : IInspectable
                {
                    [propget] HRESULT Layout([out] [retval] Microsoft.UI.Xaml.Controls.Layout** value);
                    [propput] HRESULT Layout([in] Microsoft.UI.Xaml.Controls.Layout* value);
                    [propget] HRESULT BorderBrush([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT BorderBrush([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT BorderThickness([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT BorderThickness([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT Padding([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT Padding([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT CornerRadius([out] [retval] Windows.UI.Xaml.CornerRadius* value);
                    [propput] HRESULT CornerRadius([in] Windows.UI.Xaml.CornerRadius value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.LayoutPanel)]
                [experimental]
                [uuid(FF37C4CB-F541-5A35-AB1F-90920092C71C)]
                interface ILayoutPanelFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.LayoutPanel** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.LayoutPanel)]
                [experimental]
                [uuid(1C6E644B-0418-50A2-93A2-D19E6396FFE3)]
                interface ILayoutPanelStatics : IInspectable
                {
                    [propget] HRESULT LayoutProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BorderBrushProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BorderThicknessProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CornerRadiusProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.Layout)]
                [uuid(E46FF416-741E-5176-A1D4-5718D2342243)]
                interface ILayoutProtected : IInspectable
                {
                    HRESULT InvalidateMeasure();
                    HRESULT InvalidateArrange();
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.MenuBar)]
                [uuid(BA97F337-8F1E-5141-B53F-E77A8BA3EBBD)]
                interface IMenuBar : IInspectable
                {
                    [propget] HRESULT Items([out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.MenuBarItem*>** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.MenuBar)]
                [uuid(76AA8759-04EE-5A4C-B98C-D03742D47CDB)]
                interface IMenuBarFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.MenuBar** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.MenuBarItem)]
                [uuid(9CAA4261-3A0C-5A59-8CFE-391744C3F815)]
                interface IMenuBarItem : IInspectable
                {
                    [propget] HRESULT Title([out] [retval] HSTRING* value);
                    [propput] HRESULT Title([in] HSTRING value);
                    [propget] HRESULT Items([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Controls.MenuFlyoutItemBase*>** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.MenuBarItem)]
                [uuid(87D02172-83CB-5459-940F-173F7501B300)]
                interface IMenuBarItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.MenuBarItem** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.MenuBarItemFlyout)]
                [uuid(A412AE4F-C3BC-5679-8D5F-865EB97E83CD)]
                interface IMenuBarItemFlyout : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.MenuBarItemFlyout)]
                [uuid(F895123E-ED54-5A96-8418-F35E48505D43)]
                interface IMenuBarItemFlyoutFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.MenuBarItemFlyout** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.MenuBarItem)]
                [uuid(6282E536-1CFC-5D26-9F6D-8F334DAF997E)]
                interface IMenuBarItemStatics : IInspectable
                {
                    [propget] HRESULT TitleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.MenuBar)]
                [uuid(10CB12F4-DCE0-514F-ACD1-0D53FA0275D1)]
                interface IMenuBarStatics : IInspectable
                {
                    [propget] HRESULT ItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationView)]
                [uuid(B00EB54C-9174-5D84-9678-56C98016E689)]
                interface INavigationView : IInspectable
                {
                    [propget] HRESULT IsPaneOpen([out] [retval] boolean* value);
                    [propput] HRESULT IsPaneOpen([in] boolean value);
                    [propget] HRESULT CompactModeThresholdWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT CompactModeThresholdWidth([in] DOUBLE value);
                    [propget] HRESULT ExpandedModeThresholdWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT ExpandedModeThresholdWidth([in] DOUBLE value);
                    [propget] HRESULT FooterMenuItems([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                    [propget] HRESULT FooterMenuItemsSource([out] [retval] IInspectable** value);
                    [propput] HRESULT FooterMenuItemsSource([in] IInspectable* value);
                    [propget] HRESULT PaneFooter([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT PaneFooter([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT DisplayMode([out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode* value);
                    [propget] HRESULT IsSettingsVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsSettingsVisible([in] boolean value);
                    [propget] HRESULT IsPaneToggleButtonVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsPaneToggleButtonVisible([in] boolean value);
                    [propget] HRESULT AlwaysShowHeader([out] [retval] boolean* value);
                    [propput] HRESULT AlwaysShowHeader([in] boolean value);
                    [propget] HRESULT CompactPaneLength([out] [retval] DOUBLE* value);
                    [propput] HRESULT CompactPaneLength([in] DOUBLE value);
                    [propget] HRESULT OpenPaneLength([out] [retval] DOUBLE* value);
                    [propput] HRESULT OpenPaneLength([in] DOUBLE value);
                    [propget] HRESULT PaneToggleButtonStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT PaneToggleButtonStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT SelectedItem([out] [retval] IInspectable** value);
                    [propput] HRESULT SelectedItem([in] IInspectable* value);
                    [propget] HRESULT MenuItems([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                    [propget] HRESULT MenuItemsSource([out] [retval] IInspectable** value);
                    [propput] HRESULT MenuItemsSource([in] IInspectable* value);
                    [propget] HRESULT SettingsItem([out] [retval] IInspectable** value);
                    [propget] HRESULT AutoSuggestBox([out] [retval] Windows.UI.Xaml.Controls.AutoSuggestBox** value);
                    [propput] HRESULT AutoSuggestBox([in] Windows.UI.Xaml.Controls.AutoSuggestBox* value);
                    [propget] HRESULT MenuItemTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT MenuItemTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT MenuItemTemplateSelector([out] [retval] Windows.UI.Xaml.Controls.DataTemplateSelector** value);
                    [propput] HRESULT MenuItemTemplateSelector([in] Windows.UI.Xaml.Controls.DataTemplateSelector* value);
                    [propget] HRESULT MenuItemContainerStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT MenuItemContainerStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT MenuItemContainerStyleSelector([out] [retval] Windows.UI.Xaml.Controls.StyleSelector** value);
                    [propput] HRESULT MenuItemContainerStyleSelector([in] Windows.UI.Xaml.Controls.StyleSelector* value);
                    HRESULT MenuItemFromContainer([in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] IInspectable** result);
                    HRESULT ContainerFromMenuItem([in] IInspectable* item, [out] [retval] Windows.UI.Xaml.DependencyObject** result);
                    [eventadd] HRESULT SelectionChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectionChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT ItemInvoked([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ItemInvoked([in] EventRegistrationToken token);
                    [eventadd] HRESULT DisplayModeChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, Microsoft.UI.Xaml.Controls.NavigationViewDisplayModeChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DisplayModeChanged([in] EventRegistrationToken token);
                    [propget] HRESULT IsTitleBarAutoPaddingEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsTitleBarAutoPaddingEnabled([in] boolean value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationView)]
                [uuid(5BA2EEFC-3736-5E42-AC56-9D0BE5523D40)]
                interface INavigationView2 : IInspectable
                {
                    [propget] HRESULT IsBackButtonVisible([out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible* value);
                    [propput] HRESULT IsBackButtonVisible([in] Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible value);
                    [propget] HRESULT IsBackEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsBackEnabled([in] boolean value);
                    [propget] HRESULT PaneTitle([out] [retval] HSTRING* value);
                    [propput] HRESULT PaneTitle([in] HSTRING value);
                    [eventadd] HRESULT BackRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, Microsoft.UI.Xaml.Controls.NavigationViewBackRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT BackRequested([in] EventRegistrationToken token);
                    [eventadd] HRESULT PaneClosed([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PaneClosed([in] EventRegistrationToken token);
                    [eventadd] HRESULT PaneClosing([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, Microsoft.UI.Xaml.Controls.NavigationViewPaneClosingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PaneClosing([in] EventRegistrationToken token);
                    [eventadd] HRESULT PaneOpened([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PaneOpened([in] EventRegistrationToken token);
                    [eventadd] HRESULT PaneOpening([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PaneOpening([in] EventRegistrationToken token);
                    [propget] HRESULT PaneDisplayMode([out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode* value);
                    [propput] HRESULT PaneDisplayMode([in] Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode value);
                    [propget] HRESULT PaneHeader([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT PaneHeader([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT PaneCustomContent([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT PaneCustomContent([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT ContentOverlay([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT ContentOverlay([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT IsPaneVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsPaneVisible([in] boolean value);
                    [propget] HRESULT SelectionFollowsFocus([out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus* value);
                    [propput] HRESULT SelectionFollowsFocus([in] Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus value);
                    [propget] HRESULT TemplateSettings([out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings** value);
                    [propget] HRESULT ShoulderNavigationEnabled([out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled* value);
                    [propput] HRESULT ShoulderNavigationEnabled([in] Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled value);
                    [propget] HRESULT OverflowLabelMode([out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode* value);
                    [propput] HRESULT OverflowLabelMode([in] Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode value);
                    [eventadd] HRESULT Expanding([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, Microsoft.UI.Xaml.Controls.NavigationViewItemExpandingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Expanding([in] EventRegistrationToken token);
                    [eventadd] HRESULT Collapsed([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NavigationView*, Microsoft.UI.Xaml.Controls.NavigationViewItemCollapsedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Collapsed([in] EventRegistrationToken token);
                    HRESULT Expand([in] Microsoft.UI.Xaml.Controls.NavigationViewItem* item);
                    HRESULT Collapse([in] Microsoft.UI.Xaml.Controls.NavigationViewItem* item);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewBackRequestedEventArgs)]
                [uuid(AE752207-BD1B-5AFA-A872-E9BBAEEA0EDE)]
                interface INavigationViewBackRequestedEventArgs : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewDisplayModeChangedEventArgs)]
                [uuid(58DCF1EA-9E56-522C-B3F8-34BD55ECACA4)]
                interface INavigationViewDisplayModeChangedEventArgs : IInspectable
                {
                    [propget] HRESULT DisplayMode([out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationView)]
                [uuid(FFEA1ADA-9232-5507-A320-ED2FADBE6127)]
                interface INavigationViewFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.NavigationView** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItem)]
                [uuid(143324CB-BB4C-5261-AD98-A31B4B57A0CC)]
                interface INavigationViewItem : IInspectable
                {
                    [propget] HRESULT Icon([out] [retval] Windows.UI.Xaml.Controls.IconElement** value);
                    [propput] HRESULT Icon([in] Windows.UI.Xaml.Controls.IconElement* value);
                    [propget] HRESULT CompactPaneLength([out] [retval] DOUBLE* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItem)]
                [uuid(2D5BD889-9DAC-5675-B254-68226F077A61)]
                interface INavigationViewItem2 : IInspectable
                {
                    [propget] HRESULT SelectsOnInvoked([out] [retval] boolean* value);
                    [propput] HRESULT SelectsOnInvoked([in] boolean value);
                    [propget] HRESULT IsExpanded([out] [retval] boolean* value);
                    [propput] HRESULT IsExpanded([in] boolean value);
                    [propget] HRESULT HasUnrealizedChildren([out] [retval] boolean* value);
                    [propput] HRESULT HasUnrealizedChildren([in] boolean value);
                    [propget] HRESULT IsChildSelected([out] [retval] boolean* value);
                    [propput] HRESULT IsChildSelected([in] boolean value);
                    [propget] HRESULT MenuItems([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                    [propget] HRESULT MenuItemsSource([out] [retval] IInspectable** value);
                    [propput] HRESULT MenuItemsSource([in] IInspectable* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 2.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItem)]
                [uuid(C6AA3120-D888-5C32-8BB7-490EC91B1AEC)]
                interface INavigationViewItem3 : IInspectable
                {
                    [propget] HRESULT InfoBadge([out] [retval] Microsoft.UI.Xaml.Controls.InfoBadge** value);
                    [propput] HRESULT InfoBadge([in] Microsoft.UI.Xaml.Controls.InfoBadge* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItemBase)]
                [uuid(33586494-AF48-513F-BE4D-F645E8C89005)]
                interface INavigationViewItemBase : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItemBase)]
                [uuid(D94EE683-D437-5523-9C5C-11D4804E471E)]
                interface INavigationViewItemBase2 : IInspectable
                {
                    [propget] HRESULT IsSelected([out] [retval] boolean* value);
                    [propput] HRESULT IsSelected([in] boolean value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItemBase)]
                [uuid(31B9D7B1-7C38-5916-99C6-C71F6B012B1B)]
                interface INavigationViewItemBaseFactory : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItemBase)]
                [uuid(02B75190-E038-5233-9D7D-A60099DEB58B)]
                interface INavigationViewItemBaseStatics : IInspectable
                {
                    [propget] HRESULT IsSelectedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItemCollapsedEventArgs)]
                [uuid(B546F6A1-C66F-5DED-B5D7-BED0A26197E3)]
                interface INavigationViewItemCollapsedEventArgs : IInspectable
                {
                    [propget] HRESULT CollapsedItemContainer([out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewItemBase** value);
                    [propget] HRESULT CollapsedItem([out] [retval] IInspectable** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItemExpandingEventArgs)]
                [uuid(6F0941BE-E991-52F8-8315-F08389497976)]
                interface INavigationViewItemExpandingEventArgs : IInspectable
                {
                    [propget] HRESULT ExpandingItemContainer([out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewItemBase** value);
                    [propget] HRESULT ExpandingItem([out] [retval] IInspectable** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItem)]
                [uuid(DE60A001-9385-5535-80E1-2B68F4BFDE26)]
                interface INavigationViewItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewItem** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItemHeader)]
                [uuid(432BC062-45BC-57EF-A2D3-11851A56A882)]
                interface INavigationViewItemHeader : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItemHeader)]
                [uuid(6A5447CD-2918-5FE3-899B-93D6961285E6)]
                interface INavigationViewItemHeaderFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewItemHeader** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs)]
                [uuid(074CEBAA-5D05-547B-8CD6-D19AC2D9BB3B)]
                interface INavigationViewItemInvokedEventArgs : IInspectable
                {
                    [propget] HRESULT InvokedItem([out] [retval] IInspectable** value);
                    [propget] HRESULT IsSettingsInvoked([out] [retval] boolean* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs)]
                [uuid(F4B3EDA4-3333-51ED-9251-9CF479F155C3)]
                interface INavigationViewItemInvokedEventArgs2 : IInspectable
                {
                    [propget] HRESULT InvokedItemContainer([out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewItemBase** value);
                    [propget] HRESULT RecommendedNavigationTransitionInfo([out] [retval] Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItemSeparator)]
                [uuid(E3C35630-1D5F-5689-A0CB-8794485CAACF)]
                interface INavigationViewItemSeparator : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItemSeparator)]
                [uuid(181266A1-D4F8-5AF7-810B-AEE8A1D452ED)]
                interface INavigationViewItemSeparatorFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewItemSeparator** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItem)]
                [uuid(00336D86-C1C5-55BF-A20D-A9F4512363EF)]
                interface INavigationViewItemStatics : IInspectable
                {
                    [propget] HRESULT IconProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CompactPaneLengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItem)]
                [uuid(3F9F2A50-0737-5F45-8084-90FD628FDB13)]
                interface INavigationViewItemStatics2 : IInspectable
                {
                    [propget] HRESULT SelectsOnInvokedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsExpandedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HasUnrealizedChildrenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsChildSelectedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MenuItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MenuItemsSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 2.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewItem)]
                [uuid(A1524411-3ED8-55D3-904A-0E8F2E87907E)]
                interface INavigationViewItemStatics3 : IInspectable
                {
                    [propget] HRESULT InfoBadgeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewPaneClosingEventArgs)]
                [uuid(E8643304-6DB4-5AF5-BAC2-62733CA037DA)]
                interface INavigationViewPaneClosingEventArgs : IInspectable
                {
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs)]
                [uuid(14A064A5-C79D-5F63-AC6E-1C313FE63566)]
                interface INavigationViewSelectionChangedEventArgs : IInspectable
                {
                    [propget] HRESULT SelectedItem([out] [retval] IInspectable** value);
                    [propget] HRESULT IsSettingsSelected([out] [retval] boolean* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs)]
                [uuid(38DAEB2B-5363-51E3-BED4-653641B56336)]
                interface INavigationViewSelectionChangedEventArgs2 : IInspectable
                {
                    [propget] HRESULT SelectedItemContainer([out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewItemBase** value);
                    [propget] HRESULT RecommendedNavigationTransitionInfo([out] [retval] Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationView)]
                [uuid(21DE4B8B-3809-5E91-8506-68222BEF82E8)]
                interface INavigationViewStatics : IInspectable
                {
                    [propget] HRESULT IsPaneOpenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CompactModeThresholdWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ExpandedModeThresholdWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FooterMenuItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FooterMenuItemsSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaneFooterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DisplayModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsSettingsVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsPaneToggleButtonVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AlwaysShowHeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CompactPaneLengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OpenPaneLengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaneToggleButtonStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MenuItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MenuItemsSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedItemProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SettingsItemProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AutoSuggestBoxProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MenuItemTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MenuItemTemplateSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MenuItemContainerStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MenuItemContainerStyleSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTitleBarAutoPaddingEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationView)]
                [uuid(23D94681-6EBC-583B-A770-A4475A7441CF)]
                interface INavigationViewStatics2 : IInspectable
                {
                    [propget] HRESULT IsBackButtonVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsBackEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaneTitleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaneDisplayModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaneHeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaneCustomContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentOverlayProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsPaneVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectionFollowsFocusProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TemplateSettingsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ShoulderNavigationEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OverflowLabelModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings)]
                [uuid(AE37A75D-4C4F-504D-83DC-A894F408F87C)]
                interface INavigationViewTemplateSettings : IInspectable
                {
                    [propget] HRESULT TopPadding([out] [retval] DOUBLE* value);
                    [propget] HRESULT OverflowButtonVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT PaneToggleButtonVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT BackButtonVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT TopPaneVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT LeftPaneVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT SingleSelectionFollowsFocus([out] [retval] boolean* value);
                    [propget] HRESULT PaneToggleButtonWidth([out] [retval] DOUBLE* value);
                    [propget] HRESULT SmallerPaneToggleButtonWidth([out] [retval] DOUBLE* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings)]
                [experimental]
                [uuid(57A2A149-61D6-5CA1-9629-A036E88EEF82)]
                interface INavigationViewTemplateSettings2 : IInspectable
                {
                    [propget] HRESULT OpenPaneWidth([out] [retval] DOUBLE* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings)]
                [uuid(34FF6C94-6465-5F3E-B0A5-4F1EEA48E743)]
                interface INavigationViewTemplateSettingsFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings)]
                [uuid(B25095FF-B7FE-5AAE-999B-1F1F01D5FA12)]
                interface INavigationViewTemplateSettingsStatics : IInspectable
                {
                    [propget] HRESULT TopPaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OverflowButtonVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaneToggleButtonVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BackButtonVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TopPaneVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LeftPaneVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SingleSelectionFollowsFocusProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PaneToggleButtonWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SmallerPaneToggleButtonWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings)]
                [experimental]
                [uuid(3BA1625D-170F-597F-8499-48878CB1F592)]
                interface INavigationViewTemplateSettingsStatics2 : IInspectable
                {
                    [propget] HRESULT OpenPaneWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NonVirtualizingLayout)]
                [uuid(0C24DEFD-F68F-51D9-998E-4CBAD48BE012)]
                interface INonVirtualizingLayout : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext)]
                [uuid(0BA9C1BB-651C-5F63-BCBB-7BDFE74B7B38)]
                interface INonVirtualizingLayoutContext : IInspectable
                {
                    [propget] HRESULT Children([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.UIElement*>** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext)]
                [uuid(DABAC020-189C-5BBF-A4DC-97DA1199F577)]
                interface INonVirtualizingLayoutContextFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext)]
                [uuid(F8D4589F-B38B-5C09-8356-C73ECFB6EED8)]
                interface INonVirtualizingLayoutContextOverrides : IInspectable
                {
                    [propget] HRESULT ChildrenCore([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.UIElement*>** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NonVirtualizingLayout)]
                [uuid(A16D2D12-DBAC-5CE0-AEF5-09171A4D3571)]
                interface INonVirtualizingLayoutFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.NonVirtualizingLayout** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NonVirtualizingLayout)]
                [uuid(3C28B831-35C1-5182-A843-A43F339B6687)]
                interface INonVirtualizingLayoutOverrides : IInspectable
                {
                    HRESULT InitializeForContextCore([in] Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext* context);
                    HRESULT UninitializeForContextCore([in] Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext* context);
                    HRESULT MeasureOverride([in] Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext* context, [in] Windows.Foundation.Size availableSize, [out] [retval] Windows.Foundation.Size* result);
                    HRESULT ArrangeOverride([in] Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext* context, [in] Windows.Foundation.Size finalSize, [out] [retval] Windows.Foundation.Size* result);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NumberBox)]
                [uuid(22C43A67-D393-56A9-801A-2DEA91877DE6)]
                interface INumberBox : IInspectable
                {
                    [propget] HRESULT Minimum([out] [retval] DOUBLE* value);
                    [propput] HRESULT Minimum([in] DOUBLE value);
                    [propget] HRESULT Maximum([out] [retval] DOUBLE* value);
                    [propput] HRESULT Maximum([in] DOUBLE value);
                    [propget] HRESULT Value([out] [retval] DOUBLE* value);
                    [propput] HRESULT Value([in] DOUBLE value);
                    [propget] HRESULT SmallChange([out] [retval] DOUBLE* value);
                    [propput] HRESULT SmallChange([in] DOUBLE value);
                    [propget] HRESULT LargeChange([out] [retval] DOUBLE* value);
                    [propput] HRESULT LargeChange([in] DOUBLE value);
                    [propget] HRESULT Text([out] [retval] HSTRING* value);
                    [propput] HRESULT Text([in] HSTRING value);
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT PlaceholderText([out] [retval] HSTRING* value);
                    [propput] HRESULT PlaceholderText([in] HSTRING value);
                    [propget] HRESULT SelectionFlyout([out] [retval] Windows.UI.Xaml.Controls.Primitives.FlyoutBase** value);
                    [propput] HRESULT SelectionFlyout([in] Windows.UI.Xaml.Controls.Primitives.FlyoutBase* value);
                    [propget] HRESULT SelectionHighlightColor([out] [retval] Windows.UI.Xaml.Media.SolidColorBrush** value);
                    [propput] HRESULT SelectionHighlightColor([in] Windows.UI.Xaml.Media.SolidColorBrush* value);
                    [propget] HRESULT TextReadingOrder([out] [retval] Windows.UI.Xaml.TextReadingOrder* value);
                    [propput] HRESULT TextReadingOrder([in] Windows.UI.Xaml.TextReadingOrder value);
                    [propget] HRESULT PreventKeyboardDisplayOnProgrammaticFocus([out] [retval] boolean* value);
                    [propput] HRESULT PreventKeyboardDisplayOnProgrammaticFocus([in] boolean value);
                    [propget] HRESULT Description([out] [retval] IInspectable** value);
                    [propput] HRESULT Description([in] IInspectable* value);
                    [propget] HRESULT ValidationMode([out] [retval] Microsoft.UI.Xaml.Controls.NumberBoxValidationMode* value);
                    [propput] HRESULT ValidationMode([in] Microsoft.UI.Xaml.Controls.NumberBoxValidationMode value);
                    [propget] HRESULT SpinButtonPlacementMode([out] [retval] Microsoft.UI.Xaml.Controls.NumberBoxSpinButtonPlacementMode* value);
                    [propput] HRESULT SpinButtonPlacementMode([in] Microsoft.UI.Xaml.Controls.NumberBoxSpinButtonPlacementMode value);
                    [propget] HRESULT IsWrapEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsWrapEnabled([in] boolean value);
                    [propget] HRESULT AcceptsExpression([out] [retval] boolean* value);
                    [propput] HRESULT AcceptsExpression([in] boolean value);
                    [propget] HRESULT NumberFormatter([out] [retval] Windows.Globalization.NumberFormatting.INumberFormatter2** value);
                    [propput] HRESULT NumberFormatter([in] Windows.Globalization.NumberFormatting.INumberFormatter2* value);
                    [eventadd] HRESULT ValueChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.NumberBox*, Microsoft.UI.Xaml.Controls.NumberBoxValueChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ValueChanged([in] EventRegistrationToken token);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NumberBox)]
                [experimental]
                [uuid(2FAACBD1-1F8A-5F0C-BC88-EE19695A613E)]
                interface INumberBox2 : IInspectable
                {
                    [propget] HRESULT InputScope([out] [retval] Windows.UI.Xaml.Input.InputScope** value);
                    [propput] HRESULT InputScope([in] Windows.UI.Xaml.Input.InputScope* value);
                    [propget] HRESULT TextAlignment([out] [retval] Windows.UI.Xaml.TextAlignment* value);
                    [propput] HRESULT TextAlignment([in] Windows.UI.Xaml.TextAlignment value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NumberBox)]
                [uuid(6B81F3CB-45A4-5D19-9BBB-A9FE4656AC4D)]
                interface INumberBoxFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.NumberBox** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NumberBox)]
                [uuid(7C58A821-453D-556D-A225-5750513F7179)]
                interface INumberBoxStatics : IInspectable
                {
                    [propget] HRESULT MinimumProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaximumProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SmallChangeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LargeChangeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaceholderTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectionFlyoutProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectionHighlightColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextReadingOrderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PreventKeyboardDisplayOnProgrammaticFocusProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DescriptionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ValidationModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SpinButtonPlacementModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsWrapEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AcceptsExpressionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT NumberFormatterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NumberBox)]
                [experimental]
                [uuid(16A4AC1D-72C4-5D3D-928E-C99A3B98055A)]
                interface INumberBoxStatics2 : IInspectable
                {
                    [propget] HRESULT InputScopeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.NumberBoxValueChangedEventArgs)]
                [uuid(C66CF16E-7C8A-532E-9D23-058C1C98DD50)]
                interface INumberBoxValueChangedEventArgs : IInspectable
                {
                    [propget] HRESULT OldValue([out] [retval] DOUBLE* value);
                    [propget] HRESULT NewValue([out] [retval] DOUBLE* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.PagerControl)]
                [experimental]
                [uuid(0D97FD96-F4E8-5D22-98C7-428AFFB70932)]
                interface IPagerControl : IInspectable
                {
                    [propget] HRESULT DisplayMode([out] [retval] Microsoft.UI.Xaml.Controls.PagerControlDisplayMode* value);
                    [propput] HRESULT DisplayMode([in] Microsoft.UI.Xaml.Controls.PagerControlDisplayMode value);
                    [propget] HRESULT NumberOfPages([out] [retval] INT32* value);
                    [propput] HRESULT NumberOfPages([in] INT32 value);
                    [propget] HRESULT FirstButtonVisibility([out] [retval] Microsoft.UI.Xaml.Controls.PagerControlButtonVisibility* value);
                    [propput] HRESULT FirstButtonVisibility([in] Microsoft.UI.Xaml.Controls.PagerControlButtonVisibility value);
                    [propget] HRESULT PreviousButtonVisibility([out] [retval] Microsoft.UI.Xaml.Controls.PagerControlButtonVisibility* value);
                    [propput] HRESULT PreviousButtonVisibility([in] Microsoft.UI.Xaml.Controls.PagerControlButtonVisibility value);
                    [propget] HRESULT NextButtonVisibility([out] [retval] Microsoft.UI.Xaml.Controls.PagerControlButtonVisibility* value);
                    [propput] HRESULT NextButtonVisibility([in] Microsoft.UI.Xaml.Controls.PagerControlButtonVisibility value);
                    [propget] HRESULT LastButtonVisibility([out] [retval] Microsoft.UI.Xaml.Controls.PagerControlButtonVisibility* value);
                    [propput] HRESULT LastButtonVisibility([in] Microsoft.UI.Xaml.Controls.PagerControlButtonVisibility value);
                    [propget] HRESULT FirstButtonCommand([out] [retval] Windows.UI.Xaml.Input.ICommand** value);
                    [propput] HRESULT FirstButtonCommand([in] Windows.UI.Xaml.Input.ICommand* value);
                    [propget] HRESULT PreviousButtonCommand([out] [retval] Windows.UI.Xaml.Input.ICommand** value);
                    [propput] HRESULT PreviousButtonCommand([in] Windows.UI.Xaml.Input.ICommand* value);
                    [propget] HRESULT NextButtonCommand([out] [retval] Windows.UI.Xaml.Input.ICommand** value);
                    [propput] HRESULT NextButtonCommand([in] Windows.UI.Xaml.Input.ICommand* value);
                    [propget] HRESULT LastButtonCommand([out] [retval] Windows.UI.Xaml.Input.ICommand** value);
                    [propput] HRESULT LastButtonCommand([in] Windows.UI.Xaml.Input.ICommand* value);
                    [propget] HRESULT PagerInputCommand([out] [retval] Windows.UI.Xaml.Input.ICommand** value);
                    [propput] HRESULT PagerInputCommand([in] Windows.UI.Xaml.Input.ICommand* value);
                    [propget] HRESULT FirstButtonStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT FirstButtonStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT PreviousButtonStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT PreviousButtonStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT NextButtonStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT NextButtonStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT LastButtonStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT LastButtonStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT ButtonPanelAlwaysShowFirstLastPageIndex([out] [retval] boolean* value);
                    [propput] HRESULT ButtonPanelAlwaysShowFirstLastPageIndex([in] boolean value);
                    [propget] HRESULT SelectedPageIndex([out] [retval] INT32* value);
                    [propput] HRESULT SelectedPageIndex([in] INT32 value);
                    [propget] HRESULT PrefixText([out] [retval] HSTRING* value);
                    [propput] HRESULT PrefixText([in] HSTRING value);
                    [propget] HRESULT SuffixText([out] [retval] HSTRING* value);
                    [propput] HRESULT SuffixText([in] HSTRING value);
                    [eventadd] HRESULT SelectedIndexChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.PagerControl*, Microsoft.UI.Xaml.Controls.PagerControlSelectedIndexChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectedIndexChanged([in] EventRegistrationToken token);
                    [propget] HRESULT TemplateSettings([out] [retval] Microsoft.UI.Xaml.Controls.PagerControlTemplateSettings** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.PagerControl)]
                [experimental]
                [uuid(0B371A39-F5C9-5601-B1E9-39E4F4760592)]
                interface IPagerControlFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.PagerControl** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.PagerControlSelectedIndexChangedEventArgs)]
                [experimental]
                [uuid(A12A562B-C03A-5F80-A7E5-523311610504)]
                interface IPagerControlSelectedIndexChangedEventArgs : IInspectable
                {
                    [propget] HRESULT NewPageIndex([out] [retval] INT32* value);
                    [propget] HRESULT PreviousPageIndex([out] [retval] INT32* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.PagerControl)]
                [experimental]
                [uuid(EC098F17-6FF8-57D5-9949-911EB137DAA4)]
                interface IPagerControlStatics : IInspectable
                {
                    [propget] HRESULT DisplayModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT NumberOfPagesProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FirstButtonVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PreviousButtonVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT NextButtonVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LastButtonVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FirstButtonCommandProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PreviousButtonCommandProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT NextButtonCommandProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LastButtonCommandProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PagerInputCommandProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FirstButtonStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PreviousButtonStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT NextButtonStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LastButtonStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ButtonPanelAlwaysShowFirstLastPageIndexProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedPageIndexProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PrefixTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SuffixTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.PagerControlTemplateSettings)]
                [experimental]
                [uuid(F4A16613-0345-5841-B51A-227310797727)]
                interface IPagerControlTemplateSettings : IInspectable
                {
                    [propget] HRESULT Pages([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                    [propget] HRESULT NumberPanelItems([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.PagerControlTemplateSettings)]
                [experimental]
                [uuid(25665661-8AB3-50BA-83F7-2A5D0AC37409)]
                interface IPagerControlTemplateSettingsFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.PagerControlTemplateSettings** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ParallaxView)]
                [uuid(692E1E53-4231-5DE0-ACB4-859E494DAB73)]
                interface IParallaxView : IInspectable
                {
                    [propget] HRESULT Child([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Child([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT HorizontalShift([out] [retval] DOUBLE* value);
                    [propput] HRESULT HorizontalShift([in] DOUBLE value);
                    [propget] HRESULT HorizontalSourceEndOffset([out] [retval] DOUBLE* value);
                    [propput] HRESULT HorizontalSourceEndOffset([in] DOUBLE value);
                    [propget] HRESULT HorizontalSourceOffsetKind([out] [retval] Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind* value);
                    [propput] HRESULT HorizontalSourceOffsetKind([in] Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind value);
                    [propget] HRESULT HorizontalSourceStartOffset([out] [retval] DOUBLE* value);
                    [propput] HRESULT HorizontalSourceStartOffset([in] DOUBLE value);
                    [propget] HRESULT IsHorizontalShiftClamped([out] [retval] boolean* value);
                    [propput] HRESULT IsHorizontalShiftClamped([in] boolean value);
                    [propget] HRESULT IsVerticalShiftClamped([out] [retval] boolean* value);
                    [propput] HRESULT IsVerticalShiftClamped([in] boolean value);
                    [propget] HRESULT MaxHorizontalShiftRatio([out] [retval] DOUBLE* value);
                    [propput] HRESULT MaxHorizontalShiftRatio([in] DOUBLE value);
                    [propget] HRESULT MaxVerticalShiftRatio([out] [retval] DOUBLE* value);
                    [propput] HRESULT MaxVerticalShiftRatio([in] DOUBLE value);
                    [propget] HRESULT Source([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Source([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT VerticalShift([out] [retval] DOUBLE* value);
                    [propput] HRESULT VerticalShift([in] DOUBLE value);
                    [propget] HRESULT VerticalSourceEndOffset([out] [retval] DOUBLE* value);
                    [propput] HRESULT VerticalSourceEndOffset([in] DOUBLE value);
                    [propget] HRESULT VerticalSourceOffsetKind([out] [retval] Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind* value);
                    [propput] HRESULT VerticalSourceOffsetKind([in] Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind value);
                    [propget] HRESULT VerticalSourceStartOffset([out] [retval] DOUBLE* value);
                    [propput] HRESULT VerticalSourceStartOffset([in] DOUBLE value);
                    HRESULT RefreshAutomaticHorizontalOffsets();
                    HRESULT RefreshAutomaticVerticalOffsets();
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ParallaxView)]
                [uuid(61DC973D-C595-5261-A9B7-35F41042EB00)]
                interface IParallaxViewFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.ParallaxView** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ParallaxView)]
                [uuid(B17A0882-E92E-5AA0-92D5-3DE69F0E6AA8)]
                interface IParallaxViewStatics : IInspectable
                {
                    [propget] HRESULT ChildProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalSourceEndOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalSourceOffsetKindProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalSourceStartOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxHorizontalShiftRatioProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalShiftProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsHorizontalShiftClampedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsVerticalShiftClampedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalSourceEndOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalSourceOffsetKindProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalSourceStartOffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxVerticalShiftRatioProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalShiftProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.PathIconSource)]
                [uuid(3C89356E-0A21-5E5E-A2BA-D8837365143B)]
                interface IPathIconSource : IInspectable
                {
                    [propget] HRESULT Data([out] [retval] Windows.UI.Xaml.Media.Geometry** value);
                    [propput] HRESULT Data([in] Windows.UI.Xaml.Media.Geometry* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.PathIconSource)]
                [uuid(9FEFE31E-5AB6-5394-A6EF-672F174D333B)]
                interface IPathIconSourceFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.PathIconSource** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.PathIconSource)]
                [uuid(1CA1C9F2-2E93-5877-B640-836142C2FAC0)]
                interface IPathIconSourceStatics : IInspectable
                {
                    [propget] HRESULT DataProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.PersonPicture)]
                [uuid(976B210A-DDFF-5E30-9FBD-95123BE9AAAC)]
                interface IPersonPicture : IInspectable
                {
                    [propget] HRESULT BadgeNumber([out] [retval] INT32* value);
                    [propput] HRESULT BadgeNumber([in] INT32 value);
                    [propget] HRESULT BadgeGlyph([out] [retval] HSTRING* value);
                    [propput] HRESULT BadgeGlyph([in] HSTRING value);
                    [propget] HRESULT BadgeImageSource([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT BadgeImageSource([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT BadgeText([out] [retval] HSTRING* value);
                    [propput] HRESULT BadgeText([in] HSTRING value);
                    [propget] HRESULT IsGroup([out] [retval] boolean* value);
                    [propput] HRESULT IsGroup([in] boolean value);
                    [propget] HRESULT Contact([out] [retval] Windows.ApplicationModel.Contacts.Contact** value);
                    [propput] HRESULT Contact([in] Windows.ApplicationModel.Contacts.Contact* value);
                    [propget] HRESULT DisplayName([out] [retval] HSTRING* value);
                    [propput] HRESULT DisplayName([in] HSTRING value);
                    [propget] HRESULT Initials([out] [retval] HSTRING* value);
                    [propput] HRESULT Initials([in] HSTRING value);
                    [propget] HRESULT PreferSmallImage([out] [retval] boolean* value);
                    [propput] HRESULT PreferSmallImage([in] boolean value);
                    [propget] HRESULT ProfilePicture([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT ProfilePicture([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT TemplateSettings([out] [retval] Microsoft.UI.Xaml.Controls.PersonPictureTemplateSettings** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.PersonPicture)]
                [uuid(7EC0794C-F2CC-5282-A89D-CD3BB765B71A)]
                interface IPersonPictureFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.PersonPicture** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.PersonPicture)]
                [uuid(D1AFCF40-B7BB-5873-9AB5-9EE6F065DD1E)]
                interface IPersonPictureStatics : IInspectable
                {
                    [propget] HRESULT BadgeNumberProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BadgeGlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BadgeImageSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BadgeTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsGroupProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContactProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DisplayNameProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT InitialsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PreferSmallImageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ProfilePictureProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.PersonPictureTemplateSettings)]
                [uuid(9FB4BA10-CBF8-5DBF-918A-8323DAA4F7E4)]
                interface IPersonPictureTemplateSettings : IInspectable
                {
                    [propget] HRESULT ActualInitials([out] [retval] HSTRING* value);
                    [propget] HRESULT ActualImageBrush([out] [retval] Windows.UI.Xaml.Media.ImageBrush** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.PipsPager)]
                [uuid(DB89F276-C9D8-5BC2-B9AD-AB8EF33ED8E1)]
                interface IPipsPager : IInspectable
                {
                    [propget] HRESULT NumberOfPages([out] [retval] INT32* value);
                    [propput] HRESULT NumberOfPages([in] INT32 value);
                    [propget] HRESULT SelectedPageIndex([out] [retval] INT32* value);
                    [propput] HRESULT SelectedPageIndex([in] INT32 value);
                    [propget] HRESULT MaxVisiblePips([out] [retval] INT32* value);
                    [propput] HRESULT MaxVisiblePips([in] INT32 value);
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                    [propget] HRESULT PreviousButtonVisibility([out] [retval] Microsoft.UI.Xaml.Controls.PipsPagerButtonVisibility* value);
                    [propput] HRESULT PreviousButtonVisibility([in] Microsoft.UI.Xaml.Controls.PipsPagerButtonVisibility value);
                    [propget] HRESULT NextButtonVisibility([out] [retval] Microsoft.UI.Xaml.Controls.PipsPagerButtonVisibility* value);
                    [propput] HRESULT NextButtonVisibility([in] Microsoft.UI.Xaml.Controls.PipsPagerButtonVisibility value);
                    [propget] HRESULT PreviousButtonStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT PreviousButtonStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT NextButtonStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT NextButtonStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT SelectedPipStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT SelectedPipStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT NormalPipStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT NormalPipStyle([in] Windows.UI.Xaml.Style* value);
                    [eventadd] HRESULT SelectedIndexChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.PipsPager*, Microsoft.UI.Xaml.Controls.PipsPagerSelectedIndexChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectedIndexChanged([in] EventRegistrationToken token);
                    [propget] HRESULT TemplateSettings([out] [retval] Microsoft.UI.Xaml.Controls.PipsPagerTemplateSettings** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.PipsPager)]
                [uuid(020722CD-813A-5165-A899-3DF9ADCD805E)]
                interface IPipsPagerFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.PipsPager** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.PipsPagerSelectedIndexChangedEventArgs)]
                [uuid(6C2CE4FC-BF52-5CA6-9DA4-B0BD5B928D97)]
                interface IPipsPagerSelectedIndexChangedEventArgs : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.PipsPager)]
                [uuid(B04C8DE3-8FFA-5F7D-BF1C-B43A353E1953)]
                interface IPipsPagerStatics : IInspectable
                {
                    [propget] HRESULT NumberOfPagesProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedPageIndexProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxVisiblePipsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PreviousButtonVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT NextButtonVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PreviousButtonStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT NextButtonStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedPipStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT NormalPipStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.PipsPagerTemplateSettings)]
                [uuid(9D8C1252-56C5-57AF-9A3A-08E9B947E5FA)]
                interface IPipsPagerTemplateSettings : IInspectable
                {
                    [propget] HRESULT PipsPagerItems([out] [retval] Windows.Foundation.Collections.IVector<INT32>** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ProgressBar)]
                [uuid(87555C8C-0AAF-52C1-8390-0DB17F40438E)]
                interface IProgressBar : IInspectable
                {
                    [propget] HRESULT IsIndeterminate([out] [retval] boolean* value);
                    [propput] HRESULT IsIndeterminate([in] boolean value);
                    [propget] HRESULT ShowError([out] [retval] boolean* value);
                    [propput] HRESULT ShowError([in] boolean value);
                    [propget] HRESULT ShowPaused([out] [retval] boolean* value);
                    [propput] HRESULT ShowPaused([in] boolean value);
                    [propget] HRESULT TemplateSettings([out] [retval] Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ProgressBar)]
                [uuid(189826AD-F6F2-533E-9DDB-B6600E88675B)]
                interface IProgressBarFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.ProgressBar** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ProgressBar)]
                [uuid(72A634C1-B22D-55FA-909D-7B7458AB14E2)]
                interface IProgressBarStatics : IInspectable
                {
                    [propget] HRESULT IsIndeterminateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ShowErrorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ShowPausedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings)]
                [uuid(20D22A89-59F1-5E47-8C88-F06F95929EEC)]
                interface IProgressBarTemplateSettings : IInspectable
                {
                    [propget] HRESULT ContainerAnimationStartPosition([out] [retval] DOUBLE* value);
                    [propget] HRESULT ContainerAnimationEndPosition([out] [retval] DOUBLE* value);
                    [propget] HRESULT Container2AnimationStartPosition([out] [retval] DOUBLE* value);
                    [propget] HRESULT Container2AnimationEndPosition([out] [retval] DOUBLE* value);
                    [propget] HRESULT ContainerAnimationMidPosition([out] [retval] DOUBLE* value);
                    [propget] HRESULT IndicatorLengthDelta([out] [retval] DOUBLE* value);
                    [propget] HRESULT ClipRect([out] [retval] Windows.UI.Xaml.Media.RectangleGeometry** value);
                    [propget] HRESULT EllipseAnimationEndPosition([out] [retval] DOUBLE* value);
                    [propget] HRESULT EllipseAnimationWellPosition([out] [retval] DOUBLE* value);
                    [propget] HRESULT EllipseDiameter([out] [retval] DOUBLE* value);
                    [propget] HRESULT EllipseOffset([out] [retval] DOUBLE* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ProgressRing)]
                [uuid(2670D03F-E28C-5652-BEE2-B5212EBDF7FF)]
                interface IProgressRing : IInspectable
                {
                    [propget] HRESULT IsActive([out] [retval] boolean* value);
                    [propput] HRESULT IsActive([in] boolean value);
                    [propget] HRESULT IsIndeterminate([out] [retval] boolean* value);
                    [propput] HRESULT IsIndeterminate([in] boolean value);
                    [propget] HRESULT TemplateSettings([out] [retval] Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings** value);
                    [propget] HRESULT Value([out] [retval] DOUBLE* value);
                    [propput] HRESULT Value([in] DOUBLE value);
                    [propget] HRESULT Minimum([out] [retval] DOUBLE* value);
                    [propput] HRESULT Minimum([in] DOUBLE value);
                    [propget] HRESULT Maximum([out] [retval] DOUBLE* value);
                    [propput] HRESULT Maximum([in] DOUBLE value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ProgressRing)]
                [experimental]
                [uuid(F7F384BC-FAF9-59C0-8EEB-E1ABFF944A1F)]
                interface IProgressRing2 : IInspectable
                {
                    [propget] HRESULT DeterminateSource([out] [retval] Microsoft.UI.Xaml.Controls.IAnimatedVisualSource** value);
                    [propput] HRESULT DeterminateSource([in] Microsoft.UI.Xaml.Controls.IAnimatedVisualSource* value);
                    [propget] HRESULT IndeterminateSource([out] [retval] Microsoft.UI.Xaml.Controls.IAnimatedVisualSource** value);
                    [propput] HRESULT IndeterminateSource([in] Microsoft.UI.Xaml.Controls.IAnimatedVisualSource* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ProgressRing)]
                [uuid(092FA98C-62A7-5DBC-9A85-3E556BA81F79)]
                interface IProgressRingFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.ProgressRing** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ProgressRing)]
                [uuid(3D02672D-8803-5F31-9B8E-1BE1A8A0D5E1)]
                interface IProgressRingStatics : IInspectable
                {
                    [propget] HRESULT IsActiveProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsIndeterminateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinimumProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaximumProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ProgressRing)]
                [experimental]
                [uuid(6ADF49BC-EAEC-5846-A84D-B6C8D12D6664)]
                interface IProgressRingStatics2 : IInspectable
                {
                    [propget] HRESULT DeterminateSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IndeterminateSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings)]
                [uuid(D1B7AACA-07A0-55EF-A9C5-8E44EDAD7499)]
                interface IProgressRingTemplateSettings : IInspectable
                {
                    [propget] HRESULT EllipseDiameter([out] [retval] DOUBLE* value);
                    [propget] HRESULT EllipseOffset([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propget] HRESULT MaxSideLength([out] [retval] DOUBLE* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RadioButtons)]
                [uuid(DD372D64-B740-5739-8D24-B6DECC91F408)]
                interface IRadioButtons : IInspectable
                {
                    [propget] HRESULT ItemsSource([out] [retval] IInspectable** value);
                    [propput] HRESULT ItemsSource([in] IInspectable* value);
                    [propget] HRESULT Items([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                    [propget] HRESULT ItemTemplate([out] [retval] IInspectable** value);
                    [propput] HRESULT ItemTemplate([in] IInspectable* value);
                    HRESULT ContainerFromIndex([in] INT32 index, [out] [retval] Windows.UI.Xaml.UIElement** result);
                    [propget] HRESULT SelectedIndex([out] [retval] INT32* value);
                    [propput] HRESULT SelectedIndex([in] INT32 value);
                    [propget] HRESULT SelectedItem([out] [retval] IInspectable** value);
                    [propput] HRESULT SelectedItem([in] IInspectable* value);
                    [eventadd] HRESULT SelectionChanged([in] Windows.UI.Xaml.Controls.SelectionChangedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectionChanged([in] EventRegistrationToken token);
                    [propget] HRESULT MaxColumns([out] [retval] INT32* value);
                    [propput] HRESULT MaxColumns([in] INT32 value);
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RadioButtons)]
                [uuid(2CF95EFB-A7A2-5D85-8EAD-EA222BAA3C55)]
                interface IRadioButtonsFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.RadioButtons** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RadioButtons)]
                [uuid(106FBFBD-4304-5D4D-8E6A-C4C15ABBBBEF)]
                interface IRadioButtonsStatics : IInspectable
                {
                    [propget] HRESULT ItemsSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedIndexProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedItemProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxColumnsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem)]
                [uuid(9D6F45F5-5532-5669-8F02-05735953026A)]
                interface IRadioMenuFlyoutItem : IInspectable
                {
                    [propget] HRESULT IsChecked([out] [retval] boolean* value);
                    [propput] HRESULT IsChecked([in] boolean value);
                    [propget] HRESULT GroupName([out] [retval] HSTRING* value);
                    [propput] HRESULT GroupName([in] HSTRING value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem)]
                [uuid(113822D2-35A3-5B0D-9D0D-C3830EC1973B)]
                interface IRadioMenuFlyoutItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem)]
                [uuid(2C8FD4AA-B8D8-543C-A1BE-9E008727C158)]
                interface IRadioMenuFlyoutItemStatics : IInspectable
                {
                    [propget] HRESULT IsCheckedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT GroupNameProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 2.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem)]
                [uuid(074EF4E9-26B3-5897-AC6F-10CF0947AADA)]
                interface IRadioMenuFlyoutItemStatics2 : IInspectable
                {
                    [propget] HRESULT AreCheckStatesEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT SetAreCheckStatesEnabled([in] Windows.UI.Xaml.Controls.MenuFlyoutSubItem* object, [in] boolean value);
                    HRESULT GetAreCheckStatesEnabled([in] Windows.UI.Xaml.Controls.MenuFlyoutSubItem* object, [out] [retval] boolean* result);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RatingControl)]
                [uuid(5488193B-EA4B-52C6-8544-C063219BCD90)]
                interface IRatingControl : IInspectable
                {
                    [propget] HRESULT Caption([out] [retval] HSTRING* value);
                    [propput] HRESULT Caption([in] HSTRING value);
                    [propget] HRESULT InitialSetValue([out] [retval] INT32* value);
                    [propput] HRESULT InitialSetValue([in] INT32 value);
                    [propget] HRESULT IsClearEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsClearEnabled([in] boolean value);
                    [propget] HRESULT IsReadOnly([out] [retval] boolean* value);
                    [propput] HRESULT IsReadOnly([in] boolean value);
                    [propget] HRESULT MaxRating([out] [retval] INT32* value);
                    [propput] HRESULT MaxRating([in] INT32 value);
                    [propget] HRESULT PlaceholderValue([out] [retval] DOUBLE* value);
                    [propput] HRESULT PlaceholderValue([in] DOUBLE value);
                    [propget] HRESULT ItemInfo([out] [retval] Microsoft.UI.Xaml.Controls.RatingItemInfo** value);
                    [propput] HRESULT ItemInfo([in] Microsoft.UI.Xaml.Controls.RatingItemInfo* value);
                    [propget] HRESULT Value([out] [retval] DOUBLE* value);
                    [propput] HRESULT Value([in] DOUBLE value);
                    [eventadd] HRESULT ValueChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.RatingControl*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ValueChanged([in] EventRegistrationToken token);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RatingControl)]
                [uuid(A53B9B73-BFF9-548D-A294-AC63D819F78A)]
                interface IRatingControlFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.RatingControl** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RatingControl)]
                [uuid(3752A048-F3F2-5EF6-878D-499572F0529B)]
                interface IRatingControlStatics : IInspectable
                {
                    [propget] HRESULT CaptionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT InitialSetValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsClearEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsReadOnlyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxRatingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaceholderValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemInfoProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RatingItemFontInfo)]
                [uuid(995A16DC-3A0F-5727-9F38-52CFC8143654)]
                interface IRatingItemFontInfo : IInspectable
                {
                    [propget] HRESULT DisabledGlyph([out] [retval] HSTRING* value);
                    [propput] HRESULT DisabledGlyph([in] HSTRING value);
                    [propget] HRESULT Glyph([out] [retval] HSTRING* value);
                    [propput] HRESULT Glyph([in] HSTRING value);
                    [propget] HRESULT PointerOverGlyph([out] [retval] HSTRING* value);
                    [propput] HRESULT PointerOverGlyph([in] HSTRING value);
                    [propget] HRESULT PointerOverPlaceholderGlyph([out] [retval] HSTRING* value);
                    [propput] HRESULT PointerOverPlaceholderGlyph([in] HSTRING value);
                    [propget] HRESULT PlaceholderGlyph([out] [retval] HSTRING* value);
                    [propput] HRESULT PlaceholderGlyph([in] HSTRING value);
                    [propget] HRESULT UnsetGlyph([out] [retval] HSTRING* value);
                    [propput] HRESULT UnsetGlyph([in] HSTRING value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RatingItemFontInfo)]
                [uuid(109C6541-706E-5FD7-BAAE-020B24899F61)]
                interface IRatingItemFontInfoFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.RatingItemFontInfo** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RatingItemFontInfo)]
                [uuid(7C626902-A13F-5470-A522-BD5414DF8ED3)]
                interface IRatingItemFontInfoStatics : IInspectable
                {
                    [propget] HRESULT DisabledGlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT GlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaceholderGlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PointerOverGlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PointerOverPlaceholderGlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT UnsetGlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RatingItemImageInfo)]
                [uuid(610268E4-AF6E-5C1C-8D0F-BB46C06D6782)]
                interface IRatingItemImageInfo : IInspectable
                {
                    [propget] HRESULT DisabledImage([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT DisabledImage([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT Image([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT Image([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT PlaceholderImage([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT PlaceholderImage([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT PointerOverImage([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT PointerOverImage([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT PointerOverPlaceholderImage([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT PointerOverPlaceholderImage([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [propget] HRESULT UnsetImage([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT UnsetImage([in] Windows.UI.Xaml.Media.ImageSource* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RatingItemImageInfo)]
                [uuid(4ACC8CAC-BCA8-5380-95E4-345C1BE256B2)]
                interface IRatingItemImageInfoFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.RatingItemImageInfo** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RatingItemImageInfo)]
                [uuid(B8E6F05B-0AF5-5AA8-8E85-FD022D4C6908)]
                interface IRatingItemImageInfoStatics : IInspectable
                {
                    [propget] HRESULT DisabledImageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ImageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlaceholderImageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PointerOverImageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PointerOverPlaceholderImageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT UnsetImageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RatingItemInfo)]
                [uuid(801E924E-3613-55DD-8321-9EBABBED0B8A)]
                interface IRatingItemInfo : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RatingItemInfo)]
                [uuid(61F13480-CD0C-556A-B532-A0CF53E3CDA0)]
                interface IRatingItemInfoFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.RatingItemInfo** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RecyclePool)]
                [experimental]
                [uuid(02B11716-0CD4-572B-8611-373C7EB1AD28)]
                interface IRecyclePool : IInspectable
                {
                    [overload("PutElement")] HRESULT PutElement([in] Windows.UI.Xaml.UIElement* element, [in] HSTRING key);
                    [overload("PutElement")] HRESULT PutElementWithOwner([in] Windows.UI.Xaml.UIElement* element, [in] HSTRING key, [in] Windows.UI.Xaml.UIElement* owner);
                    [overload("TryGetElement")] HRESULT TryGetElement([in] HSTRING key, [out] [retval] Windows.UI.Xaml.UIElement** result);
                    [overload("TryGetElement")] HRESULT TryGetElementWithOwner([in] HSTRING key, [in] Windows.UI.Xaml.UIElement* owner, [out] [retval] Windows.UI.Xaml.UIElement** result);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RecyclePool)]
                [experimental]
                [uuid(9DA654DE-70C7-5415-A227-CFB65DEE3E51)]
                interface IRecyclePoolFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.RecyclePool** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RecyclePool)]
                [experimental]
                [uuid(055519B3-E353-584A-8409-D2B386F58C7B)]
                interface IRecyclePoolOverrides : IInspectable
                {
                    HRESULT PutElementCore([in] Windows.UI.Xaml.UIElement* element, [in] HSTRING key, [in] Windows.UI.Xaml.UIElement* owner);
                    HRESULT TryGetElementCore([in] HSTRING key, [in] Windows.UI.Xaml.UIElement* owner, [out] [retval] Windows.UI.Xaml.UIElement** result);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RecyclePool)]
                [experimental]
                [uuid(E65E27D2-A709-586A-B0DE-A1F16D56CB9C)]
                interface IRecyclePoolStatics : IInspectable
                {
                    [propget] HRESULT PoolInstanceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetPoolInstance([in] Windows.UI.Xaml.DataTemplate* dataTemplate, [out] [retval] Microsoft.UI.Xaml.Controls.RecyclePool** result);
                    HRESULT SetPoolInstance([in] Windows.UI.Xaml.DataTemplate* dataTemplate, [in] Microsoft.UI.Xaml.Controls.RecyclePool* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RecyclingElementFactory)]
                [experimental]
                [uuid(522074D0-51CD-5205-8B31-DF9C4AA276C7)]
                interface IRecyclingElementFactory : IInspectable
                {
                    [propget] HRESULT RecyclePool([out] [retval] Microsoft.UI.Xaml.Controls.RecyclePool** value);
                    [propput] HRESULT RecyclePool([in] Microsoft.UI.Xaml.Controls.RecyclePool* value);
                    [propget] HRESULT Templates([out] [retval] Windows.Foundation.Collections.IMap<HSTRING, Windows.UI.Xaml.DataTemplate*>** value);
                    [propput] HRESULT Templates([in] Windows.Foundation.Collections.IMap<HSTRING, Windows.UI.Xaml.DataTemplate*>* value);
                    [eventadd] HRESULT SelectTemplateKey([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.RecyclingElementFactory*, Microsoft.UI.Xaml.Controls.SelectTemplateEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectTemplateKey([in] EventRegistrationToken token);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RecyclingElementFactory)]
                [experimental]
                [uuid(B2121301-13AB-5965-AD31-62C54A329AD6)]
                interface IRecyclingElementFactoryFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.RecyclingElementFactory** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RecyclingElementFactory)]
                [experimental]
                [uuid(6309B03E-A07D-5E61-AD60-2CC11901462F)]
                interface IRecyclingElementFactoryOverrides : IInspectable
                {
                    HRESULT OnSelectTemplateKeyCore([in] IInspectable* dataContext, [in] Windows.UI.Xaml.UIElement* owner, [out] [retval] HSTRING* result);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RefreshContainer)]
                [uuid(1C9778E8-A427-5F86-9D5E-02DB9B2C4093)]
                interface IRefreshContainer : IInspectable
                {
                    [propget] HRESULT Visualizer([out] [retval] Microsoft.UI.Xaml.Controls.RefreshVisualizer** value);
                    [propput] HRESULT Visualizer([in] Microsoft.UI.Xaml.Controls.RefreshVisualizer* value);
                    [propget] HRESULT PullDirection([out] [retval] Microsoft.UI.Xaml.Controls.RefreshPullDirection* value);
                    [propput] HRESULT PullDirection([in] Microsoft.UI.Xaml.Controls.RefreshPullDirection value);
                    [eventadd] HRESULT RefreshRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.RefreshContainer*, Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT RefreshRequested([in] EventRegistrationToken token);
                    HRESULT RequestRefresh();
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RefreshContainer)]
                [uuid(5F228FA1-2EA2-52B5-B78A-0C133F86F020)]
                interface IRefreshContainerFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.RefreshContainer** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RefreshContainer)]
                [uuid(1F2BC1C8-5C8F-5B46-8B0F-E006DB4EC6E1)]
                interface IRefreshContainerStatics : IInspectable
                {
                    [propget] HRESULT VisualizerProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PullDirectionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RefreshInteractionRatioChangedEventArgs)]
                [uuid(790B70E0-F199-552B-B126-6CB45C2DE8F9)]
                interface IRefreshInteractionRatioChangedEventArgs : IInspectable
                {
                    [propget] HRESULT InteractionRatio([out] [retval] DOUBLE* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs)]
                [uuid(ED97A956-6019-5329-9312-F885B5C774CD)]
                interface IRefreshRequestedEventArgs : IInspectable
                {
                    HRESULT GetDeferral([out] [retval] Windows.Foundation.Deferral** result);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RefreshStateChangedEventArgs)]
                [uuid(7BE897CE-17C4-5FDF-B441-C6EF3301E0F6)]
                interface IRefreshStateChangedEventArgs : IInspectable
                {
                    [propget] HRESULT OldState([out] [retval] Microsoft.UI.Xaml.Controls.RefreshVisualizerState* value);
                    [propget] HRESULT NewState([out] [retval] Microsoft.UI.Xaml.Controls.RefreshVisualizerState* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RefreshVisualizer)]
                [uuid(A000AFD1-D2FC-5391-B421-EE5C975AC945)]
                interface IRefreshVisualizer : IInspectable
                {
                    HRESULT RequestRefresh();
                    [propget] HRESULT Orientation([out] [retval] Microsoft.UI.Xaml.Controls.RefreshVisualizerOrientation* value);
                    [propput] HRESULT Orientation([in] Microsoft.UI.Xaml.Controls.RefreshVisualizerOrientation value);
                    [propget] HRESULT Content([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Content([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT State([out] [retval] Microsoft.UI.Xaml.Controls.RefreshVisualizerState* value);
                    [eventadd] HRESULT RefreshRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.RefreshVisualizer*, Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT RefreshRequested([in] EventRegistrationToken token);
                    [eventadd] HRESULT RefreshStateChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.RefreshVisualizer*, Microsoft.UI.Xaml.Controls.RefreshStateChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT RefreshStateChanged([in] EventRegistrationToken token);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RefreshVisualizer)]
                [uuid(9D6F2BF2-6628-582A-892B-68C2770C173C)]
                interface IRefreshVisualizerFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.RefreshVisualizer** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RefreshVisualizer)]
                [uuid(7E9E32AB-3C39-58AC-9D0D-4648BE220BDC)]
                interface IRefreshVisualizerStatics : IInspectable
                {
                    [propget] HRESULT InfoProviderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RevealListViewItemPresenter)]
                [uuid(365FDBAC-3989-559C-BEA9-764561881C96)]
                interface IRevealListViewItemPresenter : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.RevealListViewItemPresenter)]
                [uuid(E730C53B-8F94-55B3-8BC1-98F77C5766BD)]
                interface IRevealListViewItemPresenterFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.RevealListViewItemPresenter** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ScrollView)]
                [experimental]
                [uuid(47E0C471-4C9B-5B25-88D6-DF406FB4C765)]
                interface IScrollView : IInspectable
                {
                    [propget] HRESULT Content([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Content([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT CurrentAnchor([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propget] HRESULT ExpressionAnimationSources([out] [retval] Windows.UI.Composition.CompositionPropertySet** value);
                    [propget] HRESULT HorizontalOffset([out] [retval] DOUBLE* value);
                    [propget] HRESULT VerticalOffset([out] [retval] DOUBLE* value);
                    [propget] HRESULT ZoomFactor([out] [retval] FLOAT* value);
                    [propget] HRESULT ExtentWidth([out] [retval] DOUBLE* value);
                    [propget] HRESULT ExtentHeight([out] [retval] DOUBLE* value);
                    [propget] HRESULT ViewportWidth([out] [retval] DOUBLE* value);
                    [propget] HRESULT ViewportHeight([out] [retval] DOUBLE* value);
                    [propget] HRESULT ScrollableWidth([out] [retval] DOUBLE* value);
                    [propget] HRESULT ScrollableHeight([out] [retval] DOUBLE* value);
                    [propget] HRESULT State([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingInteractionState* value);
                    [propget] HRESULT HorizontalScrollBarVisibility([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility* value);
                    [propput] HRESULT HorizontalScrollBarVisibility([in] Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility value);
                    [propget] HRESULT VerticalScrollBarVisibility([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility* value);
                    [propput] HRESULT VerticalScrollBarVisibility([in] Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility value);
                    [propget] HRESULT ContentOrientation([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingContentOrientation* value);
                    [propput] HRESULT ContentOrientation([in] Microsoft.UI.Xaml.Controls.ScrollingContentOrientation value);
                    [propget] HRESULT HorizontalScrollChainMode([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingChainMode* value);
                    [propput] HRESULT HorizontalScrollChainMode([in] Microsoft.UI.Xaml.Controls.ScrollingChainMode value);
                    [propget] HRESULT VerticalScrollChainMode([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingChainMode* value);
                    [propput] HRESULT VerticalScrollChainMode([in] Microsoft.UI.Xaml.Controls.ScrollingChainMode value);
                    [propget] HRESULT HorizontalScrollRailMode([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingRailMode* value);
                    [propput] HRESULT HorizontalScrollRailMode([in] Microsoft.UI.Xaml.Controls.ScrollingRailMode value);
                    [propget] HRESULT VerticalScrollRailMode([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingRailMode* value);
                    [propput] HRESULT VerticalScrollRailMode([in] Microsoft.UI.Xaml.Controls.ScrollingRailMode value);
                    [propget] HRESULT HorizontalScrollMode([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingScrollMode* value);
                    [propput] HRESULT HorizontalScrollMode([in] Microsoft.UI.Xaml.Controls.ScrollingScrollMode value);
                    [propget] HRESULT VerticalScrollMode([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingScrollMode* value);
                    [propput] HRESULT VerticalScrollMode([in] Microsoft.UI.Xaml.Controls.ScrollingScrollMode value);
                    [propget] HRESULT ComputedHorizontalScrollBarVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT ComputedVerticalScrollBarVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT ZoomChainMode([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingChainMode* value);
                    [propput] HRESULT ZoomChainMode([in] Microsoft.UI.Xaml.Controls.ScrollingChainMode value);
                    [propget] HRESULT ZoomMode([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingZoomMode* value);
                    [propput] HRESULT ZoomMode([in] Microsoft.UI.Xaml.Controls.ScrollingZoomMode value);
                    [propget] HRESULT IgnoredInputKinds([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingInputKinds* value);
                    [propput] HRESULT IgnoredInputKinds([in] Microsoft.UI.Xaml.Controls.ScrollingInputKinds value);
                    [propget] HRESULT MinZoomFactor([out] [retval] DOUBLE* value);
                    [propput] HRESULT MinZoomFactor([in] DOUBLE value);
                    [propget] HRESULT MaxZoomFactor([out] [retval] DOUBLE* value);
                    [propput] HRESULT MaxZoomFactor([in] DOUBLE value);
                    [propget] HRESULT HorizontalAnchorRatio([out] [retval] DOUBLE* value);
                    [propput] HRESULT HorizontalAnchorRatio([in] DOUBLE value);
                    [propget] HRESULT VerticalAnchorRatio([out] [retval] DOUBLE* value);
                    [propput] HRESULT VerticalAnchorRatio([in] DOUBLE value);
                    HRESULT RegisterAnchorCandidate([in] Windows.UI.Xaml.UIElement* element);
                    HRESULT UnregisterAnchorCandidate([in] Windows.UI.Xaml.UIElement* element);
                    [overload("ScrollTo")] HRESULT ScrollTo([in] DOUBLE horizontalOffset, [in] DOUBLE verticalOffset, [out] [retval] INT32* result);
                    [overload("ScrollTo")] HRESULT ScrollToWithOptions([in] DOUBLE horizontalOffset, [in] DOUBLE verticalOffset, [in] Microsoft.UI.Xaml.Controls.ScrollingScrollOptions* options, [out] [retval] INT32* result);
                    [overload("ScrollBy")] HRESULT ScrollBy([in] DOUBLE horizontalOffsetDelta, [in] DOUBLE verticalOffsetDelta, [out] [retval] INT32* result);
                    [overload("ScrollBy")] HRESULT ScrollByWithOptions([in] DOUBLE horizontalOffsetDelta, [in] DOUBLE verticalOffsetDelta, [in] Microsoft.UI.Xaml.Controls.ScrollingScrollOptions* options, [out] [retval] INT32* result);
                    HRESULT AddScrollVelocity([in] Windows.Foundation.Numerics.Vector2 offsetsVelocity, [in] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector2>* inertiaDecayRate, [out] [retval] INT32* result);
                    [overload("ZoomTo")] HRESULT ZoomTo([in] FLOAT zoomFactor, [in] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector2>* centerPoint, [out] [retval] INT32* result);
                    [overload("ZoomTo")] HRESULT ZoomToWithOptions([in] FLOAT zoomFactor, [in] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector2>* centerPoint, [in] Microsoft.UI.Xaml.Controls.ScrollingZoomOptions* options, [out] [retval] INT32* result);
                    [overload("ZoomBy")] HRESULT ZoomBy([in] FLOAT zoomFactorDelta, [in] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector2>* centerPoint, [out] [retval] INT32* result);
                    [overload("ZoomBy")] HRESULT ZoomByWithOptions([in] FLOAT zoomFactorDelta, [in] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector2>* centerPoint, [in] Microsoft.UI.Xaml.Controls.ScrollingZoomOptions* options, [out] [retval] INT32* result);
                    HRESULT AddZoomVelocity([in] FLOAT zoomFactorVelocity, [in] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector2>* centerPoint, [in] Windows.Foundation.IReference<FLOAT>* inertiaDecayRate, [out] [retval] INT32* result);
                    [eventadd] HRESULT ExtentChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ScrollView*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ExtentChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT StateChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ScrollView*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT StateChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT ViewChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ScrollView*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ViewChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT ScrollAnimationStarting([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ScrollView*, Microsoft.UI.Xaml.Controls.ScrollingScrollAnimationStartingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ScrollAnimationStarting([in] EventRegistrationToken token);
                    [eventadd] HRESULT ZoomAnimationStarting([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ScrollView*, Microsoft.UI.Xaml.Controls.ScrollingZoomAnimationStartingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ZoomAnimationStarting([in] EventRegistrationToken token);
                    [eventadd] HRESULT ScrollCompleted([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ScrollView*, Microsoft.UI.Xaml.Controls.ScrollingScrollCompletedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ScrollCompleted([in] EventRegistrationToken token);
                    [eventadd] HRESULT ZoomCompleted([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ScrollView*, Microsoft.UI.Xaml.Controls.ScrollingZoomCompletedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ZoomCompleted([in] EventRegistrationToken token);
                    [eventadd] HRESULT BringingIntoView([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ScrollView*, Microsoft.UI.Xaml.Controls.ScrollingBringingIntoViewEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT BringingIntoView([in] EventRegistrationToken token);
                    [eventadd] HRESULT AnchorRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ScrollView*, Microsoft.UI.Xaml.Controls.ScrollingAnchorRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT AnchorRequested([in] EventRegistrationToken token);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ScrollView)]
                [experimental]
                [uuid(F3547344-22E4-5E6C-9ECE-66504EF733ED)]
                interface IScrollViewFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.ScrollView** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ScrollView)]
                [experimental]
                [uuid(7370B07B-C201-54D9-9E73-00DBBAA4E019)]
                interface IScrollViewStatics : IInspectable
                {
                    [propget] HRESULT ContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ScrollPresenterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalScrollBarVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalScrollBarVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ContentOrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalScrollChainModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalScrollChainModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalScrollRailModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalScrollRailModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalScrollModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalScrollModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ComputedHorizontalScrollBarVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ComputedVerticalScrollBarVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ZoomChainModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ZoomModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IgnoredInputKindsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinZoomFactorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaxZoomFactorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalAnchorRatioProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VerticalAnchorRatioProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ScrollingAnchorRequestedEventArgs)]
                [experimental]
                [uuid(E36561F5-E69F-5F12-AD0C-6F7BF64200EB)]
                interface IScrollingAnchorRequestedEventArgs : IInspectable
                {
                    [propget] HRESULT AnchorCandidates([out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.UIElement*>** value);
                    [propget] HRESULT AnchorElement([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT AnchorElement([in] Windows.UI.Xaml.UIElement* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ScrollingBringingIntoViewEventArgs)]
                [experimental]
                [uuid(5D469C3D-87E8-5D20-AEA4-6BBD4A0A7DB7)]
                interface IScrollingBringingIntoViewEventArgs : IInspectable
                {
                    [propget] HRESULT SnapPointsMode([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingSnapPointsMode* value);
                    [propput] HRESULT SnapPointsMode([in] Microsoft.UI.Xaml.Controls.ScrollingSnapPointsMode value);
                    [propget] HRESULT RequestEventArgs([out] [retval] Windows.UI.Xaml.BringIntoViewRequestedEventArgs** value);
                    [propget] HRESULT TargetHorizontalOffset([out] [retval] DOUBLE* value);
                    [propget] HRESULT TargetVerticalOffset([out] [retval] DOUBLE* value);
                    [propget] HRESULT CorrelationId([out] [retval] INT32* value);
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ScrollingScrollAnimationStartingEventArgs)]
                [experimental]
                [uuid(B70FD042-FBE3-502D-BBA4-CF5DDCA2EEB0)]
                interface IScrollingScrollAnimationStartingEventArgs : IInspectable
                {
                    [propget] HRESULT Animation([out] [retval] Windows.UI.Composition.CompositionAnimation** value);
                    [propput] HRESULT Animation([in] Windows.UI.Composition.CompositionAnimation* value);
                    [propget] HRESULT StartPosition([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                    [propget] HRESULT EndPosition([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                    [propget] HRESULT CorrelationId([out] [retval] INT32* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ScrollingScrollCompletedEventArgs)]
                [experimental]
                [uuid(9BDEAE9C-972C-54AE-9C62-FC1A03FF3FA8)]
                interface IScrollingScrollCompletedEventArgs : IInspectable
                {
                    [propget] HRESULT CorrelationId([out] [retval] INT32* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ScrollingScrollOptions)]
                [experimental]
                [uuid(30B2E77B-2553-5B09-B308-B4B06FC8F9AF)]
                interface IScrollingScrollOptions : IInspectable
                {
                    [propget] HRESULT AnimationMode([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingAnimationMode* value);
                    [propput] HRESULT AnimationMode([in] Microsoft.UI.Xaml.Controls.ScrollingAnimationMode value);
                    [propget] HRESULT SnapPointsMode([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingSnapPointsMode* value);
                    [propput] HRESULT SnapPointsMode([in] Microsoft.UI.Xaml.Controls.ScrollingSnapPointsMode value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ScrollingScrollOptions)]
                [experimental]
                [uuid(31EB58FE-0F6A-51EC-90DB-5CCAA0A288A6)]
                interface IScrollingScrollOptionsFactory : IInspectable
                {
                    HRESULT CreateInstance([in] Microsoft.UI.Xaml.Controls.ScrollingAnimationMode animationMode, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.ScrollingScrollOptions** value);
                    HRESULT CreateInstance2([in] Microsoft.UI.Xaml.Controls.ScrollingAnimationMode animationMode, [in] Microsoft.UI.Xaml.Controls.ScrollingSnapPointsMode snapPointsMode, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.ScrollingScrollOptions** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ScrollingZoomAnimationStartingEventArgs)]
                [experimental]
                [uuid(D88A3E92-455F-538E-B6C8-C002B7C2C9F6)]
                interface IScrollingZoomAnimationStartingEventArgs : IInspectable
                {
                    [propget] HRESULT CenterPoint([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                    [propget] HRESULT StartZoomFactor([out] [retval] FLOAT* value);
                    [propget] HRESULT EndZoomFactor([out] [retval] FLOAT* value);
                    [propget] HRESULT Animation([out] [retval] Windows.UI.Composition.CompositionAnimation** value);
                    [propput] HRESULT Animation([in] Windows.UI.Composition.CompositionAnimation* value);
                    [propget] HRESULT CorrelationId([out] [retval] INT32* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ScrollingZoomCompletedEventArgs)]
                [experimental]
                [uuid(C821207E-AB2A-5F6C-9074-411840A68D55)]
                interface IScrollingZoomCompletedEventArgs : IInspectable
                {
                    [propget] HRESULT CorrelationId([out] [retval] INT32* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ScrollingZoomOptions)]
                [experimental]
                [uuid(E4ACE0B2-9B0C-5EDA-88A2-C31B1B84F829)]
                interface IScrollingZoomOptions : IInspectable
                {
                    [propget] HRESULT AnimationMode([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingAnimationMode* value);
                    [propput] HRESULT AnimationMode([in] Microsoft.UI.Xaml.Controls.ScrollingAnimationMode value);
                    [propget] HRESULT SnapPointsMode([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingSnapPointsMode* value);
                    [propput] HRESULT SnapPointsMode([in] Microsoft.UI.Xaml.Controls.ScrollingSnapPointsMode value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ScrollingZoomOptions)]
                [experimental]
                [uuid(D1C82E57-D5E8-58F5-A2C0-EE70C64143BE)]
                interface IScrollingZoomOptionsFactory : IInspectable
                {
                    HRESULT CreateInstance([in] Microsoft.UI.Xaml.Controls.ScrollingAnimationMode animationMode, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.ScrollingZoomOptions** value);
                    HRESULT CreateInstance2([in] Microsoft.UI.Xaml.Controls.ScrollingAnimationMode animationMode, [in] Microsoft.UI.Xaml.Controls.ScrollingSnapPointsMode snapPointsMode, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.ScrollingZoomOptions** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.SelectTemplateEventArgs)]
                [experimental]
                [uuid(BE5D6831-9513-5680-8DBD-8C3629019038)]
                interface ISelectTemplateEventArgs : IInspectable
                {
                    [propget] HRESULT TemplateKey([out] [retval] HSTRING* value);
                    [propput] HRESULT TemplateKey([in] HSTRING value);
                    [propget] HRESULT DataContext([out] [retval] IInspectable** value);
                    [propget] HRESULT Owner([out] [retval] Windows.UI.Xaml.UIElement** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.SelectionModel)]
                [experimental]
                [uuid(8DEAAA5B-2921-5BFD-A88F-5D6F45A39325)]
                interface ISelectionModel : IInspectable
                {
                    [eventadd] HRESULT SelectionChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.SelectionModel*, Microsoft.UI.Xaml.Controls.SelectionModelSelectionChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectionChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT ChildrenRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.SelectionModel*, Microsoft.UI.Xaml.Controls.SelectionModelChildrenRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ChildrenRequested([in] EventRegistrationToken token);
                    [propget] HRESULT Source([out] [retval] IInspectable** value);
                    [propput] HRESULT Source([in] IInspectable* value);
                    [propget] HRESULT SingleSelect([out] [retval] boolean* value);
                    [propput] HRESULT SingleSelect([in] boolean value);
                    [propget] HRESULT AnchorIndex([out] [retval] Microsoft.UI.Xaml.Controls.IndexPath** value);
                    [propput] HRESULT AnchorIndex([in] Microsoft.UI.Xaml.Controls.IndexPath* value);
                    [propget] HRESULT SelectedIndex([out] [retval] Microsoft.UI.Xaml.Controls.IndexPath** value);
                    [propput] HRESULT SelectedIndex([in] Microsoft.UI.Xaml.Controls.IndexPath* value);
                    [propget] HRESULT SelectedItem([out] [retval] IInspectable** value);
                    [propget] HRESULT SelectedItems([out] [retval] Windows.Foundation.Collections.IVectorView<IInspectable*>** value);
                    [propget] HRESULT SelectedIndices([out] [retval] Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Controls.IndexPath*>** value);
                    [overload("SetAnchorIndex")] HRESULT SetAnchorIndex([in] INT32 index);
                    [overload("SetAnchorIndex")] HRESULT SetAnchorIndexWithGroup([in] INT32 groupIndex, [in] INT32 itemIndex);
                    [default_overload] [overload("Select")] HRESULT Select([in] INT32 index);
                    [overload("Select")] HRESULT SelectWithGroup([in] INT32 groupIndex, [in] INT32 itemIndex);
                    HRESULT SelectAt([in] Microsoft.UI.Xaml.Controls.IndexPath* index);
                    [default_overload] [overload("Deselect")] HRESULT Deselect([in] INT32 index);
                    [overload("Deselect")] HRESULT DeselectWithGroup([in] INT32 groupIndex, [in] INT32 itemIndex);
                    HRESULT DeselectAt([in] Microsoft.UI.Xaml.Controls.IndexPath* index);
                    [default_overload] [overload("IsSelected")] HRESULT IsSelected([in] INT32 index, [out] [retval] Windows.Foundation.IReference<boolean>** result);
                    [overload("IsSelected")] HRESULT IsSelectedWithGroup([in] INT32 groupIndex, [in] INT32 itemIndex, [out] [retval] Windows.Foundation.IReference<boolean>** result);
                    HRESULT IsSelectedAt([in] Microsoft.UI.Xaml.Controls.IndexPath* index, [out] [retval] Windows.Foundation.IReference<boolean>** result);
                    [default_overload] [overload("SelectRangeFromAnchor")] HRESULT SelectRangeFromAnchor([in] INT32 index);
                    [overload("SelectRangeFromAnchor")] HRESULT SelectRangeFromAnchorWithGroup([in] INT32 groupIndex, [in] INT32 itemIndex);
                    HRESULT SelectRangeFromAnchorTo([in] Microsoft.UI.Xaml.Controls.IndexPath* index);
                    [default_overload] [overload("DeselectRangeFromAnchor")] HRESULT DeselectRangeFromAnchor([in] INT32 index);
                    [overload("DeselectRangeFromAnchor")] HRESULT DeselectRangeFromAnchorWithGroup([in] INT32 groupIndex, [in] INT32 itemIndex);
                    HRESULT DeselectRangeFromAnchorTo([in] Microsoft.UI.Xaml.Controls.IndexPath* index);
                    HRESULT SelectRange([in] Microsoft.UI.Xaml.Controls.IndexPath* start, [in] Microsoft.UI.Xaml.Controls.IndexPath* end);
                    HRESULT DeselectRange([in] Microsoft.UI.Xaml.Controls.IndexPath* start, [in] Microsoft.UI.Xaml.Controls.IndexPath* end);
                    HRESULT SelectAll();
                    HRESULT ClearSelection();
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.SelectionModelChildrenRequestedEventArgs)]
                [experimental]
                [uuid(52ACCC62-C9A8-5DDC-80E4-BC560D92A07A)]
                interface ISelectionModelChildrenRequestedEventArgs : IInspectable
                {
                    [propget] HRESULT Source([out] [retval] IInspectable** value);
                    [propget] HRESULT SourceIndex([out] [retval] Microsoft.UI.Xaml.Controls.IndexPath** value);
                    [propget] HRESULT Children([out] [retval] IInspectable** value);
                    [propput] HRESULT Children([in] IInspectable* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.SelectionModel)]
                [experimental]
                [uuid(37FDDB2F-C709-552B-8423-9671EC9460E9)]
                interface ISelectionModelFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.SelectionModel** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.SelectionModel)]
                [experimental]
                [uuid(976ABDE8-541C-54A8-8ED4-89E3B47D32FA)]
                interface ISelectionModelProtected : IInspectable
                {
                    HRESULT OnPropertyChanged([in] HSTRING propertyName);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.SelectionModelSelectionChangedEventArgs)]
                [experimental]
                [uuid(DEA1EF6A-E76F-5853-BA43-342693DB7EE4)]
                interface ISelectionModelSelectionChangedEventArgs : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [uuid(F67D88A4-45EC-54D5-B9F0-7C7CCC37FB83)]
                interface ISelfPlayingAnimatedVisual : IInspectable
                    requires
                        Microsoft.UI.Xaml.Controls.IAnimatedVisual,
                        Windows.Foundation.IClosable
                {
                    HRESULT Pause();
                    HRESULT PlayAsync([in] DOUBLE fromProgress, [in] DOUBLE toProgress, [in] boolean looped, [out] [retval] Windows.Foundation.IAsyncAction** operation);
                    HRESULT Resume();
                    HRESULT Stop();
                    HRESULT SetPlaybackRate([in] DOUBLE playbackRate);
                    HRESULT SetProgress([in] DOUBLE progress);
                    HRESULT SetProgressObject([in] Windows.UI.Composition.CompositionPropertySet* compositionPropertySet);
                    HRESULT SetSize([in] Windows.Foundation.Size size);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.SplitButton)]
                [uuid(8B09006A-6241-594F-93E4-8BF051D7BA8F)]
                interface ISplitButton : IInspectable
                {
                    [propget] HRESULT Flyout([out] [retval] Windows.UI.Xaml.Controls.Primitives.FlyoutBase** value);
                    [propput] HRESULT Flyout([in] Windows.UI.Xaml.Controls.Primitives.FlyoutBase* value);
                    [propget] HRESULT Command([out] [retval] Windows.UI.Xaml.Input.ICommand** value);
                    [propput] HRESULT Command([in] Windows.UI.Xaml.Input.ICommand* value);
                    [propget] HRESULT CommandParameter([out] [retval] IInspectable** value);
                    [propput] HRESULT CommandParameter([in] IInspectable* value);
                    [eventadd] HRESULT Click([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.SplitButton*, Microsoft.UI.Xaml.Controls.SplitButtonClickEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Click([in] EventRegistrationToken token);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.SplitButtonClickEventArgs)]
                [uuid(6AF896C2-E65A-5998-9C82-2AF8F3E0741F)]
                interface ISplitButtonClickEventArgs : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.SplitButton)]
                [uuid(07510092-2612-55E7-981C-A536DDD4570E)]
                interface ISplitButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.SplitButton** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.SplitButton)]
                [uuid(7262C1E0-97CD-5561-B6E7-5E2ECEA46AC2)]
                interface ISplitButtonStatics : IInspectable
                {
                    [propget] HRESULT FlyoutProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CommandProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CommandParameterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.StackLayout)]
                [uuid(6BF7F61B-0CEF-5D92-A828-93EFBD6DF4C1)]
                interface IStackLayout : IInspectable
                {
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                    [propget] HRESULT Spacing([out] [retval] DOUBLE* value);
                    [propput] HRESULT Spacing([in] DOUBLE value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.StackLayout)]
                [experimental]
                [uuid(637E3C38-A1AB-58B4-B907-E2FF57B6865C)]
                interface IStackLayout2 : IInspectable
                {
                    [propget] HRESULT DisableVirtualization([out] [retval] boolean* value);
                    [propput] HRESULT DisableVirtualization([in] boolean value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.StackLayout)]
                [uuid(EA606F86-21A1-5C35-911E-4A1DE8BC69D9)]
                interface IStackLayoutFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.StackLayout** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.StackLayoutState)]
                [experimental]
                [uuid(2476B96E-1DB7-5440-89C0-6FD19A9BCE92)]
                interface IStackLayoutState : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.StackLayoutState)]
                [experimental]
                [uuid(808A5A28-F6E2-598C-9F49-5B93129F852C)]
                interface IStackLayoutStateFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.StackLayoutState** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.StackLayout)]
                [uuid(F69CAEFE-9D6F-5B90-9D3D-F47ECEB55D20)]
                interface IStackLayoutStatics : IInspectable
                {
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SpacingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.StackLayout)]
                [experimental]
                [uuid(BEF687AF-62DB-5038-B568-F04EA3D96ED0)]
                interface IStackLayoutStatics2 : IInspectable
                {
                    [propget] HRESULT DisableVirtualizationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.SwipeControl)]
                [uuid(337800FE-F51D-5F6B-9D35-E7F5DE10A97C)]
                interface ISwipeControl : IInspectable
                {
                    [propget] HRESULT LeftItems([out] [retval] Microsoft.UI.Xaml.Controls.SwipeItems** value);
                    [propput] HRESULT LeftItems([in] Microsoft.UI.Xaml.Controls.SwipeItems* value);
                    [propget] HRESULT RightItems([out] [retval] Microsoft.UI.Xaml.Controls.SwipeItems** value);
                    [propput] HRESULT RightItems([in] Microsoft.UI.Xaml.Controls.SwipeItems* value);
                    [propget] HRESULT TopItems([out] [retval] Microsoft.UI.Xaml.Controls.SwipeItems** value);
                    [propput] HRESULT TopItems([in] Microsoft.UI.Xaml.Controls.SwipeItems* value);
                    [propget] HRESULT BottomItems([out] [retval] Microsoft.UI.Xaml.Controls.SwipeItems** value);
                    [propput] HRESULT BottomItems([in] Microsoft.UI.Xaml.Controls.SwipeItems* value);
                    HRESULT Close();
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.SwipeControl)]
                [uuid(6E9213F4-30C1-56CA-9905-46AA1A83DFC1)]
                interface ISwipeControlFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.SwipeControl** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.SwipeControl)]
                [uuid(BE0EB518-40B4-5CED-8DFB-6CA018F1CACA)]
                interface ISwipeControlStatics : IInspectable
                {
                    [propget] HRESULT LeftItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RightItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TopItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BottomItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.SwipeItem)]
                [uuid(560FE6C5-109F-5866-B02E-31E4FA930ED0)]
                interface ISwipeItem : IInspectable
                {
                    [propget] HRESULT Text([out] [retval] HSTRING* value);
                    [propput] HRESULT Text([in] HSTRING value);
                    [propget] HRESULT IconSource([out] [retval] Microsoft.UI.Xaml.Controls.IconSource** value);
                    [propput] HRESULT IconSource([in] Microsoft.UI.Xaml.Controls.IconSource* value);
                    [propget] HRESULT Background([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Background([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT Foreground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Foreground([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT Command([out] [retval] Windows.UI.Xaml.Input.ICommand** value);
                    [propput] HRESULT Command([in] Windows.UI.Xaml.Input.ICommand* value);
                    [propget] HRESULT CommandParameter([out] [retval] IInspectable** value);
                    [propput] HRESULT CommandParameter([in] IInspectable* value);
                    [propget] HRESULT BehaviorOnInvoked([out] [retval] Microsoft.UI.Xaml.Controls.SwipeBehaviorOnInvoked* value);
                    [propput] HRESULT BehaviorOnInvoked([in] Microsoft.UI.Xaml.Controls.SwipeBehaviorOnInvoked value);
                    [eventadd] HRESULT Invoked([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.SwipeItem*, Microsoft.UI.Xaml.Controls.SwipeItemInvokedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Invoked([in] EventRegistrationToken token);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.SwipeItem)]
                [uuid(011513E1-1ADC-5A69-A74F-623FCC18A51C)]
                interface ISwipeItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.SwipeItem** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.SwipeItemInvokedEventArgs)]
                [uuid(7BF51C95-53A2-5A0D-BB32-2B4B1F7D2F20)]
                interface ISwipeItemInvokedEventArgs : IInspectable
                {
                    [propget] HRESULT SwipeControl([out] [retval] Microsoft.UI.Xaml.Controls.SwipeControl** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.SwipeItem)]
                [uuid(793256E1-27C7-5387-BB27-53D072723625)]
                interface ISwipeItemStatics : IInspectable
                {
                    [propget] HRESULT IconSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BackgroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CommandProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CommandParameterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BehaviorOnInvokedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.SwipeItems)]
                [uuid(40D3022B-C82B-5565-A4E4-AD9D7A66B1A9)]
                interface ISwipeItems : IInspectable
                {
                    [propget] HRESULT Mode([out] [retval] Microsoft.UI.Xaml.Controls.SwipeMode* value);
                    [propput] HRESULT Mode([in] Microsoft.UI.Xaml.Controls.SwipeMode value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.SwipeItems)]
                [uuid(9A5D7D77-39BD-5B81-AB4E-F44ACA6EDE3F)]
                interface ISwipeItemsFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.SwipeItems** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.SwipeItems)]
                [uuid(78D47697-EAF2-5652-9AFC-D713CA103488)]
                interface ISwipeItemsStatics : IInspectable
                {
                    [propget] HRESULT ModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.SymbolIconSource)]
                [uuid(1F8098D4-F3EA-5360-B0AA-8065BB7226AE)]
                interface ISymbolIconSource : IInspectable
                {
                    [propget] HRESULT Symbol([out] [retval] Windows.UI.Xaml.Controls.Symbol* value);
                    [propput] HRESULT Symbol([in] Windows.UI.Xaml.Controls.Symbol value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.SymbolIconSource)]
                [uuid(AFBF55FA-FF79-552A-A3A1-48E2EF17152A)]
                interface ISymbolIconSourceFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.SymbolIconSource** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.SymbolIconSource)]
                [uuid(967C25AF-2A94-5E50-A921-587D8FE81143)]
                interface ISymbolIconSourceStatics : IInspectable
                {
                    [propget] HRESULT SymbolProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TabView)]
                [uuid(6AA787AB-5A30-5EA2-BE5B-AED868381756)]
                interface ITabView : IInspectable
                {
                    [propget] HRESULT TabWidthMode([out] [retval] Microsoft.UI.Xaml.Controls.TabViewWidthMode* value);
                    [propput] HRESULT TabWidthMode([in] Microsoft.UI.Xaml.Controls.TabViewWidthMode value);
                    [propget] HRESULT CloseButtonOverlayMode([out] [retval] Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode* value);
                    [propput] HRESULT CloseButtonOverlayMode([in] Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode value);
                    [propget] HRESULT TabStripHeader([out] [retval] IInspectable** value);
                    [propput] HRESULT TabStripHeader([in] IInspectable* value);
                    [propget] HRESULT TabStripHeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT TabStripHeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT TabStripFooter([out] [retval] IInspectable** value);
                    [propput] HRESULT TabStripFooter([in] IInspectable* value);
                    [propget] HRESULT TabStripFooterTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT TabStripFooterTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT IsAddTabButtonVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsAddTabButtonVisible([in] boolean value);
                    [propget] HRESULT AddTabButtonCommand([out] [retval] Windows.UI.Xaml.Input.ICommand** value);
                    [propput] HRESULT AddTabButtonCommand([in] Windows.UI.Xaml.Input.ICommand* value);
                    [propget] HRESULT AddTabButtonCommandParameter([out] [retval] IInspectable** value);
                    [propput] HRESULT AddTabButtonCommandParameter([in] IInspectable* value);
                    [eventadd] HRESULT TabCloseRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TabView*, Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TabCloseRequested([in] EventRegistrationToken token);
                    [eventadd] HRESULT TabDroppedOutside([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TabView*, Microsoft.UI.Xaml.Controls.TabViewTabDroppedOutsideEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TabDroppedOutside([in] EventRegistrationToken token);
                    [eventadd] HRESULT AddTabButtonClick([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TabView*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT AddTabButtonClick([in] EventRegistrationToken token);
                    [eventadd] HRESULT TabItemsChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TabView*, Windows.Foundation.Collections.IVectorChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TabItemsChanged([in] EventRegistrationToken token);
                    [propget] HRESULT TabItemsSource([out] [retval] IInspectable** value);
                    [propput] HRESULT TabItemsSource([in] IInspectable* value);
                    [propget] HRESULT TabItems([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                    [propget] HRESULT TabItemTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT TabItemTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT TabItemTemplateSelector([out] [retval] Windows.UI.Xaml.Controls.DataTemplateSelector** value);
                    [propput] HRESULT TabItemTemplateSelector([in] Windows.UI.Xaml.Controls.DataTemplateSelector* value);
                    [propget] HRESULT CanDragTabs([out] [retval] boolean* value);
                    [propput] HRESULT CanDragTabs([in] boolean value);
                    [propget] HRESULT CanReorderTabs([out] [retval] boolean* value);
                    [propput] HRESULT CanReorderTabs([in] boolean value);
                    [propget] HRESULT AllowDropTabs([out] [retval] boolean* value);
                    [propput] HRESULT AllowDropTabs([in] boolean value);
                    [propget] HRESULT SelectedIndex([out] [retval] INT32* value);
                    [propput] HRESULT SelectedIndex([in] INT32 value);
                    [propget] HRESULT SelectedItem([out] [retval] IInspectable** value);
                    [propput] HRESULT SelectedItem([in] IInspectable* value);
                    HRESULT ContainerFromItem([in] IInspectable* item, [out] [retval] Windows.UI.Xaml.DependencyObject** result);
                    HRESULT ContainerFromIndex([in] INT32 index, [out] [retval] Windows.UI.Xaml.DependencyObject** result);
                    [eventadd] HRESULT SelectionChanged([in] Windows.UI.Xaml.Controls.SelectionChangedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectionChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT TabDragStarting([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TabView*, Microsoft.UI.Xaml.Controls.TabViewTabDragStartingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TabDragStarting([in] EventRegistrationToken token);
                    [eventadd] HRESULT TabDragCompleted([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TabView*, Microsoft.UI.Xaml.Controls.TabViewTabDragCompletedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TabDragCompleted([in] EventRegistrationToken token);
                    [eventadd] HRESULT TabStripDragOver([in] Windows.UI.Xaml.DragEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TabStripDragOver([in] EventRegistrationToken token);
                    [eventadd] HRESULT TabStripDrop([in] Windows.UI.Xaml.DragEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TabStripDrop([in] EventRegistrationToken token);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TabView)]
                [uuid(E7E83685-EEDF-5106-9429-884435AB166B)]
                interface ITabViewFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.TabView** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TabViewItem)]
                [uuid(291F3E98-4F17-5021-94F0-6A5B304312B6)]
                interface ITabViewItem : IInspectable
                {
                    [propget] HRESULT Header([out] [retval] IInspectable** value);
                    [propput] HRESULT Header([in] IInspectable* value);
                    [propget] HRESULT HeaderTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT HeaderTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT IconSource([out] [retval] Microsoft.UI.Xaml.Controls.IconSource** value);
                    [propput] HRESULT IconSource([in] Microsoft.UI.Xaml.Controls.IconSource* value);
                    [propget] HRESULT IsClosable([out] [retval] boolean* value);
                    [propput] HRESULT IsClosable([in] boolean value);
                    [propget] HRESULT TabViewTemplateSettings([out] [retval] Microsoft.UI.Xaml.Controls.TabViewItemTemplateSettings** value);
                    [eventadd] HRESULT CloseRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TabViewItem*, Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT CloseRequested([in] EventRegistrationToken token);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TabViewItem)]
                [uuid(B64C2423-7E56-5D41-8A84-1EE28F9826A4)]
                interface ITabViewItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.TabViewItem** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TabViewItem)]
                [uuid(0A4FA876-DC4A-5648-9114-C3B392DE3129)]
                interface ITabViewItemStatics : IInspectable
                {
                    [propget] HRESULT HeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IconSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsClosableProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TabViewTemplateSettingsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TabViewItemTemplateSettings)]
                [uuid(D1B2D760-CC38-5A96-BC92-10EE3B36988C)]
                interface ITabViewItemTemplateSettings : IInspectable
                {
                    [propget] HRESULT IconElement([out] [retval] Windows.UI.Xaml.Controls.IconElement** value);
                    [propput] HRESULT IconElement([in] Windows.UI.Xaml.Controls.IconElement* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TabViewItemTemplateSettings)]
                [uuid(CBA3E467-4C98-5885-BA24-6FA699CC8EDD)]
                interface ITabViewItemTemplateSettingsFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.TabViewItemTemplateSettings** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TabViewItemTemplateSettings)]
                [uuid(40A40ABA-9EC2-5B55-B6E4-7556A5A06018)]
                interface ITabViewItemTemplateSettingsStatics : IInspectable
                {
                    [propget] HRESULT IconElementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TabView)]
                [uuid(3FCAB90C-DDAC-53E5-83AB-7A8E9EE93889)]
                interface ITabViewStatics : IInspectable
                {
                    [propget] HRESULT TabWidthModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TabStripHeaderProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TabStripHeaderTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TabStripFooterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TabStripFooterTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsAddTabButtonVisibleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AddTabButtonCommandProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AddTabButtonCommandParameterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TabItemsSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TabItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TabItemTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TabItemTemplateSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CloseButtonOverlayModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanDragTabsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanReorderTabsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AllowDropTabsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedIndexProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectedItemProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs)]
                [uuid(D56AB9B2-E264-5C7E-A1CB-E41A16A6C6C6)]
                interface ITabViewTabCloseRequestedEventArgs : IInspectable
                {
                    [propget] HRESULT Item([out] [retval] IInspectable** value);
                    [propget] HRESULT Tab([out] [retval] Microsoft.UI.Xaml.Controls.TabViewItem** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TabViewTabDragCompletedEventArgs)]
                [uuid(791FC623-C8F6-5102-81BD-1869CDE82284)]
                interface ITabViewTabDragCompletedEventArgs : IInspectable
                {
                    [propget] HRESULT DropResult([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackageOperation* value);
                    [propget] HRESULT Item([out] [retval] IInspectable** value);
                    [propget] HRESULT Tab([out] [retval] Microsoft.UI.Xaml.Controls.TabViewItem** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TabViewTabDragStartingEventArgs)]
                [uuid(97682812-1A7B-53FD-8B4E-C2F70D2AD250)]
                interface ITabViewTabDragStartingEventArgs : IInspectable
                {
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                    [propget] HRESULT Data([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackage** value);
                    [propget] HRESULT Item([out] [retval] IInspectable** value);
                    [propget] HRESULT Tab([out] [retval] Microsoft.UI.Xaml.Controls.TabViewItem** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TabViewTabDroppedOutsideEventArgs)]
                [uuid(1F1F4D5D-0FB1-51AB-B66F-F7A322BF2D13)]
                interface ITabViewTabDroppedOutsideEventArgs : IInspectable
                {
                    [propget] HRESULT Item([out] [retval] IInspectable** value);
                    [propget] HRESULT Tab([out] [retval] Microsoft.UI.Xaml.Controls.TabViewItem** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TeachingTip)]
                [uuid(5B200440-4FCC-5FDB-B418-B5797B0874AD)]
                interface ITeachingTip : IInspectable
                {
                    [propget] HRESULT Title([out] [retval] HSTRING* value);
                    [propput] HRESULT Title([in] HSTRING value);
                    [propget] HRESULT Subtitle([out] [retval] HSTRING* value);
                    [propput] HRESULT Subtitle([in] HSTRING value);
                    [propget] HRESULT IsOpen([out] [retval] boolean* value);
                    [propput] HRESULT IsOpen([in] boolean value);
                    [propget] HRESULT Target([out] [retval] Windows.UI.Xaml.FrameworkElement** value);
                    [propput] HRESULT Target([in] Windows.UI.Xaml.FrameworkElement* value);
                    [propget] HRESULT TailVisibility([out] [retval] Microsoft.UI.Xaml.Controls.TeachingTipTailVisibility* value);
                    [propput] HRESULT TailVisibility([in] Microsoft.UI.Xaml.Controls.TeachingTipTailVisibility value);
                    [propget] HRESULT ActionButtonContent([out] [retval] IInspectable** value);
                    [propput] HRESULT ActionButtonContent([in] IInspectable* value);
                    [propget] HRESULT ActionButtonStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT ActionButtonStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT ActionButtonCommand([out] [retval] Windows.UI.Xaml.Input.ICommand** value);
                    [propput] HRESULT ActionButtonCommand([in] Windows.UI.Xaml.Input.ICommand* value);
                    [propget] HRESULT ActionButtonCommandParameter([out] [retval] IInspectable** value);
                    [propput] HRESULT ActionButtonCommandParameter([in] IInspectable* value);
                    [propget] HRESULT CloseButtonContent([out] [retval] IInspectable** value);
                    [propput] HRESULT CloseButtonContent([in] IInspectable* value);
                    [propget] HRESULT CloseButtonStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT CloseButtonStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT CloseButtonCommand([out] [retval] Windows.UI.Xaml.Input.ICommand** value);
                    [propput] HRESULT CloseButtonCommand([in] Windows.UI.Xaml.Input.ICommand* value);
                    [propget] HRESULT CloseButtonCommandParameter([out] [retval] IInspectable** value);
                    [propput] HRESULT CloseButtonCommandParameter([in] IInspectable* value);
                    [propget] HRESULT PlacementMargin([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT PlacementMargin([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT ShouldConstrainToRootBounds([out] [retval] boolean* value);
                    [propput] HRESULT ShouldConstrainToRootBounds([in] boolean value);
                    [propget] HRESULT IsLightDismissEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsLightDismissEnabled([in] boolean value);
                    [propget] HRESULT PreferredPlacement([out] [retval] Microsoft.UI.Xaml.Controls.TeachingTipPlacementMode* value);
                    [propput] HRESULT PreferredPlacement([in] Microsoft.UI.Xaml.Controls.TeachingTipPlacementMode value);
                    [propget] HRESULT HeroContentPlacement([out] [retval] Microsoft.UI.Xaml.Controls.TeachingTipHeroContentPlacementMode* value);
                    [propput] HRESULT HeroContentPlacement([in] Microsoft.UI.Xaml.Controls.TeachingTipHeroContentPlacementMode value);
                    [propget] HRESULT HeroContent([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT HeroContent([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT IconSource([out] [retval] Microsoft.UI.Xaml.Controls.IconSource** value);
                    [propput] HRESULT IconSource([in] Microsoft.UI.Xaml.Controls.IconSource* value);
                    [propget] HRESULT TemplateSettings([out] [retval] Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings** value);
                    [eventadd] HRESULT ActionButtonClick([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TeachingTip*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ActionButtonClick([in] EventRegistrationToken token);
                    [eventadd] HRESULT CloseButtonClick([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TeachingTip*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT CloseButtonClick([in] EventRegistrationToken token);
                    [eventadd] HRESULT Closing([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TeachingTip*, Microsoft.UI.Xaml.Controls.TeachingTipClosingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Closing([in] EventRegistrationToken token);
                    [eventadd] HRESULT Closed([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TeachingTip*, Microsoft.UI.Xaml.Controls.TeachingTipClosedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Closed([in] EventRegistrationToken token);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TeachingTipClosedEventArgs)]
                [uuid(2536F506-4038-59DB-9E35-A9252FB5ADB2)]
                interface ITeachingTipClosedEventArgs : IInspectable
                {
                    [propget] HRESULT Reason([out] [retval] Microsoft.UI.Xaml.Controls.TeachingTipCloseReason* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TeachingTipClosingEventArgs)]
                [uuid(16F53512-3C55-5636-A856-229D9768D64E)]
                interface ITeachingTipClosingEventArgs : IInspectable
                {
                    [propget] HRESULT Reason([out] [retval] Microsoft.UI.Xaml.Controls.TeachingTipCloseReason* value);
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                    HRESULT GetDeferral([out] [retval] Windows.Foundation.Deferral** result);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TeachingTip)]
                [uuid(A3ECD47D-2972-5D19-A62E-DDFBC5E1AD57)]
                interface ITeachingTipFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.TeachingTip** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TeachingTip)]
                [uuid(C8723FEB-BDC8-566E-AD5C-6F07254AF937)]
                interface ITeachingTipStatics : IInspectable
                {
                    [propget] HRESULT IsOpenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TargetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TailVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TitleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SubtitleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ActionButtonContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ActionButtonStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ActionButtonCommandProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ActionButtonCommandParameterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CloseButtonContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CloseButtonStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CloseButtonCommandProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CloseButtonCommandParameterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PlacementMarginProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ShouldConstrainToRootBoundsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsLightDismissEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PreferredPlacementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeroContentPlacementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HeroContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IconSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TemplateSettingsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings)]
                [uuid(677A43E5-8FF2-51CD-9742-A2155E20D772)]
                interface ITeachingTipTemplateSettings : IInspectable
                {
                    [propget] HRESULT TopRightHighlightMargin([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT TopRightHighlightMargin([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT TopLeftHighlightMargin([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT TopLeftHighlightMargin([in] Windows.UI.Xaml.Thickness value);
                    [propget] HRESULT IconElement([out] [retval] Windows.UI.Xaml.Controls.IconElement** value);
                    [propput] HRESULT IconElement([in] Windows.UI.Xaml.Controls.IconElement* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings)]
                [uuid(63210545-E195-56CD-BCCD-169255E134E3)]
                interface ITeachingTipTemplateSettingsFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings)]
                [uuid(6295DAC8-7102-5602-B8F9-E500E598448F)]
                interface ITeachingTipTemplateSettingsStatics : IInspectable
                {
                    [propget] HRESULT TopRightHighlightMarginProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TopLeftHighlightMarginProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IconElementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TextCommandBarFlyout)]
                [uuid(6D0F38A5-0EB3-5D73-8195-D2D89B76B0F7)]
                interface ITextCommandBarFlyout : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TextCommandBarFlyout)]
                [uuid(5C56A34F-621F-55F2-8D71-3E3A6E6906BD)]
                interface ITextCommandBarFlyoutFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.TextCommandBarFlyout** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ToggleSplitButton)]
                [uuid(5C0F247B-BD00-5509-88A8-B09007AE22B0)]
                interface IToggleSplitButton : IInspectable
                {
                    [propget] HRESULT IsChecked([out] [retval] boolean* value);
                    [propput] HRESULT IsChecked([in] boolean value);
                    [eventadd] HRESULT IsCheckedChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ToggleSplitButton*, Microsoft.UI.Xaml.Controls.ToggleSplitButtonIsCheckedChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT IsCheckedChanged([in] EventRegistrationToken token);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ToggleSplitButton)]
                [uuid(25459D02-0FFC-5C7C-AF56-F55AAD6DB5E7)]
                interface IToggleSplitButtonFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.ToggleSplitButton** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ToggleSplitButtonIsCheckedChangedEventArgs)]
                [uuid(6CAB1E15-C017-5760-828B-DAFC21D54EB2)]
                interface IToggleSplitButtonIsCheckedChangedEventArgs : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.ToggleSplitButton)]
                [uuid(CEE1275D-F1DC-5CD5-A3D4-E56BCEEEFA88)]
                interface IToggleSplitButtonStatics : IInspectable
                {
                    [propget] HRESULT IsCheckedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeView)]
                [uuid(1BEF9AF4-712C-50EF-9BB4-881B975232AB)]
                interface ITreeView : IInspectable
                {
                    [propget] HRESULT RootNodes([out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.TreeViewNode*>** value);
                    [propget] HRESULT SelectionMode([out] [retval] Microsoft.UI.Xaml.Controls.TreeViewSelectionMode* value);
                    [propput] HRESULT SelectionMode([in] Microsoft.UI.Xaml.Controls.TreeViewSelectionMode value);
                    [propget] HRESULT SelectedNodes([out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.TreeViewNode*>** value);
                    HRESULT Expand([in] Microsoft.UI.Xaml.Controls.TreeViewNode* value);
                    HRESULT Collapse([in] Microsoft.UI.Xaml.Controls.TreeViewNode* value);
                    HRESULT SelectAll();
                    [eventadd] HRESULT ItemInvoked([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TreeView*, Microsoft.UI.Xaml.Controls.TreeViewItemInvokedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ItemInvoked([in] EventRegistrationToken token);
                    [eventadd] HRESULT Expanding([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TreeView*, Microsoft.UI.Xaml.Controls.TreeViewExpandingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Expanding([in] EventRegistrationToken token);
                    [eventadd] HRESULT Collapsed([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TreeView*, Microsoft.UI.Xaml.Controls.TreeViewCollapsedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Collapsed([in] EventRegistrationToken token);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeView)]
                [uuid(A8AEAAC2-8D43-58DE-A735-6268B7AC9547)]
                interface ITreeView2 : IInspectable
                {
                    HRESULT NodeFromContainer([in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] Microsoft.UI.Xaml.Controls.TreeViewNode** result);
                    HRESULT ContainerFromNode([in] Microsoft.UI.Xaml.Controls.TreeViewNode* node, [out] [retval] Windows.UI.Xaml.DependencyObject** result);
                    HRESULT ItemFromContainer([in] Windows.UI.Xaml.DependencyObject* container, [out] [retval] IInspectable** result);
                    HRESULT ContainerFromItem([in] IInspectable* item, [out] [retval] Windows.UI.Xaml.DependencyObject** result);
                    [propget] HRESULT CanDragItems([out] [retval] boolean* value);
                    [propput] HRESULT CanDragItems([in] boolean value);
                    [propget] HRESULT CanReorderItems([out] [retval] boolean* value);
                    [propput] HRESULT CanReorderItems([in] boolean value);
                    [propget] HRESULT ItemTemplate([out] [retval] Windows.UI.Xaml.DataTemplate** value);
                    [propput] HRESULT ItemTemplate([in] Windows.UI.Xaml.DataTemplate* value);
                    [propget] HRESULT ItemTemplateSelector([out] [retval] Windows.UI.Xaml.Controls.DataTemplateSelector** value);
                    [propput] HRESULT ItemTemplateSelector([in] Windows.UI.Xaml.Controls.DataTemplateSelector* value);
                    [propget] HRESULT ItemContainerStyle([out] [retval] Windows.UI.Xaml.Style** value);
                    [propput] HRESULT ItemContainerStyle([in] Windows.UI.Xaml.Style* value);
                    [propget] HRESULT ItemContainerStyleSelector([out] [retval] Windows.UI.Xaml.Controls.StyleSelector** value);
                    [propput] HRESULT ItemContainerStyleSelector([in] Windows.UI.Xaml.Controls.StyleSelector* value);
                    [propget] HRESULT ItemContainerTransitions([out] [retval] Windows.UI.Xaml.Media.Animation.TransitionCollection** value);
                    [propput] HRESULT ItemContainerTransitions([in] Windows.UI.Xaml.Media.Animation.TransitionCollection* value);
                    [propget] HRESULT ItemsSource([out] [retval] IInspectable** value);
                    [propput] HRESULT ItemsSource([in] IInspectable* value);
                    [eventadd] HRESULT DragItemsStarting([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TreeView*, Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DragItemsStarting([in] EventRegistrationToken token);
                    [eventadd] HRESULT DragItemsCompleted([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TreeView*, Microsoft.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DragItemsCompleted([in] EventRegistrationToken token);
                    [propget] HRESULT SelectedNode([out] [retval] Microsoft.UI.Xaml.Controls.TreeViewNode** value);
                    [propput] HRESULT SelectedNode([in] Microsoft.UI.Xaml.Controls.TreeViewNode* value);
                    [propget] HRESULT SelectedItem([out] [retval] IInspectable** value);
                    [propput] HRESULT SelectedItem([in] IInspectable* value);
                    [propget] HRESULT SelectedItems([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeView)]
                [experimental]
                [uuid(A1B5538E-7956-5671-AFD0-4C0F38122B70)]
                interface ITreeView3 : IInspectable
                {
                    [eventadd] HRESULT SelectionChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TreeView*, Microsoft.UI.Xaml.Controls.TreeViewSelectionChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SelectionChanged([in] EventRegistrationToken token);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewCollapsedEventArgs)]
                [uuid(8EE00B59-42C6-5D73-809F-68710088E5A5)]
                interface ITreeViewCollapsedEventArgs : IInspectable
                {
                    [propget] HRESULT Node([out] [retval] Microsoft.UI.Xaml.Controls.TreeViewNode** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewCollapsedEventArgs)]
                [uuid(77804A23-9FEB-5C57-9C95-4DD984267217)]
                interface ITreeViewCollapsedEventArgs2 : IInspectable
                {
                    [propget] HRESULT Item([out] [retval] IInspectable** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs)]
                [uuid(E5B8547E-F839-55DB-9C26-2A95F57A60DC)]
                interface ITreeViewDragItemsCompletedEventArgs : IInspectable
                {
                    [propget] HRESULT DropResult([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackageOperation* value);
                    [propget] HRESULT Items([out] [retval] Windows.Foundation.Collections.IVectorView<IInspectable*>** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs)]
                [uuid(060D3921-57A0-5BC5-BE26-320BD9C1A6E8)]
                interface ITreeViewDragItemsCompletedEventArgs2 : IInspectable
                {
                    [propget] HRESULT NewParentItem([out] [retval] IInspectable** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs)]
                [uuid(1B6C4FFC-CD32-5E06-B782-DF9F077546C7)]
                interface ITreeViewDragItemsStartingEventArgs : IInspectable
                {
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                    [propget] HRESULT Data([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackage** value);
                    [propget] HRESULT Items([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewExpandingEventArgs)]
                [uuid(BD769EF7-CADC-5334-93AD-C9BBE820643D)]
                interface ITreeViewExpandingEventArgs : IInspectable
                {
                    [propget] HRESULT Node([out] [retval] Microsoft.UI.Xaml.Controls.TreeViewNode** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewExpandingEventArgs)]
                [uuid(ED7840E5-DBF5-5937-89DD-997A6FDE0D5C)]
                interface ITreeViewExpandingEventArgs2 : IInspectable
                {
                    [propget] HRESULT Item([out] [retval] IInspectable** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeView)]
                [uuid(9C6220BE-F9EB-518A-B30E-7E41DE5EFDA9)]
                interface ITreeViewFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.TreeView** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewItem)]
                [uuid(BDBE765C-5747-516A-9E0D-B1CD2099384C)]
                interface ITreeViewItem : IInspectable
                {
                    [propget] HRESULT GlyphOpacity([out] [retval] DOUBLE* value);
                    [propput] HRESULT GlyphOpacity([in] DOUBLE value);
                    [propget] HRESULT GlyphBrush([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT GlyphBrush([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT ExpandedGlyph([out] [retval] HSTRING* value);
                    [propput] HRESULT ExpandedGlyph([in] HSTRING value);
                    [propget] HRESULT CollapsedGlyph([out] [retval] HSTRING* value);
                    [propput] HRESULT CollapsedGlyph([in] HSTRING value);
                    [propget] HRESULT GlyphSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT GlyphSize([in] DOUBLE value);
                    [propget] HRESULT IsExpanded([out] [retval] boolean* value);
                    [propput] HRESULT IsExpanded([in] boolean value);
                    [propget] HRESULT TreeViewItemTemplateSettings([out] [retval] Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewItem)]
                [uuid(B1B70143-3F5B-54F4-8BD7-41DC15CF45A9)]
                interface ITreeViewItem2 : IInspectable
                {
                    [propget] HRESULT HasUnrealizedChildren([out] [retval] boolean* value);
                    [propput] HRESULT HasUnrealizedChildren([in] boolean value);
                    [propget] HRESULT ItemsSource([out] [retval] IInspectable** value);
                    [propput] HRESULT ItemsSource([in] IInspectable* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewItem)]
                [uuid(878FD918-E77E-5BE8-8C8A-B79B27B08D9B)]
                interface ITreeViewItemFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.TreeViewItem** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewItemInvokedEventArgs)]
                [uuid(1A05853C-B101-542C-9A1E-775A044C4652)]
                interface ITreeViewItemInvokedEventArgs : IInspectable
                {
                    [propget] HRESULT InvokedItem([out] [retval] IInspectable** value);
                    [propput] HRESULT Handled([in] boolean value);
                    [propget] HRESULT Handled([out] [retval] boolean* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewItem)]
                [uuid(1EF541D8-F94D-5F82-9F43-1A54ECEAD44D)]
                interface ITreeViewItemStatics : IInspectable
                {
                    [propget] HRESULT GlyphOpacityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT GlyphBrushProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ExpandedGlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CollapsedGlyphProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT GlyphSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsExpandedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TreeViewItemTemplateSettingsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewItem)]
                [uuid(773CEF85-6D1B-5A6C-801D-F422B1A81F98)]
                interface ITreeViewItemStatics2 : IInspectable
                {
                    [propget] HRESULT HasUnrealizedChildrenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemsSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings)]
                [uuid(35B92371-3A10-5F55-89EA-59DB9A1D02CD)]
                interface ITreeViewItemTemplateSettings : IInspectable
                {
                    [propget] HRESULT ExpandedGlyphVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT CollapsedGlyphVisibility([out] [retval] Windows.UI.Xaml.Visibility* value);
                    [propget] HRESULT Indentation([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propget] HRESULT DragItemsCount([out] [retval] INT32* value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings)]
                [uuid(1D1A66E3-F56D-5D7F-942C-F3A87F5C552E)]
                interface ITreeViewItemTemplateSettingsFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings)]
                [uuid(1E4667C8-459A-5A36-B131-2159CC2FE543)]
                interface ITreeViewItemTemplateSettingsStatics : IInspectable
                {
                    [propget] HRESULT ExpandedGlyphVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CollapsedGlyphVisibilityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IndentationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DragItemsCountProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewList)]
                [uuid(94CEE57B-7085-5A6A-AAC3-184509B8ECE0)]
                interface ITreeViewList : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewList)]
                [uuid(461499A0-68CF-5B81-B0E4-B1AF929B0B12)]
                interface ITreeViewListFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.TreeViewList** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewNode)]
                [uuid(00378A74-790B-5328-8AFA-7D65E22DA426)]
                interface ITreeViewNode : IInspectable
                {
                    [propget] HRESULT Content([out] [retval] IInspectable** value);
                    [propput] HRESULT Content([in] IInspectable* value);
                    [propget] HRESULT Parent([out] [retval] Microsoft.UI.Xaml.Controls.TreeViewNode** value);
                    [propget] HRESULT IsExpanded([out] [retval] boolean* value);
                    [propput] HRESULT IsExpanded([in] boolean value);
                    [propget] HRESULT HasChildren([out] [retval] boolean* value);
                    [propget] HRESULT Depth([out] [retval] INT32* value);
                    [propget] HRESULT HasUnrealizedChildren([out] [retval] boolean* value);
                    [propput] HRESULT HasUnrealizedChildren([in] boolean value);
                    [propget] HRESULT Children([out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.TreeViewNode*>** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewNode)]
                [uuid(C105A5E5-CEA8-5EFD-8BE8-3D89B54CBD5F)]
                interface ITreeViewNodeFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.TreeViewNode** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewNode)]
                [uuid(1FEF99A7-988F-503C-A919-87D55DC90DF8)]
                interface ITreeViewNodeStatics : IInspectable
                {
                    [propget] HRESULT ContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT DepthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsExpandedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HasChildrenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeViewSelectionChangedEventArgs)]
                [experimental]
                [uuid(664190F3-7133-5599-B41C-1D54CD2CB930)]
                interface ITreeViewSelectionChangedEventArgs : IInspectable
                {
                    [propget] HRESULT AddedItems([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                    [propget] HRESULT RemovedItems([out] [retval] Windows.Foundation.Collections.IVector<IInspectable*>** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeView)]
                [uuid(C7808774-7BA4-54FF-9D3A-4CB892729AD7)]
                interface ITreeViewStatics : IInspectable
                {
                    [propget] HRESULT SelectedItemProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SelectionModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TreeView)]
                [uuid(4F87BC2D-C640-50D0-8F0E-23599F9958AF)]
                interface ITreeViewStatics2 : IInspectable
                {
                    [propget] HRESULT CanDragItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanReorderItemsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemTemplateProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemTemplateSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemContainerStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemContainerStyleSelectorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemContainerTransitionsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemsSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TwoPaneView)]
                [uuid(85EDC585-1481-5477-BB12-2A18A32B834E)]
                interface ITwoPaneView : IInspectable
                {
                    [propget] HRESULT Pane1([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Pane1([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT Pane2([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Pane2([in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT Pane1Length([out] [retval] Windows.UI.Xaml.GridLength* value);
                    [propput] HRESULT Pane1Length([in] Windows.UI.Xaml.GridLength value);
                    [propget] HRESULT Pane2Length([out] [retval] Windows.UI.Xaml.GridLength* value);
                    [propput] HRESULT Pane2Length([in] Windows.UI.Xaml.GridLength value);
                    [propget] HRESULT PanePriority([out] [retval] Microsoft.UI.Xaml.Controls.TwoPaneViewPriority* value);
                    [propput] HRESULT PanePriority([in] Microsoft.UI.Xaml.Controls.TwoPaneViewPriority value);
                    [propget] HRESULT Mode([out] [retval] Microsoft.UI.Xaml.Controls.TwoPaneViewMode* value);
                    [propget] HRESULT WideModeConfiguration([out] [retval] Microsoft.UI.Xaml.Controls.TwoPaneViewWideModeConfiguration* value);
                    [propput] HRESULT WideModeConfiguration([in] Microsoft.UI.Xaml.Controls.TwoPaneViewWideModeConfiguration value);
                    [propget] HRESULT TallModeConfiguration([out] [retval] Microsoft.UI.Xaml.Controls.TwoPaneViewTallModeConfiguration* value);
                    [propput] HRESULT TallModeConfiguration([in] Microsoft.UI.Xaml.Controls.TwoPaneViewTallModeConfiguration value);
                    [propget] HRESULT MinWideModeWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT MinWideModeWidth([in] DOUBLE value);
                    [propget] HRESULT MinTallModeHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT MinTallModeHeight([in] DOUBLE value);
                    [eventadd] HRESULT ModeChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.TwoPaneView*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ModeChanged([in] EventRegistrationToken token);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TwoPaneView)]
                [uuid(0F1AF0CD-F3DC-52F6-B632-396742533231)]
                interface ITwoPaneViewFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.TwoPaneView** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.TwoPaneView)]
                [uuid(3275839B-59C2-5403-A6B7-8B21ECD6ABA3)]
                interface ITwoPaneViewStatics : IInspectable
                {
                    [propget] HRESULT Pane1Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT Pane2Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT Pane1LengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT Pane2LengthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PanePriorityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT WideModeConfigurationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TallModeConfigurationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinWideModeWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinTallModeHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.UniformGridLayout)]
                [uuid(86B441FD-35EE-5164-9EC7-B92542648B4B)]
                interface IUniformGridLayout : IInspectable
                {
                    [propget] HRESULT Orientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                    [propput] HRESULT Orientation([in] Windows.UI.Xaml.Controls.Orientation value);
                    [propget] HRESULT MinItemWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT MinItemWidth([in] DOUBLE value);
                    [propget] HRESULT MinItemHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT MinItemHeight([in] DOUBLE value);
                    [propget] HRESULT MinRowSpacing([out] [retval] DOUBLE* value);
                    [propput] HRESULT MinRowSpacing([in] DOUBLE value);
                    [propget] HRESULT MinColumnSpacing([out] [retval] DOUBLE* value);
                    [propput] HRESULT MinColumnSpacing([in] DOUBLE value);
                    [propget] HRESULT ItemsJustification([out] [retval] Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification* value);
                    [propput] HRESULT ItemsJustification([in] Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification value);
                    [propget] HRESULT ItemsStretch([out] [retval] Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch* value);
                    [propput] HRESULT ItemsStretch([in] Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch value);
                    [propget] HRESULT MaximumRowsOrColumns([out] [retval] INT32* value);
                    [propput] HRESULT MaximumRowsOrColumns([in] INT32 value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.UniformGridLayout)]
                [uuid(0D9ED808-F3F9-5034-9627-152B91E91B4B)]
                interface IUniformGridLayoutFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.UniformGridLayout** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.UniformGridLayoutState)]
                [experimental]
                [uuid(96F81418-6369-5AB1-B682-AE3C20CA5DCA)]
                interface IUniformGridLayoutState : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.UniformGridLayoutState)]
                [experimental]
                [uuid(8C774AAF-2593-5EDE-AC20-5B9260A3DB26)]
                interface IUniformGridLayoutStateFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.UniformGridLayoutState** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.UniformGridLayout)]
                [uuid(E1059BCE-59D9-52C9-8C0D-C5FB86E833A1)]
                interface IUniformGridLayoutStatics : IInspectable
                {
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinItemWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinItemHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinRowSpacingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MinColumnSpacingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemsJustificationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemsStretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MaximumRowsOrColumnsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.VirtualizingLayout)]
                [uuid(54857CE0-B9E6-51A3-BFA8-DCD8EE306D5C)]
                interface IVirtualizingLayout : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext)]
                [uuid(283143F4-3716-5001-90AD-1079F20DF4BA)]
                interface IVirtualizingLayoutContext : IInspectable
                {
                    [propget] HRESULT ItemCount([out] [retval] INT32* value);
                    HRESULT GetItemAt([in] INT32 index, [out] [retval] IInspectable** result);
                    [propget] HRESULT RealizationRect([out] [retval] Windows.Foundation.Rect* value);
                    [overload("GetOrCreateElementAt")] HRESULT GetOrCreateElementAt([in] INT32 index, [out] [retval] Windows.UI.Xaml.UIElement** result);
                    [overload("GetOrCreateElementAt")] HRESULT GetOrCreateElementAt2([in] INT32 index, [in] Microsoft.UI.Xaml.Controls.ElementRealizationOptions options, [out] [retval] Windows.UI.Xaml.UIElement** result);
                    HRESULT RecycleElement([in] Windows.UI.Xaml.UIElement* element);
                    [propget] HRESULT RecommendedAnchorIndex([out] [retval] INT32* value);
                    [propget] HRESULT LayoutOrigin([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT LayoutOrigin([in] Windows.Foundation.Point value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext)]
                [uuid(3F790B67-FDFB-505A-8B85-6210506DF311)]
                interface IVirtualizingLayoutContextFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext)]
                [uuid(99CFBBD0-AC69-54EC-91EE-27D4864DE40F)]
                interface IVirtualizingLayoutContextOverrides : IInspectable
                {
                    HRESULT ItemCountCore([out] [retval] INT32* result);
                    HRESULT GetItemAtCore([in] INT32 index, [out] [retval] IInspectable** result);
                    HRESULT RealizationRectCore([out] [retval] Windows.Foundation.Rect* result);
                    HRESULT GetOrCreateElementAtCore([in] INT32 index, [in] Microsoft.UI.Xaml.Controls.ElementRealizationOptions options, [out] [retval] Windows.UI.Xaml.UIElement** result);
                    HRESULT RecycleElementCore([in] Windows.UI.Xaml.UIElement* element);
                    [propget] HRESULT RecommendedAnchorIndexCore([out] [retval] INT32* value);
                    [propget] HRESULT LayoutOriginCore([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT LayoutOriginCore([in] Windows.Foundation.Point value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.VirtualizingLayout)]
                [uuid(C7C128E1-5DF7-5345-B5CD-43AFDFA948B4)]
                interface IVirtualizingLayoutFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.VirtualizingLayout** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.VirtualizingLayout)]
                [uuid(D9996F1E-62BE-515E-843D-083506DF3E7D)]
                interface IVirtualizingLayoutOverrides : IInspectable
                {
                    HRESULT InitializeForContextCore([in] Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext* context);
                    HRESULT UninitializeForContextCore([in] Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext* context);
                    HRESULT MeasureOverride([in] Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext* context, [in] Windows.Foundation.Size availableSize, [out] [retval] Windows.Foundation.Size* result);
                    HRESULT ArrangeOverride([in] Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext* context, [in] Windows.Foundation.Size finalSize, [out] [retval] Windows.Foundation.Size* result);
                    HRESULT OnItemsChangedCore([in] Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext* context, [in] IInspectable* source, [in] Windows.UI.Xaml.Interop.NotifyCollectionChangedEventArgs* args);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.WebView2)]
                [experimental]
                [uuid(04C2C789-3936-542F-8706-87B199A73FEB)]
                interface IWebView2 : IInspectable
                {
                    [propget] HRESULT CoreWebView2([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2** value);
                    HRESULT EnsureCoreWebView2Async([out] [retval] Windows.Foundation.IAsyncAction** operation);
                    HRESULT ExecuteScriptAsync([in] HSTRING javascriptCode, [out] [retval] Windows.Foundation.IAsyncOperation<HSTRING>** operation);
                    [propget] HRESULT Source([out] [retval] Windows.Foundation.Uri** value);
                    [propput] HRESULT Source([in] Windows.Foundation.Uri* value);
                    [propget] HRESULT CanGoForward([out] [retval] boolean* value);
                    [propput] HRESULT CanGoForward([in] boolean value);
                    [propget] HRESULT CanGoBack([out] [retval] boolean* value);
                    [propput] HRESULT CanGoBack([in] boolean value);
                    HRESULT Reload();
                    HRESULT GoForward();
                    HRESULT GoBack();
                    HRESULT NavigateToString([in] HSTRING htmlContent);
                    HRESULT Close();
                    [eventadd] HRESULT NavigationCompleted([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.WebView2*, Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT NavigationCompleted([in] EventRegistrationToken token);
                    [eventadd] HRESULT WebMessageReceived([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.WebView2*, Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT WebMessageReceived([in] EventRegistrationToken token);
                    [eventadd] HRESULT NavigationStarting([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.WebView2*, Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT NavigationStarting([in] EventRegistrationToken token);
                    [eventadd] HRESULT CoreProcessFailed([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.WebView2*, Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT CoreProcessFailed([in] EventRegistrationToken token);
                    [eventadd] HRESULT CoreWebView2Initialized([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.WebView2*, Microsoft.UI.Xaml.Controls.CoreWebView2InitializedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT CoreWebView2Initialized([in] EventRegistrationToken token);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.WebView2)]
                [experimental]
                [uuid(FB4EC2CE-3074-5C42-B655-64FB81FBD040)]
                interface IWebView2Factory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.WebView2** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.WebView2)]
                [experimental]
                [uuid(048C21AB-4300-5908-88A2-7FB8F2A82522)]
                interface IWebView2Statics : IInspectable
                {
                    [propget] HRESULT SourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanGoForwardProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CanGoBackProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.XamlControlsResources)]
                [uuid(0E35A094-868E-5FBE-A92E-2E224A781DD5)]
                interface IXamlControlsResources : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.XamlControlsResources)]
                [experimental]
                [uuid(206D1260-8291-5051-9CFD-5D2D8EB30EE7)]
                interface IXamlControlsResources2 : IInspectable
                {
                    [propget] HRESULT UseCompactResources([out] [retval] boolean* value);
                    [propput] HRESULT UseCompactResources([in] boolean value);
                    [propget] HRESULT Version([out] [retval] Microsoft.UI.Xaml.Controls.StylesVersion* value);
                    [propput] HRESULT Version([in] Microsoft.UI.Xaml.Controls.StylesVersion value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 2.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.XamlControlsResources)]
                [uuid(3BA1468F-22AB-520B-8D17-9CBB3EEE950C)]
                interface IXamlControlsResources3 : IInspectable
                {
                    [propget] HRESULT ControlsResourcesVersion([out] [retval] Microsoft.UI.Xaml.Controls.ControlsResourcesVersion* value);
                    [propput] HRESULT ControlsResourcesVersion([in] Microsoft.UI.Xaml.Controls.ControlsResourcesVersion value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.XamlControlsResources)]
                [uuid(8FB9EB9B-850A-5225-96CF-A72036043342)]
                interface IXamlControlsResourcesStatics : IInspectable
                {
                    HRESULT EnsureRevealLights([in] Windows.UI.Xaml.UIElement* element);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.XamlControlsResources)]
                [experimental]
                [uuid(C330B932-25BC-5DA1-B73A-61BEBD402861)]
                interface IXamlControlsResourcesStatics2 : IInspectable
                {
                    [propget] HRESULT UseCompactResourcesProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT VersionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 2.0)]
                [exclusiveto(Microsoft.UI.Xaml.Controls.XamlControlsResources)]
                [uuid(50356110-0B91-52EE-984E-562AFF981962)]
                interface IXamlControlsResourcesStatics3 : IInspectable
                {
                    [propget] HRESULT ControlsResourcesVersionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [composable(Microsoft.UI.Xaml.Controls.IAnimatedIconFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IAnimatedIconStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass AnimatedIcon : Windows.UI.Xaml.Controls.IconElement
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IAnimatedIcon;
                }

                [composable(Microsoft.UI.Xaml.Controls.IAnimatedIconSourceFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IAnimatedIconSourceStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass AnimatedIconSource : Microsoft.UI.Xaml.Controls.IconSource
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IAnimatedIconSource;
                }

                [composable(Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass AnimatedVisualPlayer : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer;
                }

                [composable(Microsoft.UI.Xaml.Controls.IBackdropMaterialFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IBackdropMaterialStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass BackdropMaterial : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IBackdropMaterial;
                }

                [composable(Microsoft.UI.Xaml.Controls.IBitmapIconSourceFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IBitmapIconSourceStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass BitmapIconSource : Microsoft.UI.Xaml.Controls.IconSource
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IBitmapIconSource;
                }

                [composable(Microsoft.UI.Xaml.Controls.IBreadcrumbBarFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IBreadcrumbBarStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass BreadcrumbBar : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IBreadcrumbBar;
                }

                [composable(Microsoft.UI.Xaml.Controls.IBreadcrumbBarItemFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass BreadcrumbBarItem : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IBreadcrumbBarItem;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass BreadcrumbBarItemClickedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IBreadcrumbBarItemClickedEventArgs;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass ColorChangedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IColorChangedEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.IColorPickerFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IColorPickerStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [static(Microsoft.UI.Xaml.Controls.IColorPickerStatics2, Microsoft.UI.Xaml.XamlContract, 2.0)]
                [threading(both)]
                runtimeclass ColorPicker : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IColorPicker;
                    [contract(Microsoft.UI.Xaml.XamlContract, 2.0)] interface Microsoft.UI.Xaml.Controls.IColorPicker2;
                }

                [composable(Microsoft.UI.Xaml.Controls.ICommandBarFlyoutFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass CommandBarFlyout : Windows.UI.Xaml.Controls.Primitives.FlyoutBase
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ICommandBarFlyout;
                    [contract(Microsoft.UI.Xaml.XamlContract, 2.0)] interface Microsoft.UI.Xaml.Controls.ICommandBarFlyout2;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                runtimeclass CoreWebView2InitializedEventArgs
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.ICoreWebView2InitializedEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.IDropDownButtonFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass DropDownButton : Windows.UI.Xaml.Controls.Button
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IDropDownButton;
                }

                [composable(Microsoft.UI.Xaml.Controls.IElementAnimatorFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ElementAnimator
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.IElementAnimator;
                    [experimental] [protected] interface Microsoft.UI.Xaml.Controls.IElementAnimatorProtected;
                    [experimental] [overridable] interface Microsoft.UI.Xaml.Controls.IElementAnimatorOverrides;
                }

                [composable(Microsoft.UI.Xaml.Controls.IElementFactoryFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ElementFactory : Windows.UI.Xaml.DependencyObject
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.IElementFactory;
                    [experimental] [overridable] interface Microsoft.UI.Xaml.Controls.IElementFactoryOverrides;
                    [experimental] interface Microsoft.UI.Xaml.Controls.IElementFactoryShim;
                }

                [activatable(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ElementFactoryGetArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IElementFactoryGetArgs;
                }

                [activatable(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ElementFactoryRecycleArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IElementFactoryRecycleArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.IExpanderFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IExpanderStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass Expander : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IExpander;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass ExpanderCollapsedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IExpanderCollapsedEventArgs;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass ExpanderExpandingEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IExpanderExpandingEventArgs;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ExpanderTemplateSettings : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IExpanderTemplateSettings;
                }

                [composable(Microsoft.UI.Xaml.Controls.IFlowLayoutFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IFlowLayoutStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass FlowLayout : Microsoft.UI.Xaml.Controls.VirtualizingLayout
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.IFlowLayout;
                    [experimental] [overridable] interface Microsoft.UI.Xaml.Controls.IFlowLayoutOverrides;
                }

                [composable(Microsoft.UI.Xaml.Controls.IFlowLayoutStateFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass FlowLayoutState
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.IFlowLayoutState;
                }

                [composable(Microsoft.UI.Xaml.Controls.IFontIconSourceFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IFontIconSourceStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass FontIconSource : Microsoft.UI.Xaml.Controls.IconSource
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IFontIconSource;
                }

                [composable(Microsoft.UI.Xaml.Controls.IIconSourceFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IIconSourceStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass IconSource : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IIconSource;
                }

                [composable(Microsoft.UI.Xaml.Controls.IImageIconFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IImageIconStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass ImageIcon : Windows.UI.Xaml.Controls.IconElement
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IImageIcon;
                }

                [composable(Microsoft.UI.Xaml.Controls.IImageIconSourceFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IImageIconSourceStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass ImageIconSource : Microsoft.UI.Xaml.Controls.IconSource
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IImageIconSource;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IIndexPathStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass IndexPath
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.IIndexPath;
                    interface Windows.Foundation.IStringable;
                }

                [composable(Microsoft.UI.Xaml.Controls.IInfoBadgeFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IInfoBadgeStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass InfoBadge : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IInfoBadge;
                }

                [composable(Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettingsFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettingsStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass InfoBadgeTemplateSettings : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettings;
                }

                [composable(Microsoft.UI.Xaml.Controls.IInfoBarFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IInfoBarStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass InfoBar : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IInfoBar;
                }

                [composable(Microsoft.UI.Xaml.Controls.IInfoBarClosedEventArgsFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass InfoBarClosedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IInfoBarClosedEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.IInfoBarClosingEventArgsFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass InfoBarClosingEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IInfoBarClosingEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.IInfoBarTemplateSettingsFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IInfoBarTemplateSettingsStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass InfoBarTemplateSettings : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IInfoBarTemplateSettings;
                }

                [composable(Microsoft.UI.Xaml.Controls.IItemsRepeaterFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IItemsRepeaterStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [static(Microsoft.UI.Xaml.Controls.IItemsRepeaterStatics2, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass ItemsRepeater : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IItemsRepeater;
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)] [experimental] interface Microsoft.UI.Xaml.Controls.IItemsRepeater2;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass ItemsRepeaterElementClearingEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IItemsRepeaterElementClearingEventArgs;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass ItemsRepeaterElementIndexChangedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IItemsRepeaterElementIndexChangedEventArgs;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass ItemsRepeaterElementPreparedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IItemsRepeaterElementPreparedEventArgs;
                }

                [activatable(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ItemsRepeaterScrollHost : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IItemsRepeaterScrollHost;
                }

                [composable(Microsoft.UI.Xaml.Controls.IItemsSourceViewFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ItemsSourceView
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IItemsSourceView;
                    interface Windows.UI.Xaml.Interop.INotifyCollectionChanged;
                }

                [composable(Microsoft.UI.Xaml.Controls.ILayoutFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass Layout : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ILayout;
                    [protected] interface Microsoft.UI.Xaml.Controls.ILayoutProtected;
                }

                [composable(Microsoft.UI.Xaml.Controls.ILayoutContextFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass LayoutContext : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ILayoutContext;
                    [overridable] interface Microsoft.UI.Xaml.Controls.ILayoutContextOverrides;
                }

                [composable(Microsoft.UI.Xaml.Controls.ILayoutPanelFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.ILayoutPanelStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass LayoutPanel : Windows.UI.Xaml.Controls.Panel
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.ILayoutPanel;
                }

                [composable(Microsoft.UI.Xaml.Controls.IMenuBarFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IMenuBarStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass MenuBar : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IMenuBar;
                }

                [composable(Microsoft.UI.Xaml.Controls.IMenuBarItemFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IMenuBarItemStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass MenuBarItem : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IMenuBarItem;
                }

                [composable(Microsoft.UI.Xaml.Controls.IMenuBarItemFlyoutFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass MenuBarItemFlyout : Windows.UI.Xaml.Controls.MenuFlyout
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IMenuBarItemFlyout;
                }

                [composable(Microsoft.UI.Xaml.Controls.INavigationViewFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.INavigationViewStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [static(Microsoft.UI.Xaml.Controls.INavigationViewStatics2, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass NavigationView : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INavigationView;
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)] interface Microsoft.UI.Xaml.Controls.INavigationView2;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass NavigationViewBackRequestedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INavigationViewBackRequestedEventArgs;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass NavigationViewDisplayModeChangedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INavigationViewDisplayModeChangedEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.INavigationViewItemFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.INavigationViewItemStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [static(Microsoft.UI.Xaml.Controls.INavigationViewItemStatics2, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [static(Microsoft.UI.Xaml.Controls.INavigationViewItemStatics3, Microsoft.UI.Xaml.XamlContract, 2.0)]
                [threading(both)]
                runtimeclass NavigationViewItem : Microsoft.UI.Xaml.Controls.NavigationViewItemBase
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INavigationViewItem;
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)] interface Microsoft.UI.Xaml.Controls.INavigationViewItem2;
                    [contract(Microsoft.UI.Xaml.XamlContract, 2.0)] interface Microsoft.UI.Xaml.Controls.INavigationViewItem3;
                }

                [composable(Microsoft.UI.Xaml.Controls.INavigationViewItemBaseFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.INavigationViewItemBaseStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass NavigationViewItemBase : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INavigationViewItemBase;
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)] interface Microsoft.UI.Xaml.Controls.INavigationViewItemBase2;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass NavigationViewItemCollapsedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INavigationViewItemCollapsedEventArgs;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass NavigationViewItemExpandingEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INavigationViewItemExpandingEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.INavigationViewItemHeaderFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass NavigationViewItemHeader : Microsoft.UI.Xaml.Controls.NavigationViewItemBase
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INavigationViewItemHeader;
                }

                [activatable(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass NavigationViewItemInvokedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INavigationViewItemInvokedEventArgs;
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)] interface Microsoft.UI.Xaml.Controls.INavigationViewItemInvokedEventArgs2;
                }

                [composable(Microsoft.UI.Xaml.Controls.INavigationViewItemSeparatorFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass NavigationViewItemSeparator : Microsoft.UI.Xaml.Controls.NavigationViewItemBase
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INavigationViewItemSeparator;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass NavigationViewPaneClosingEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INavigationViewPaneClosingEventArgs;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass NavigationViewSelectionChangedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INavigationViewSelectionChangedEventArgs;
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)] interface Microsoft.UI.Xaml.Controls.INavigationViewSelectionChangedEventArgs2;
                }

                [composable(Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [static(Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics2, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass NavigationViewTemplateSettings : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettings;
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)] [experimental] interface Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettings2;
                }

                [composable(Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass NonVirtualizingLayout : Microsoft.UI.Xaml.Controls.Layout
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INonVirtualizingLayout;
                    [overridable] interface Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutOverrides;
                }

                [composable(Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutContextFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass NonVirtualizingLayoutContext : Microsoft.UI.Xaml.Controls.LayoutContext
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutContext;
                    [overridable] interface Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutContextOverrides;
                }

                [composable(Microsoft.UI.Xaml.Controls.INumberBoxFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.INumberBoxStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [static(Microsoft.UI.Xaml.Controls.INumberBoxStatics2, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass NumberBox : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INumberBox;
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)] [experimental] interface Microsoft.UI.Xaml.Controls.INumberBox2;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass NumberBoxValueChangedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.INumberBoxValueChangedEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.IPagerControlFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IPagerControlStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass PagerControl : Windows.UI.Xaml.Controls.Control
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.IPagerControl;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                runtimeclass PagerControlSelectedIndexChangedEventArgs
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.IPagerControlSelectedIndexChangedEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.IPagerControlTemplateSettingsFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass PagerControlTemplateSettings : Windows.UI.Xaml.DependencyObject
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.IPagerControlTemplateSettings;
                }

                [composable(Microsoft.UI.Xaml.Controls.IParallaxViewFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IParallaxViewStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass ParallaxView : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IParallaxView;
                }

                [composable(Microsoft.UI.Xaml.Controls.IPathIconSourceFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IPathIconSourceStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass PathIconSource : Microsoft.UI.Xaml.Controls.IconSource
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IPathIconSource;
                }

                [composable(Microsoft.UI.Xaml.Controls.IPersonPictureFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IPersonPictureStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass PersonPicture : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IPersonPicture;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass PersonPictureTemplateSettings : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IPersonPictureTemplateSettings;
                }

                [composable(Microsoft.UI.Xaml.Controls.IPipsPagerFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IPipsPagerStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass PipsPager : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IPipsPager;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass PipsPagerSelectedIndexChangedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IPipsPagerSelectedIndexChangedEventArgs;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass PipsPagerTemplateSettings : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IPipsPagerTemplateSettings;
                }

                [composable(Microsoft.UI.Xaml.Controls.IProgressBarFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IProgressBarStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass ProgressBar : Windows.UI.Xaml.Controls.Primitives.RangeBase
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IProgressBar;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ProgressBarTemplateSettings : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IProgressBarTemplateSettings;
                }

                [composable(Microsoft.UI.Xaml.Controls.IProgressRingFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IProgressRingStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [static(Microsoft.UI.Xaml.Controls.IProgressRingStatics2, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass ProgressRing : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IProgressRing;
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)] [experimental] interface Microsoft.UI.Xaml.Controls.IProgressRing2;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ProgressRingTemplateSettings : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IProgressRingTemplateSettings;
                }

                [composable(Microsoft.UI.Xaml.Controls.IRadioButtonsFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IRadioButtonsStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass RadioButtons : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IRadioButtons;
                }

                [composable(Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [static(Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemStatics2, Microsoft.UI.Xaml.XamlContract, 2.0)]
                [threading(both)]
                runtimeclass RadioMenuFlyoutItem : Windows.UI.Xaml.Controls.MenuFlyoutItem
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItem;
                }

                [composable(Microsoft.UI.Xaml.Controls.IRatingControlFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IRatingControlStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass RatingControl : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IRatingControl;
                }

                [composable(Microsoft.UI.Xaml.Controls.IRatingItemFontInfoFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IRatingItemFontInfoStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass RatingItemFontInfo : Microsoft.UI.Xaml.Controls.RatingItemInfo
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IRatingItemFontInfo;
                }

                [composable(Microsoft.UI.Xaml.Controls.IRatingItemImageInfoFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IRatingItemImageInfoStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass RatingItemImageInfo : Microsoft.UI.Xaml.Controls.RatingItemInfo
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IRatingItemImageInfo;
                }

                [composable(Microsoft.UI.Xaml.Controls.IRatingItemInfoFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass RatingItemInfo : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IRatingItemInfo;
                }

                [composable(Microsoft.UI.Xaml.Controls.IRecyclePoolFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IRecyclePoolStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass RecyclePool
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.IRecyclePool;
                    [experimental] [overridable] interface Microsoft.UI.Xaml.Controls.IRecyclePoolOverrides;
                }

                [composable(Microsoft.UI.Xaml.Controls.IRecyclingElementFactoryFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass RecyclingElementFactory : Microsoft.UI.Xaml.Controls.ElementFactory
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.IRecyclingElementFactory;
                    [experimental] [overridable] interface Microsoft.UI.Xaml.Controls.IRecyclingElementFactoryOverrides;
                }

                [composable(Microsoft.UI.Xaml.Controls.IRefreshContainerFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IRefreshContainerStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass RefreshContainer : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IRefreshContainer;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass RefreshInteractionRatioChangedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IRefreshInteractionRatioChangedEventArgs;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass RefreshRequestedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IRefreshRequestedEventArgs;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass RefreshStateChangedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IRefreshStateChangedEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.IRefreshVisualizerFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IRefreshVisualizerStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass RefreshVisualizer : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IRefreshVisualizer;
                }

                [composable(Microsoft.UI.Xaml.Controls.IRevealListViewItemPresenterFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass RevealListViewItemPresenter : Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IRevealListViewItemPresenter;
                }

                [composable(Microsoft.UI.Xaml.Controls.IScrollViewFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IScrollViewStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass ScrollView : Windows.UI.Xaml.Controls.Control
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.IScrollView;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                runtimeclass ScrollingAnchorRequestedEventArgs
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.IScrollingAnchorRequestedEventArgs;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                runtimeclass ScrollingBringingIntoViewEventArgs
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.IScrollingBringingIntoViewEventArgs;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                runtimeclass ScrollingScrollAnimationStartingEventArgs
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.IScrollingScrollAnimationStartingEventArgs;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                runtimeclass ScrollingScrollCompletedEventArgs
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.IScrollingScrollCompletedEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.IScrollingScrollOptionsFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ScrollingScrollOptions
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.IScrollingScrollOptions;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                runtimeclass ScrollingZoomAnimationStartingEventArgs
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.IScrollingZoomAnimationStartingEventArgs;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                runtimeclass ScrollingZoomCompletedEventArgs
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.IScrollingZoomCompletedEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.IScrollingZoomOptionsFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ScrollingZoomOptions
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.IScrollingZoomOptions;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                runtimeclass SelectTemplateEventArgs
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.ISelectTemplateEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.ISelectionModelFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass SelectionModel
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.ISelectionModel;
                    [experimental] [protected] interface Microsoft.UI.Xaml.Controls.ISelectionModelProtected;
                    interface Windows.UI.Xaml.Data.INotifyPropertyChanged;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                runtimeclass SelectionModelChildrenRequestedEventArgs
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.ISelectionModelChildrenRequestedEventArgs;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                runtimeclass SelectionModelSelectionChangedEventArgs
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.ISelectionModelSelectionChangedEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.ISplitButtonFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.ISplitButtonStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass SplitButton : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ISplitButton;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass SplitButtonClickEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ISplitButtonClickEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.IStackLayoutFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IStackLayoutStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [static(Microsoft.UI.Xaml.Controls.IStackLayoutStatics2, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass StackLayout : Microsoft.UI.Xaml.Controls.VirtualizingLayout
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IStackLayout;
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)] [experimental] interface Microsoft.UI.Xaml.Controls.IStackLayout2;
                }

                [composable(Microsoft.UI.Xaml.Controls.IStackLayoutStateFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass StackLayoutState
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.IStackLayoutState;
                }

                [composable(Microsoft.UI.Xaml.Controls.ISwipeControlFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.ISwipeControlStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass SwipeControl : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ISwipeControl;
                }

                [composable(Microsoft.UI.Xaml.Controls.ISwipeItemFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.ISwipeItemStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass SwipeItem : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ISwipeItem;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass SwipeItemInvokedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ISwipeItemInvokedEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.ISwipeItemsFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.ISwipeItemsStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass SwipeItems : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ISwipeItems;
                    interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.SwipeItem*>;
                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Controls.SwipeItem*>;
                }

                [composable(Microsoft.UI.Xaml.Controls.ISymbolIconSourceFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.ISymbolIconSourceStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass SymbolIconSource : Microsoft.UI.Xaml.Controls.IconSource
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ISymbolIconSource;
                }

                [composable(Microsoft.UI.Xaml.Controls.ITabViewFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.ITabViewStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass TabView : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITabView;
                }

                [composable(Microsoft.UI.Xaml.Controls.ITabViewItemFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.ITabViewItemStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass TabViewItem : Windows.UI.Xaml.Controls.ListViewItem
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITabViewItem;
                }

                [composable(Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettingsFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettingsStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass TabViewItemTemplateSettings : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettings;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass TabViewTabCloseRequestedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITabViewTabCloseRequestedEventArgs;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass TabViewTabDragCompletedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITabViewTabDragCompletedEventArgs;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass TabViewTabDragStartingEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITabViewTabDragStartingEventArgs;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass TabViewTabDroppedOutsideEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITabViewTabDroppedOutsideEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.ITeachingTipFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.ITeachingTipStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass TeachingTip : Windows.UI.Xaml.Controls.ContentControl
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITeachingTip;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass TeachingTipClosedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITeachingTipClosedEventArgs;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass TeachingTipClosingEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITeachingTipClosingEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettingsFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettingsStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass TeachingTipTemplateSettings : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettings;
                }

                [composable(Microsoft.UI.Xaml.Controls.ITextCommandBarFlyoutFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass TextCommandBarFlyout : Microsoft.UI.Xaml.Controls.CommandBarFlyout
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITextCommandBarFlyout;
                }

                [composable(Microsoft.UI.Xaml.Controls.IToggleSplitButtonFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IToggleSplitButtonStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass ToggleSplitButton : Microsoft.UI.Xaml.Controls.SplitButton
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IToggleSplitButton;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass ToggleSplitButtonIsCheckedChangedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IToggleSplitButtonIsCheckedChangedEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.ITreeViewFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.ITreeViewStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [static(Microsoft.UI.Xaml.Controls.ITreeViewStatics2, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass TreeView : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITreeView;
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)] interface Microsoft.UI.Xaml.Controls.ITreeView2;
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)] [experimental] interface Microsoft.UI.Xaml.Controls.ITreeView3;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass TreeViewCollapsedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITreeViewCollapsedEventArgs;
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)] interface Microsoft.UI.Xaml.Controls.ITreeViewCollapsedEventArgs2;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass TreeViewDragItemsCompletedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITreeViewDragItemsCompletedEventArgs;
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)] interface Microsoft.UI.Xaml.Controls.ITreeViewDragItemsCompletedEventArgs2;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass TreeViewDragItemsStartingEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITreeViewDragItemsStartingEventArgs;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass TreeViewExpandingEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITreeViewExpandingEventArgs;
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)] interface Microsoft.UI.Xaml.Controls.ITreeViewExpandingEventArgs2;
                }

                [composable(Microsoft.UI.Xaml.Controls.ITreeViewItemFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.ITreeViewItemStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [static(Microsoft.UI.Xaml.Controls.ITreeViewItemStatics2, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass TreeViewItem : Windows.UI.Xaml.Controls.ListViewItem
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITreeViewItem;
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)] interface Microsoft.UI.Xaml.Controls.ITreeViewItem2;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass TreeViewItemInvokedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITreeViewItemInvokedEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettingsFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettingsStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass TreeViewItemTemplateSettings : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettings;
                }

                [composable(Microsoft.UI.Xaml.Controls.ITreeViewListFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass TreeViewList : Windows.UI.Xaml.Controls.ListView
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITreeViewList;
                }

                [composable(Microsoft.UI.Xaml.Controls.ITreeViewNodeFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.ITreeViewNodeStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass TreeViewNode : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITreeViewNode;
                }

                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                runtimeclass TreeViewSelectionChangedEventArgs
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.ITreeViewSelectionChangedEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Controls.ITwoPaneViewFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.ITwoPaneViewStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass TwoPaneView : Windows.UI.Xaml.Controls.Control
                {
                    [default] interface Microsoft.UI.Xaml.Controls.ITwoPaneView;
                }

                [composable(Microsoft.UI.Xaml.Controls.IUniformGridLayoutFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IUniformGridLayoutStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass UniformGridLayout : Microsoft.UI.Xaml.Controls.VirtualizingLayout
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IUniformGridLayout;
                }

                [composable(Microsoft.UI.Xaml.Controls.IUniformGridLayoutStateFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass UniformGridLayoutState
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.IUniformGridLayoutState;
                }

                [composable(Microsoft.UI.Xaml.Controls.IVirtualizingLayoutFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass VirtualizingLayout : Microsoft.UI.Xaml.Controls.Layout
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IVirtualizingLayout;
                    [overridable] interface Microsoft.UI.Xaml.Controls.IVirtualizingLayoutOverrides;
                }

                [composable(Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass VirtualizingLayoutContext : Microsoft.UI.Xaml.Controls.LayoutContext
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContext;
                    [overridable] interface Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextOverrides;
                }

                [composable(Microsoft.UI.Xaml.Controls.IWebView2Factory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IWebView2Statics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [threading(both)]
                runtimeclass WebView2 : Windows.UI.Xaml.Controls.Control
                {
                    [default] [experimental] interface Microsoft.UI.Xaml.Controls.IWebView2;
                }

                [activatable(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Controls.IXamlControlsResourcesStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [static(Microsoft.UI.Xaml.Controls.IXamlControlsResourcesStatics2, Microsoft.UI.Xaml.XamlContract, 1.0)]
                [static(Microsoft.UI.Xaml.Controls.IXamlControlsResourcesStatics3, Microsoft.UI.Xaml.XamlContract, 2.0)]
                [threading(both)]
                runtimeclass XamlControlsResources : Windows.UI.Xaml.ResourceDictionary
                {
                    [default] interface Microsoft.UI.Xaml.Controls.IXamlControlsResources;
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)] [experimental] interface Microsoft.UI.Xaml.Controls.IXamlControlsResources2;
                    [contract(Microsoft.UI.Xaml.XamlContract, 2.0)] interface Microsoft.UI.Xaml.Controls.IXamlControlsResources3;
                }
            }
        }
    }
}
