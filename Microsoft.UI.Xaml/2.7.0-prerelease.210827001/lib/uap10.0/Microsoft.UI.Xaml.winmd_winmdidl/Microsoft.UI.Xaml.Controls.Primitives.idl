//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Microsoft.UI.Xaml.idl";
import "Microsoft.UI.Xaml.Controls.idl";
import "Windows.Foundation.Numerics.idl";
import "Windows.UI.idl";
import "Windows.UI.Composition.idl";
import "Windows.UI.Input.idl";
import "Windows.UI.Xaml.idl";
import "Windows.UI.Xaml.Automation.Peers.idl";
import "Windows.UI.Xaml.Controls.idl";
import "Windows.UI.Xaml.Data.idl";
import "Windows.UI.Xaml.Media.idl";

// Forward Declare
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                runtimeclass ColorChangedEventArgs;

                typedef enum ColorPickerHsvChannel ColorPickerHsvChannel;

                typedef enum ColorSpectrumComponents ColorSpectrumComponents;

                typedef enum ColorSpectrumShape ColorSpectrumShape;

                runtimeclass InfoBadge;

                runtimeclass ScrollingAnchorRequestedEventArgs;

                runtimeclass ScrollingBringingIntoViewEventArgs;

                typedef enum ScrollingChainMode ScrollingChainMode;

                typedef enum ScrollingContentOrientation ScrollingContentOrientation;

                typedef enum ScrollingInputKinds ScrollingInputKinds;

                typedef enum ScrollingInteractionState ScrollingInteractionState;

                typedef enum ScrollingRailMode ScrollingRailMode;

                runtimeclass ScrollingScrollAnimationStartingEventArgs;

                runtimeclass ScrollingScrollCompletedEventArgs;

                typedef enum ScrollingScrollMode ScrollingScrollMode;

                runtimeclass ScrollingScrollOptions;

                runtimeclass ScrollingZoomAnimationStartingEventArgs;

                runtimeclass ScrollingZoomCompletedEventArgs;

                typedef enum ScrollingZoomMode ScrollingZoomMode;

                runtimeclass ScrollingZoomOptions;
            }
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            apicontract XamlContract;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                namespace Primitives
                {
                    typedef enum CornerRadiusFilterKind CornerRadiusFilterKind;

                    typedef enum CornerRadiusToThicknessConverterKind CornerRadiusToThicknessConverterKind;

                    typedef enum PopupPlacementMode PopupPlacementMode;

                    typedef enum ScrollSnapPointsAlignment ScrollSnapPointsAlignment;

                    interface IAutoSuggestBoxHelper;

                    interface IAutoSuggestBoxHelperStatics;

                    interface IAutomationPropertiesStatics9;

                    interface IColorPickerSlider;

                    interface IColorPickerSliderFactory;

                    interface IColorPickerSliderStatics;

                    interface IColorSpectrum;

                    interface IColorSpectrumFactory;

                    interface IColorSpectrumStatics;

                    interface IColumnMajorUniformToLargestGridLayout;

                    interface IColumnMajorUniformToLargestGridLayoutFactory;

                    interface IColumnMajorUniformToLargestGridLayoutStatics;

                    interface IComboBoxHelper;

                    interface IComboBoxHelperStatics;

                    interface ICommandBarFlyoutCommandBar;

                    interface ICommandBarFlyoutCommandBarAutomationPropertiesStatics;

                    interface ICommandBarFlyoutCommandBarFactory;

                    interface ICommandBarFlyoutCommandBarTemplateSettings;

                    interface ICornerRadiusFilterConverter;

                    interface ICornerRadiusFilterConverterStatics;

                    interface ICornerRadiusToThicknessConverter;

                    interface ICornerRadiusToThicknessConverterStatics;

                    interface IInfoBarPanel;

                    interface IInfoBarPanelFactory;

                    interface IInfoBarPanelStatics;

                    interface IMonochromaticOverlayPresenter;

                    interface IMonochromaticOverlayPresenterFactory;

                    interface IMonochromaticOverlayPresenterStatics;

                    interface INavigationViewItemPresenter;

                    interface INavigationViewItemPresenter2;

                    interface INavigationViewItemPresenterFactory;

                    interface INavigationViewItemPresenterStatics;

                    interface INavigationViewItemPresenterStatics2;

                    interface INavigationViewItemPresenterTemplateSettings;

                    interface INavigationViewItemPresenterTemplateSettingsFactory;

                    interface INavigationViewItemPresenterTemplateSettingsStatics;

                    interface IPopup4;

                    interface IRepeatedScrollSnapPoint;

                    interface IRepeatedScrollSnapPointFactory;

                    interface IRepeatedZoomSnapPoint;

                    interface IRepeatedZoomSnapPointFactory;

                    interface IScrollController;

                    interface IScrollControllerAddScrollVelocityRequestedEventArgs;

                    interface IScrollControllerAddScrollVelocityRequestedEventArgsFactory;

                    interface IScrollControllerInteractionRequestedEventArgs;

                    interface IScrollControllerInteractionRequestedEventArgsFactory;

                    interface IScrollControllerScrollByRequestedEventArgs;

                    interface IScrollControllerScrollByRequestedEventArgsFactory;

                    interface IScrollControllerScrollToRequestedEventArgs;

                    interface IScrollControllerScrollToRequestedEventArgsFactory;

                    interface IScrollPresenter;

                    interface IScrollPresenterFactory;

                    interface IScrollPresenterStatics;

                    interface IScrollSnapPoint;

                    interface IScrollSnapPointBase;

                    interface IScrollSnapPointBaseFactory;

                    interface IScrollSnapPointFactory;

                    interface ISnapPointBase;

                    interface ISnapPointBaseFactory;

                    interface ITabViewListView;

                    interface ITabViewListViewFactory;

                    interface IZoomSnapPoint;

                    interface IZoomSnapPointBase;

                    interface IZoomSnapPointBaseFactory;

                    interface IZoomSnapPointFactory;

                    runtimeclass AutoSuggestBoxHelper;

                    runtimeclass ColorPickerSlider;

                    runtimeclass ColorSpectrum;

                    runtimeclass ColumnMajorUniformToLargestGridLayout;

                    runtimeclass ComboBoxHelper;

                    runtimeclass CommandBarFlyoutCommandBar;

                    runtimeclass CommandBarFlyoutCommandBarAutomationProperties;

                    runtimeclass CommandBarFlyoutCommandBarTemplateSettings;

                    runtimeclass CornerRadiusFilterConverter;

                    runtimeclass CornerRadiusToThicknessConverter;

                    runtimeclass InfoBarPanel;

                    runtimeclass MonochromaticOverlayPresenter;

                    runtimeclass NavigationViewItemPresenter;

                    runtimeclass NavigationViewItemPresenterTemplateSettings;

                    runtimeclass RepeatedScrollSnapPoint;

                    runtimeclass RepeatedZoomSnapPoint;

                    runtimeclass ScrollControllerAddScrollVelocityRequestedEventArgs;

                    runtimeclass ScrollControllerInteractionRequestedEventArgs;

                    runtimeclass ScrollControllerScrollByRequestedEventArgs;

                    runtimeclass ScrollControllerScrollToRequestedEventArgs;

                    runtimeclass ScrollPresenter;

                    runtimeclass ScrollSnapPoint;

                    runtimeclass ScrollSnapPointBase;

                    runtimeclass SnapPointBase;

                    runtimeclass TabViewListView;

                    runtimeclass ZoomSnapPoint;

                    runtimeclass ZoomSnapPointBase;
                }
            }
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                namespace Primitives
                {
                    declare
                    {
                        interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointBase*>;

                        interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPointBase*>;

                        interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointBase*>;

                        interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPointBase*>;

                        interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointBase*>;

                        interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPointBase*>;

                        interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointBase*>;

                        interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPointBase*>;

                        interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, IInspectable*>;

                        interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerAddScrollVelocityRequestedEventArgs*>;

                        interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerInteractionRequestedEventArgs*>;

                        interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs*>;

                        interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs*>;

                        interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter*, IInspectable*>;
                    }
                }
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                namespace Primitives
                {
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    enum CornerRadiusFilterKind
                    {
                        None             = 0,
                        Top              = 1,
                        Right            = 2,
                        Bottom           = 3,
                        Left             = 4,
                        TopLeftValue     = 5,
                        BottomRightValue = 6
                    };

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    enum CornerRadiusToThicknessConverterKind
                    {
                        FilterTopAndBottomFromLeft   = 0,
                        FilterTopAndBottomFromRight  = 1,
                        FilterLeftAndRightFromTop    = 2,
                        FilterLeftAndRightFromBottom = 3,
                        FilterTopFromTopLeft         = 4,
                        FilterTopFromTopRight        = 5,
                        FilterRightFromTopRight      = 6,
                        FilterRightFromBottomRight   = 7,
                        FilterBottomFromBottomRight  = 8,
                        FilterBottomFromBottomLeft   = 9,
                        FilterLeftFromBottomLeft     = 10,
                        FilterLeftFromTopLeft        = 11
                    };

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    enum PopupPlacementMode
                    {
                        Auto                   = 0,
                        Top                    = 1,
                        Bottom                 = 2,
                        Left                   = 3,
                        Right                  = 4,
                        TopEdgeAlignedLeft     = 5,
                        TopEdgeAlignedRight    = 6,
                        BottomEdgeAlignedLeft  = 7,
                        BottomEdgeAlignedRight = 8,
                        LeftEdgeAlignedTop     = 9,
                        LeftEdgeAlignedBottom  = 10,
                        RightEdgeAlignedTop    = 11,
                        RightEdgeAlignedBottom = 12
                    };

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [experimental]
                    enum ScrollSnapPointsAlignment
                    {
                        Near   = 0,
                        Center = 1,
                        Far    = 2
                    };

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.AutoSuggestBoxHelper)]
                    [uuid(1E56736C-8248-57D9-AC04-E4E7DCC3F9E1)]
                    interface IAutoSuggestBoxHelper : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.AutoSuggestBoxHelper)]
                    [uuid(1FD01B5A-71AB-5D3A-93E7-141BFD6EDF6A)]
                    interface IAutoSuggestBoxHelperStatics : IInspectable
                    {
                        [propget] HRESULT KeepInteriorCornersSquareProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        HRESULT SetKeepInteriorCornersSquare([in] Windows.UI.Xaml.Controls.AutoSuggestBox* autoSuggestBox, [in] boolean value);
                        HRESULT GetKeepInteriorCornersSquare([in] Windows.UI.Xaml.Controls.AutoSuggestBox* autoSuggestBox, [out] [retval] boolean* result);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [experimental]
                    [uuid(98FFD442-A3F5-534C-906D-88B72A78126B)]
                    interface IAutomationPropertiesStatics9 : IInspectable
                    {
                        [propget] HRESULT ControlTypeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        HRESULT GetControlType([in] Windows.UI.Xaml.UIElement* element, [out] [retval] Windows.UI.Xaml.Automation.Peers.AutomationControlType* result);
                        HRESULT SetControlType([in] Windows.UI.Xaml.UIElement* element, [in] Windows.UI.Xaml.Automation.Peers.AutomationControlType value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider)]
                    [uuid(456231BB-5A4C-564B-9B3D-2F157061A0F8)]
                    interface IColorPickerSlider : IInspectable
                    {
                        [propget] HRESULT ColorChannel([out] [retval] Microsoft.UI.Xaml.Controls.ColorPickerHsvChannel* value);
                        [propput] HRESULT ColorChannel([in] Microsoft.UI.Xaml.Controls.ColorPickerHsvChannel value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider)]
                    [uuid(D0CB1F0E-0771-5C7D-BA14-AA431179B2AC)]
                    interface IColorPickerSliderFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider)]
                    [uuid(9792B197-C864-59F3-9FA0-E21C7FD46B79)]
                    interface IColorPickerSliderStatics : IInspectable
                    {
                        [propget] HRESULT ColorChannelProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum)]
                    [uuid(75305916-882D-5667-BFD0-0AF72D502D72)]
                    interface IColorSpectrum : IInspectable
                    {
                        [propget] HRESULT Color([out] [retval] Windows.UI.Color* value);
                        [propput] HRESULT Color([in] Windows.UI.Color value);
                        [propget] HRESULT HsvColor([out] [retval] Windows.Foundation.Numerics.Vector4* value);
                        [propput] HRESULT HsvColor([in] Windows.Foundation.Numerics.Vector4 value);
                        [propget] HRESULT MinHue([out] [retval] INT32* value);
                        [propput] HRESULT MinHue([in] INT32 value);
                        [propget] HRESULT MaxHue([out] [retval] INT32* value);
                        [propput] HRESULT MaxHue([in] INT32 value);
                        [propget] HRESULT MinSaturation([out] [retval] INT32* value);
                        [propput] HRESULT MinSaturation([in] INT32 value);
                        [propget] HRESULT MaxSaturation([out] [retval] INT32* value);
                        [propput] HRESULT MaxSaturation([in] INT32 value);
                        [propget] HRESULT MinValue([out] [retval] INT32* value);
                        [propput] HRESULT MinValue([in] INT32 value);
                        [propget] HRESULT MaxValue([out] [retval] INT32* value);
                        [propput] HRESULT MaxValue([in] INT32 value);
                        [propget] HRESULT Shape([out] [retval] Microsoft.UI.Xaml.Controls.ColorSpectrumShape* value);
                        [propput] HRESULT Shape([in] Microsoft.UI.Xaml.Controls.ColorSpectrumShape value);
                        [propget] HRESULT Components([out] [retval] Microsoft.UI.Xaml.Controls.ColorSpectrumComponents* value);
                        [propput] HRESULT Components([in] Microsoft.UI.Xaml.Controls.ColorSpectrumComponents value);
                        [eventadd] HRESULT ColorChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum*, Microsoft.UI.Xaml.Controls.ColorChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT ColorChanged([in] EventRegistrationToken token);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum)]
                    [uuid(EFECD442-8C2A-50A6-88A3-3999EA01F096)]
                    interface IColorSpectrumFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum)]
                    [uuid(AA1D251D-9E7B-5767-ADB9-FCD36855D82E)]
                    interface IColorSpectrumStatics : IInspectable
                    {
                        [propget] HRESULT ColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT HsvColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT MinHueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT MaxHueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT MinSaturationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT MaxSaturationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT MinValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT MaxValueProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ShapeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ComponentsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ColumnMajorUniformToLargestGridLayout)]
                    [uuid(EE10A6AA-EFEB-51AC-B791-71913AE8C235)]
                    interface IColumnMajorUniformToLargestGridLayout : IInspectable
                    {
                        [propget] HRESULT MaxColumns([out] [retval] INT32* value);
                        [propput] HRESULT MaxColumns([in] INT32 value);
                        [propget] HRESULT ColumnSpacing([out] [retval] DOUBLE* value);
                        [propput] HRESULT ColumnSpacing([in] DOUBLE value);
                        [propget] HRESULT RowSpacing([out] [retval] DOUBLE* value);
                        [propput] HRESULT RowSpacing([in] DOUBLE value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ColumnMajorUniformToLargestGridLayout)]
                    [uuid(2F21AF59-1585-5325-8412-2B83BF05D345)]
                    interface IColumnMajorUniformToLargestGridLayoutFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ColumnMajorUniformToLargestGridLayout** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ColumnMajorUniformToLargestGridLayout)]
                    [uuid(29A1AC22-EE31-501F-94F8-A00D338F100A)]
                    interface IColumnMajorUniformToLargestGridLayoutStatics : IInspectable
                    {
                        [propget] HRESULT MaxColumnsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ColumnSpacingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT RowSpacingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ComboBoxHelper)]
                    [uuid(5A3C87AC-C399-5E5F-873F-B9D0E8BCCEB7)]
                    interface IComboBoxHelper : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ComboBoxHelper)]
                    [uuid(59B4EB2D-BD79-59B2-B343-FA72C747D72A)]
                    interface IComboBoxHelperStatics : IInspectable
                    {
                        [propget] HRESULT KeepInteriorCornersSquareProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        HRESULT SetKeepInteriorCornersSquare([in] Windows.UI.Xaml.Controls.ComboBox* comboBox, [in] boolean value);
                        HRESULT GetKeepInteriorCornersSquare([in] Windows.UI.Xaml.Controls.ComboBox* comboBox, [out] [retval] boolean* result);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar)]
                    [uuid(0F7120C5-6D00-5489-9171-BEDD2D4EF677)]
                    interface ICommandBarFlyoutCommandBar : IInspectable
                    {
                        [propget] HRESULT FlyoutTemplateSettings([out] [retval] Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarAutomationProperties)]
                    [uuid(A0D9D55F-090D-5F25-8953-0FD1E65F9B5A)]
                    interface ICommandBarFlyoutCommandBarAutomationPropertiesStatics : IInspectable
                    {
                        [propget] HRESULT ControlTypeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        HRESULT GetControlType([in] Windows.UI.Xaml.UIElement* element, [out] [retval] Windows.UI.Xaml.Automation.Peers.AutomationControlType* result);
                        HRESULT SetControlType([in] Windows.UI.Xaml.UIElement* element, [in] Windows.UI.Xaml.Automation.Peers.AutomationControlType value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar)]
                    [uuid(58DBCDA9-38E4-5EFC-B740-26FDA3D0A3C6)]
                    interface ICommandBarFlyoutCommandBarFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings)]
                    [uuid(533CC5CA-DCF7-5F9D-A460-934A883ACDC1)]
                    interface ICommandBarFlyoutCommandBarTemplateSettings : IInspectable
                    {
                        [propget] HRESULT OpenAnimationStartPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT OpenAnimationEndPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT CloseAnimationEndPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT CurrentWidth([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandedWidth([out] [retval] DOUBLE* value);
                        [propget] HRESULT WidthExpansionDelta([out] [retval] DOUBLE* value);
                        [propget] HRESULT WidthExpansionAnimationStartPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT WidthExpansionAnimationEndPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT WidthExpansionMoreButtonAnimationStartPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT WidthExpansionMoreButtonAnimationEndPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandUpOverflowVerticalPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandDownOverflowVerticalPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandUpAnimationStartPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandUpAnimationEndPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandUpAnimationHoldPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandDownAnimationStartPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandDownAnimationEndPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExpandDownAnimationHoldPosition([out] [retval] DOUBLE* value);
                        [propget] HRESULT ContentClipRect([out] [retval] Windows.Foundation.Rect* value);
                        [propget] HRESULT OverflowContentClipRect([out] [retval] Windows.Foundation.Rect* value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterConverter)]
                    [uuid(6F1A3ED2-F965-545E-BD44-441DB1794F5F)]
                    interface ICornerRadiusFilterConverter : IInspectable
                    {
                        [propget] HRESULT Filter([out] [retval] Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterKind* value);
                        [propput] HRESULT Filter([in] Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterKind value);
                        [propget] HRESULT Scale([out] [retval] DOUBLE* value);
                        [propput] HRESULT Scale([in] DOUBLE value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterConverter)]
                    [uuid(F1A547F3-4C0E-5F23-9F1E-A4C08CABDE88)]
                    interface ICornerRadiusFilterConverterStatics : IInspectable
                    {
                        [propget] HRESULT FilterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ScaleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverter)]
                    [uuid(B36AA8AE-166E-5CA5-93D2-95E9907C1222)]
                    interface ICornerRadiusToThicknessConverter : IInspectable
                    {
                        [propget] HRESULT ConversionKind([out] [retval] Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverterKind* value);
                        [propput] HRESULT ConversionKind([in] Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverterKind value);
                        [propget] HRESULT Multiplier([out] [retval] DOUBLE* value);
                        [propput] HRESULT Multiplier([in] DOUBLE value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverter)]
                    [uuid(D6995649-8AD2-5C38-BC45-B8EF86FF5F69)]
                    interface ICornerRadiusToThicknessConverterStatics : IInspectable
                    {
                        [propget] HRESULT ConversionKindProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT MultiplierProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel)]
                    [uuid(44A0708C-AC3C-53B8-BBAA-3B38653E843D)]
                    interface IInfoBarPanel : IInspectable
                    {
                        [propget] HRESULT HorizontalOrientationPadding([out] [retval] Windows.UI.Xaml.Thickness* value);
                        [propput] HRESULT HorizontalOrientationPadding([in] Windows.UI.Xaml.Thickness value);
                        [propget] HRESULT VerticalOrientationPadding([out] [retval] Windows.UI.Xaml.Thickness* value);
                        [propput] HRESULT VerticalOrientationPadding([in] Windows.UI.Xaml.Thickness value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel)]
                    [uuid(00D1A8C5-F631-564A-8E9C-7C5CCAD238DE)]
                    interface IInfoBarPanelFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel)]
                    [uuid(335DDBFD-977A-58A2-AF17-4B776144F245)]
                    interface IInfoBarPanelStatics : IInspectable
                    {
                        [propget] HRESULT HorizontalOrientationPaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT VerticalOrientationPaddingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        HRESULT SetHorizontalOrientationMargin([in] Windows.UI.Xaml.DependencyObject* object, [in] Windows.UI.Xaml.Thickness value);
                        HRESULT GetHorizontalOrientationMargin([in] Windows.UI.Xaml.DependencyObject* object, [out] [retval] Windows.UI.Xaml.Thickness* result);
                        [propget] HRESULT HorizontalOrientationMarginProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        HRESULT SetVerticalOrientationMargin([in] Windows.UI.Xaml.DependencyObject* object, [in] Windows.UI.Xaml.Thickness value);
                        HRESULT GetVerticalOrientationMargin([in] Windows.UI.Xaml.DependencyObject* object, [out] [retval] Windows.UI.Xaml.Thickness* result);
                        [propget] HRESULT VerticalOrientationMarginProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.MonochromaticOverlayPresenter)]
                    [uuid(4DBEF429-53B1-511A-9988-70BBCD2EE122)]
                    interface IMonochromaticOverlayPresenter : IInspectable
                    {
                        [propget] HRESULT SourceElement([out] [retval] Windows.UI.Xaml.UIElement** value);
                        [propput] HRESULT SourceElement([in] Windows.UI.Xaml.UIElement* value);
                        [propget] HRESULT ReplacementColor([out] [retval] Windows.UI.Color* value);
                        [propput] HRESULT ReplacementColor([in] Windows.UI.Color value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.MonochromaticOverlayPresenter)]
                    [uuid(4997847B-B558-5C8C-8298-BE1532E898EC)]
                    interface IMonochromaticOverlayPresenterFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.MonochromaticOverlayPresenter** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.MonochromaticOverlayPresenter)]
                    [uuid(FA3915D4-CB66-522D-83E2-36E988FFA0A4)]
                    interface IMonochromaticOverlayPresenterStatics : IInspectable
                    {
                        [propget] HRESULT SourceElementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ReplacementColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter)]
                    [uuid(0489BF60-F630-510C-98DC-B12322260E1F)]
                    interface INavigationViewItemPresenter : IInspectable
                    {
                        [propget] HRESULT Icon([out] [retval] Windows.UI.Xaml.Controls.IconElement** value);
                        [propput] HRESULT Icon([in] Windows.UI.Xaml.Controls.IconElement* value);
                        [propget] HRESULT TemplateSettings([out] [retval] Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenterTemplateSettings** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter)]
                    [experimental]
                    [uuid(3F775730-3713-5B3B-9600-53B79FFF2E35)]
                    interface INavigationViewItemPresenter2 : IInspectable
                    {
                        [propget] HRESULT InfoBadge([out] [retval] Microsoft.UI.Xaml.Controls.InfoBadge** value);
                        [propput] HRESULT InfoBadge([in] Microsoft.UI.Xaml.Controls.InfoBadge* value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter)]
                    [uuid(B28B0160-022C-593C-AB9A-7B3DED2C0754)]
                    interface INavigationViewItemPresenterFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter)]
                    [uuid(F0A5E6E7-F626-5430-8EF2-DE75AE72900F)]
                    interface INavigationViewItemPresenterStatics : IInspectable
                    {
                        [propget] HRESULT IconProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT TemplateSettingsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter)]
                    [experimental]
                    [uuid(1F37F471-2F5C-5CE3-AA21-A50ACBFA34F9)]
                    interface INavigationViewItemPresenterStatics2 : IInspectable
                    {
                        [propget] HRESULT InfoBadgeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenterTemplateSettings)]
                    [uuid(A5119750-FA71-56F2-BFA4-799D9F304CB8)]
                    interface INavigationViewItemPresenterTemplateSettings : IInspectable
                    {
                        [propget] HRESULT IconWidth([out] [retval] DOUBLE* value);
                        [propget] HRESULT SmallerIconWidth([out] [retval] DOUBLE* value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenterTemplateSettings)]
                    [uuid(19EF1328-52C7-55E3-B1BB-923F2F39BD6E)]
                    interface INavigationViewItemPresenterTemplateSettingsFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenterTemplateSettings** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenterTemplateSettings)]
                    [uuid(BA971CFD-5037-5B8B-A95E-652C65ECAABF)]
                    interface INavigationViewItemPresenterTemplateSettingsStatics : IInspectable
                    {
                        [propget] HRESULT IconWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT SmallerIconWidthProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [experimental]
                    [uuid(1870B836-DF2F-5FC6-A5F2-748ED6CE7321)]
                    interface IPopup4 : IInspectable
                    {
                        [propget] HRESULT PlacementTarget([out] [retval] Windows.UI.Xaml.FrameworkElement** value);
                        [propput] HRESULT PlacementTarget([in] Windows.UI.Xaml.FrameworkElement* value);
                        [propget] HRESULT DesiredPlacement([out] [retval] Microsoft.UI.Xaml.Controls.Primitives.PopupPlacementMode* value);
                        [propput] HRESULT DesiredPlacement([in] Microsoft.UI.Xaml.Controls.Primitives.PopupPlacementMode value);
                        [propget] HRESULT ActualPlacement([out] [retval] Microsoft.UI.Xaml.Controls.Primitives.PopupPlacementMode* value);
                        [eventadd] HRESULT ActualPlacementChanged([in] Windows.Foundation.EventHandler<IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT ActualPlacementChanged([in] EventRegistrationToken token);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.RepeatedScrollSnapPoint)]
                    [experimental]
                    [uuid(5828FB51-8EBB-596D-A871-50063479362D)]
                    interface IRepeatedScrollSnapPoint : IInspectable
                    {
                        [propget] HRESULT Offset([out] [retval] DOUBLE* value);
                        [propget] HRESULT Interval([out] [retval] DOUBLE* value);
                        [propget] HRESULT Start([out] [retval] DOUBLE* value);
                        [propget] HRESULT End([out] [retval] DOUBLE* value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.RepeatedScrollSnapPoint)]
                    [experimental]
                    [uuid(F2FD8403-679E-5C31-B431-72A0E0014E6A)]
                    interface IRepeatedScrollSnapPointFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] DOUBLE offset, [in] DOUBLE interval, [in] DOUBLE start, [in] DOUBLE end, [in] Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointsAlignment alignment, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.RepeatedScrollSnapPoint** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.RepeatedZoomSnapPoint)]
                    [experimental]
                    [uuid(1FA6DBBE-5E11-5D32-873B-C92B1D171538)]
                    interface IRepeatedZoomSnapPoint : IInspectable
                    {
                        [propget] HRESULT Offset([out] [retval] DOUBLE* value);
                        [propget] HRESULT Interval([out] [retval] DOUBLE* value);
                        [propget] HRESULT Start([out] [retval] DOUBLE* value);
                        [propget] HRESULT End([out] [retval] DOUBLE* value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.RepeatedZoomSnapPoint)]
                    [experimental]
                    [uuid(7D032A7C-D91C-5660-B1C2-B36E8810AC65)]
                    interface IRepeatedZoomSnapPointFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] DOUBLE offset, [in] DOUBLE interval, [in] DOUBLE start, [in] DOUBLE end, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.RepeatedZoomSnapPoint** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [experimental]
                    [uuid(600111D4-139A-57DF-8C8C-289E307D0CC3)]
                    interface IScrollController : IInspectable
                    {
                        [propget] HRESULT AreScrollControllerInteractionsAllowed([out] [retval] boolean* value);
                        [propget] HRESULT AreScrollerInteractionsAllowed([out] [retval] boolean* value);
                        [propget] HRESULT IsInteracting([out] [retval] boolean* value);
                        [propget] HRESULT IsInteractionElementRailEnabled([out] [retval] boolean* value);
                        [propget] HRESULT InteractionElement([out] [retval] Windows.UI.Xaml.UIElement** value);
                        [propget] HRESULT InteractionElementScrollOrientation([out] [retval] Windows.UI.Xaml.Controls.Orientation* value);
                        HRESULT SetExpressionAnimationSources([in] Windows.UI.Composition.CompositionPropertySet* propertySet, [in] HSTRING minOffsetPropertyName, [in] HSTRING maxOffsetPropertyName, [in] HSTRING offsetPropertyName, [in] HSTRING multiplierPropertyName);
                        HRESULT SetScrollMode([in] Microsoft.UI.Xaml.Controls.ScrollingScrollMode scrollMode);
                        HRESULT SetValues([in] DOUBLE minOffset, [in] DOUBLE maxOffset, [in] DOUBLE offset, [in] DOUBLE viewport);
                        HRESULT GetScrollAnimation([in] INT32 correlationId, [in] Windows.Foundation.Numerics.Vector2 currentPosition, [in] Windows.UI.Composition.CompositionAnimation* defaultAnimation, [out] [retval] Windows.UI.Composition.CompositionAnimation** result);
                        HRESULT NotifyScrollCompleted([in] INT32 correlationId);
                        [eventadd] HRESULT ScrollToRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT ScrollToRequested([in] EventRegistrationToken token);
                        [eventadd] HRESULT ScrollByRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT ScrollByRequested([in] EventRegistrationToken token);
                        [eventadd] HRESULT AddScrollVelocityRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerAddScrollVelocityRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT AddScrollVelocityRequested([in] EventRegistrationToken token);
                        [eventadd] HRESULT InteractionRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerInteractionRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT InteractionRequested([in] EventRegistrationToken token);
                        [eventadd] HRESULT InteractionInfoChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.IScrollController*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT InteractionInfoChanged([in] EventRegistrationToken token);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerAddScrollVelocityRequestedEventArgs)]
                    [experimental]
                    [uuid(317BBC1A-0CF7-5815-A8A7-BD7E6EEF966A)]
                    interface IScrollControllerAddScrollVelocityRequestedEventArgs : IInspectable
                    {
                        [propget] HRESULT OffsetVelocity([out] [retval] FLOAT* value);
                        [propget] HRESULT InertiaDecayRate([out] [retval] Windows.Foundation.IReference<FLOAT>** value);
                        [propget] HRESULT CorrelationId([out] [retval] INT32* value);
                        [propput] HRESULT CorrelationId([in] INT32 value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerAddScrollVelocityRequestedEventArgs)]
                    [experimental]
                    [uuid(9221D193-6F82-5E21-AACC-0B1460818AB5)]
                    interface IScrollControllerAddScrollVelocityRequestedEventArgsFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] FLOAT offsetVelocity, [in] Windows.Foundation.IReference<FLOAT>* inertiaDecayRate, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerAddScrollVelocityRequestedEventArgs** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerInteractionRequestedEventArgs)]
                    [experimental]
                    [uuid(9CA050FA-6A7B-5BED-9E26-8F2DA0EE73A1)]
                    interface IScrollControllerInteractionRequestedEventArgs : IInspectable
                    {
                        [propget] HRESULT PointerPoint([out] [retval] Windows.UI.Input.PointerPoint** value);
                        [propget] HRESULT Handled([out] [retval] boolean* value);
                        [propput] HRESULT Handled([in] boolean value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerInteractionRequestedEventArgs)]
                    [experimental]
                    [uuid(1CCE9A33-698D-54DC-B144-D68B9E7B76C2)]
                    interface IScrollControllerInteractionRequestedEventArgsFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] Windows.UI.Input.PointerPoint* pointerPoint, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerInteractionRequestedEventArgs** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs)]
                    [experimental]
                    [uuid(E7F305FA-4073-5D88-8BF1-AE4ECB9208BF)]
                    interface IScrollControllerScrollByRequestedEventArgs : IInspectable
                    {
                        [propget] HRESULT OffsetDelta([out] [retval] DOUBLE* value);
                        [propget] HRESULT Options([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingScrollOptions** value);
                        [propget] HRESULT CorrelationId([out] [retval] INT32* value);
                        [propput] HRESULT CorrelationId([in] INT32 value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs)]
                    [experimental]
                    [uuid(7ECF01A7-EF3F-5AF9-93B4-38BC1BAFD335)]
                    interface IScrollControllerScrollByRequestedEventArgsFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] DOUBLE offsetDelta, [in] Microsoft.UI.Xaml.Controls.ScrollingScrollOptions* options, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs)]
                    [experimental]
                    [uuid(73F16B99-7310-5C73-872B-276E5A9D4913)]
                    interface IScrollControllerScrollToRequestedEventArgs : IInspectable
                    {
                        [propget] HRESULT Offset([out] [retval] DOUBLE* value);
                        [propget] HRESULT Options([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingScrollOptions** value);
                        [propget] HRESULT CorrelationId([out] [retval] INT32* value);
                        [propput] HRESULT CorrelationId([in] INT32 value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs)]
                    [experimental]
                    [uuid(01675DC4-1074-54E8-BEBB-66B03A33DA0D)]
                    interface IScrollControllerScrollToRequestedEventArgsFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] DOUBLE offset, [in] Microsoft.UI.Xaml.Controls.ScrollingScrollOptions* options, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter)]
                    [experimental]
                    [uuid(45503D90-1444-5D18-ADCC-B3CD1B18EB6A)]
                    interface IScrollPresenter : IInspectable
                    {
                        [propget] HRESULT Background([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                        [propput] HRESULT Background([in] Windows.UI.Xaml.Media.Brush* value);
                        [propget] HRESULT Content([out] [retval] Windows.UI.Xaml.UIElement** value);
                        [propput] HRESULT Content([in] Windows.UI.Xaml.UIElement* value);
                        [propget] HRESULT ExpressionAnimationSources([out] [retval] Windows.UI.Composition.CompositionPropertySet** value);
                        [propget] HRESULT HorizontalOffset([out] [retval] DOUBLE* value);
                        [propget] HRESULT VerticalOffset([out] [retval] DOUBLE* value);
                        [propget] HRESULT ZoomFactor([out] [retval] FLOAT* value);
                        [propget] HRESULT ExtentWidth([out] [retval] DOUBLE* value);
                        [propget] HRESULT ExtentHeight([out] [retval] DOUBLE* value);
                        [propget] HRESULT ViewportWidth([out] [retval] DOUBLE* value);
                        [propget] HRESULT ViewportHeight([out] [retval] DOUBLE* value);
                        [propget] HRESULT ScrollableWidth([out] [retval] DOUBLE* value);
                        [propget] HRESULT ScrollableHeight([out] [retval] DOUBLE* value);
                        [propget] HRESULT ContentOrientation([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingContentOrientation* value);
                        [propput] HRESULT ContentOrientation([in] Microsoft.UI.Xaml.Controls.ScrollingContentOrientation value);
                        [propget] HRESULT HorizontalScrollChainMode([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingChainMode* value);
                        [propput] HRESULT HorizontalScrollChainMode([in] Microsoft.UI.Xaml.Controls.ScrollingChainMode value);
                        [propget] HRESULT VerticalScrollChainMode([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingChainMode* value);
                        [propput] HRESULT VerticalScrollChainMode([in] Microsoft.UI.Xaml.Controls.ScrollingChainMode value);
                        [propget] HRESULT HorizontalScrollRailMode([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingRailMode* value);
                        [propput] HRESULT HorizontalScrollRailMode([in] Microsoft.UI.Xaml.Controls.ScrollingRailMode value);
                        [propget] HRESULT VerticalScrollRailMode([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingRailMode* value);
                        [propput] HRESULT VerticalScrollRailMode([in] Microsoft.UI.Xaml.Controls.ScrollingRailMode value);
                        [propget] HRESULT HorizontalScrollMode([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingScrollMode* value);
                        [propput] HRESULT HorizontalScrollMode([in] Microsoft.UI.Xaml.Controls.ScrollingScrollMode value);
                        [propget] HRESULT VerticalScrollMode([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingScrollMode* value);
                        [propput] HRESULT VerticalScrollMode([in] Microsoft.UI.Xaml.Controls.ScrollingScrollMode value);
                        [propget] HRESULT ZoomChainMode([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingChainMode* value);
                        [propput] HRESULT ZoomChainMode([in] Microsoft.UI.Xaml.Controls.ScrollingChainMode value);
                        [propget] HRESULT ZoomMode([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingZoomMode* value);
                        [propput] HRESULT ZoomMode([in] Microsoft.UI.Xaml.Controls.ScrollingZoomMode value);
                        [propget] HRESULT IgnoredInputKinds([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingInputKinds* value);
                        [propput] HRESULT IgnoredInputKinds([in] Microsoft.UI.Xaml.Controls.ScrollingInputKinds value);
                        [propget] HRESULT MinZoomFactor([out] [retval] DOUBLE* value);
                        [propput] HRESULT MinZoomFactor([in] DOUBLE value);
                        [propget] HRESULT MaxZoomFactor([out] [retval] DOUBLE* value);
                        [propput] HRESULT MaxZoomFactor([in] DOUBLE value);
                        [propget] HRESULT State([out] [retval] Microsoft.UI.Xaml.Controls.ScrollingInteractionState* value);
                        [propget] HRESULT HorizontalScrollController([out] [retval] Microsoft.UI.Xaml.Controls.Primitives.IScrollController** value);
                        [propput] HRESULT HorizontalScrollController([in] Microsoft.UI.Xaml.Controls.Primitives.IScrollController* value);
                        [propget] HRESULT VerticalScrollController([out] [retval] Microsoft.UI.Xaml.Controls.Primitives.IScrollController** value);
                        [propput] HRESULT VerticalScrollController([in] Microsoft.UI.Xaml.Controls.Primitives.IScrollController* value);
                        [propget] HRESULT HorizontalAnchorRatio([out] [retval] DOUBLE* value);
                        [propput] HRESULT HorizontalAnchorRatio([in] DOUBLE value);
                        [propget] HRESULT VerticalAnchorRatio([out] [retval] DOUBLE* value);
                        [propput] HRESULT VerticalAnchorRatio([in] DOUBLE value);
                        [propget] HRESULT HorizontalSnapPoints([out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointBase*>** value);
                        [propget] HRESULT VerticalSnapPoints([out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointBase*>** value);
                        [propget] HRESULT ZoomSnapPoints([out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPointBase*>** value);
                        [overload("ScrollTo")] HRESULT ScrollTo([in] DOUBLE horizontalOffset, [in] DOUBLE verticalOffset, [out] [retval] INT32* result);
                        [overload("ScrollTo")] HRESULT ScrollToWithOptions([in] DOUBLE horizontalOffset, [in] DOUBLE verticalOffset, [in] Microsoft.UI.Xaml.Controls.ScrollingScrollOptions* options, [out] [retval] INT32* result);
                        [overload("ScrollBy")] HRESULT ScrollBy([in] DOUBLE horizontalOffsetDelta, [in] DOUBLE verticalOffsetDelta, [out] [retval] INT32* result);
                        [overload("ScrollBy")] HRESULT ScrollByWithOptions([in] DOUBLE horizontalOffsetDelta, [in] DOUBLE verticalOffsetDelta, [in] Microsoft.UI.Xaml.Controls.ScrollingScrollOptions* options, [out] [retval] INT32* result);
                        HRESULT AddScrollVelocity([in] Windows.Foundation.Numerics.Vector2 offsetsVelocity, [in] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector2>* inertiaDecayRate, [out] [retval] INT32* result);
                        [overload("ZoomTo")] HRESULT ZoomTo([in] FLOAT zoomFactor, [in] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector2>* centerPoint, [out] [retval] INT32* result);
                        [overload("ZoomTo")] HRESULT ZoomToWithOptions([in] FLOAT zoomFactor, [in] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector2>* centerPoint, [in] Microsoft.UI.Xaml.Controls.ScrollingZoomOptions* options, [out] [retval] INT32* result);
                        [overload("ZoomBy")] HRESULT ZoomBy([in] FLOAT zoomFactorDelta, [in] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector2>* centerPoint, [out] [retval] INT32* result);
                        [overload("ZoomBy")] HRESULT ZoomByWithOptions([in] FLOAT zoomFactorDelta, [in] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector2>* centerPoint, [in] Microsoft.UI.Xaml.Controls.ScrollingZoomOptions* options, [out] [retval] INT32* result);
                        HRESULT AddZoomVelocity([in] FLOAT zoomFactorVelocity, [in] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector2>* centerPoint, [in] Windows.Foundation.IReference<FLOAT>* inertiaDecayRate, [out] [retval] INT32* result);
                        [eventadd] HRESULT ExtentChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT ExtentChanged([in] EventRegistrationToken token);
                        [eventadd] HRESULT StateChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT StateChanged([in] EventRegistrationToken token);
                        [eventadd] HRESULT ViewChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT ViewChanged([in] EventRegistrationToken token);
                        [eventadd] HRESULT ScrollAnimationStarting([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter*, Microsoft.UI.Xaml.Controls.ScrollingScrollAnimationStartingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT ScrollAnimationStarting([in] EventRegistrationToken token);
                        [eventadd] HRESULT ZoomAnimationStarting([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter*, Microsoft.UI.Xaml.Controls.ScrollingZoomAnimationStartingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT ZoomAnimationStarting([in] EventRegistrationToken token);
                        [eventadd] HRESULT ScrollCompleted([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter*, Microsoft.UI.Xaml.Controls.ScrollingScrollCompletedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT ScrollCompleted([in] EventRegistrationToken token);
                        [eventadd] HRESULT ZoomCompleted([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter*, Microsoft.UI.Xaml.Controls.ScrollingZoomCompletedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT ZoomCompleted([in] EventRegistrationToken token);
                        [eventadd] HRESULT BringingIntoView([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter*, Microsoft.UI.Xaml.Controls.ScrollingBringingIntoViewEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT BringingIntoView([in] EventRegistrationToken token);
                        [eventadd] HRESULT AnchorRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter*, Microsoft.UI.Xaml.Controls.ScrollingAnchorRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT AnchorRequested([in] EventRegistrationToken token);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter)]
                    [experimental]
                    [uuid(9F5CDC57-D229-52B2-AEE4-37C496764EA3)]
                    interface IScrollPresenterFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter)]
                    [experimental]
                    [uuid(31F5E061-1D56-5987-BDAA-714BCC3B2BFD)]
                    interface IScrollPresenterStatics : IInspectable
                    {
                        [propget] HRESULT BackgroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ContentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ContentOrientationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT HorizontalScrollChainModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT VerticalScrollChainModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT HorizontalScrollRailModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT VerticalScrollRailModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT HorizontalScrollModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT VerticalScrollModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ZoomChainModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ZoomModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT IgnoredInputKindsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT MinZoomFactorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT MaxZoomFactorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT HorizontalAnchorRatioProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT VerticalAnchorRatioProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPoint)]
                    [experimental]
                    [uuid(73D918FF-D16C-52CD-9657-E392EE08868A)]
                    interface IScrollSnapPoint : IInspectable
                    {
                        [propget] HRESULT Value([out] [retval] DOUBLE* value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointBase)]
                    [experimental]
                    [uuid(45D7319D-C9EB-5109-9668-FF3FC6CCDF11)]
                    interface IScrollSnapPointBase : IInspectable
                    {
                        [propget] HRESULT Alignment([out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointsAlignment* value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointBase)]
                    [experimental]
                    [uuid(3FA2E552-1A45-5691-99DC-6400087CBB38)]
                    interface IScrollSnapPointBaseFactory : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPoint)]
                    [experimental]
                    [uuid(39304BC7-0E54-5C06-8920-ADCF67E7C466)]
                    interface IScrollSnapPointFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] DOUBLE snapPointValue, [in] Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointsAlignment alignment, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPoint** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.SnapPointBase)]
                    [experimental]
                    [uuid(14ED1089-FB97-5211-8C45-C352CD8B96A1)]
                    interface ISnapPointBase : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.SnapPointBase)]
                    [experimental]
                    [uuid(50266508-15F8-530A-A213-E976E04E670B)]
                    interface ISnapPointBaseFactory : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.TabViewListView)]
                    [uuid(EC48EFB5-2CB3-562B-921C-E554923CE1D5)]
                    interface ITabViewListView : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.TabViewListView)]
                    [uuid(8A084FDD-86F0-51EE-98DF-5FBD0B5669BE)]
                    interface ITabViewListViewFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.TabViewListView** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPoint)]
                    [experimental]
                    [uuid(8101D353-8DB3-5AC6-A7F8-B18EB9C123AC)]
                    interface IZoomSnapPoint : IInspectable
                    {
                        [propget] HRESULT Value([out] [retval] DOUBLE* value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPointBase)]
                    [experimental]
                    [uuid(C6D08756-0860-5C2D-ABEC-6EB4AA4B53D7)]
                    interface IZoomSnapPointBase : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPointBase)]
                    [experimental]
                    [uuid(2C689EEA-B6CF-5024-847B-589355D5A2FA)]
                    interface IZoomSnapPointBaseFactory : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPoint)]
                    [experimental]
                    [uuid(0B3B5418-BFF6-5A9E-B734-B68ADF49F775)]
                    interface IZoomSnapPointFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] DOUBLE snapPointValue, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPoint** value);
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.IAutoSuggestBoxHelperStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [threading(both)]
                    runtimeclass AutoSuggestBoxHelper
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.IAutoSuggestBoxHelper;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSliderFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSliderStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [threading(both)]
                    runtimeclass ColorPickerSlider : Windows.UI.Xaml.Controls.Slider
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSlider;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [threading(both)]
                    runtimeclass ColorSpectrum : Windows.UI.Xaml.Controls.Control
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayoutFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayoutStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [threading(both)]
                    runtimeclass ColumnMajorUniformToLargestGridLayout : Microsoft.UI.Xaml.Controls.NonVirtualizingLayout
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayout;
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.IComboBoxHelperStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [threading(both)]
                    runtimeclass ComboBoxHelper
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.IComboBoxHelper;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass CommandBarFlyoutCommandBar : Windows.UI.Xaml.Controls.CommandBar
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBar;
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarAutomationPropertiesStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [threading(both)]
                    runtimeclass CommandBarFlyoutCommandBarAutomationProperties
                    {
                    }

                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass CommandBarFlyoutCommandBarTemplateSettings : Windows.UI.Xaml.DependencyObject
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings;
                    }

                    [activatable(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusFilterConverterStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [threading(both)]
                    runtimeclass CornerRadiusFilterConverter : Windows.UI.Xaml.DependencyObject
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusFilterConverter;
                        interface Windows.UI.Xaml.Data.IValueConverter;
                    }

                    [activatable(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusToThicknessConverterStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [threading(both)]
                    runtimeclass CornerRadiusToThicknessConverter : Windows.UI.Xaml.DependencyObject
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusToThicknessConverter;
                        interface Windows.UI.Xaml.Data.IValueConverter;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [threading(both)]
                    runtimeclass InfoBarPanel : Windows.UI.Xaml.Controls.Panel
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanel;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenterFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenterStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [threading(both)]
                    runtimeclass MonochromaticOverlayPresenter : Windows.UI.Xaml.Controls.Grid
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenter;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterStatics2, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [threading(both)]
                    runtimeclass NavigationViewItemPresenter : Windows.UI.Xaml.Controls.ContentControl
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenter;
                        [contract(Microsoft.UI.Xaml.XamlContract, 1.0)] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenter2;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterTemplateSettingsFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterTemplateSettingsStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [threading(both)]
                    runtimeclass NavigationViewItemPresenterTemplateSettings : Windows.UI.Xaml.DependencyObject
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterTemplateSettings;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IRepeatedScrollSnapPointFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass RepeatedScrollSnapPoint : Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointBase
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IRepeatedScrollSnapPoint;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IRepeatedZoomSnapPointFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass RepeatedZoomSnapPoint : Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPointBase
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IRepeatedZoomSnapPoint;
                    }

                    [activatable(Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerAddScrollVelocityRequestedEventArgsFactory, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass ScrollControllerAddScrollVelocityRequestedEventArgs
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerAddScrollVelocityRequestedEventArgs;
                    }

                    [activatable(Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerInteractionRequestedEventArgsFactory, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass ScrollControllerInteractionRequestedEventArgs
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerInteractionRequestedEventArgs;
                    }

                    [activatable(Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerScrollByRequestedEventArgsFactory, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass ScrollControllerScrollByRequestedEventArgs
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerScrollByRequestedEventArgs;
                    }

                    [activatable(Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerScrollToRequestedEventArgsFactory, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass ScrollControllerScrollToRequestedEventArgs
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerScrollToRequestedEventArgs;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IScrollPresenterFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Controls.Primitives.IScrollPresenterStatics, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [threading(both)]
                    runtimeclass ScrollPresenter : Windows.UI.Xaml.FrameworkElement
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IScrollPresenter;
                        interface Windows.UI.Xaml.Controls.IScrollAnchorProvider;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass ScrollSnapPoint : Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointBase
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPoint;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointBaseFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass ScrollSnapPointBase : Microsoft.UI.Xaml.Controls.Primitives.SnapPointBase
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointBase;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.ISnapPointBaseFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass SnapPointBase : Windows.UI.Xaml.DependencyObject
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.ISnapPointBase;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.ITabViewListViewFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass TabViewListView : Windows.UI.Xaml.Controls.ListView
                    {
                        [default] interface Microsoft.UI.Xaml.Controls.Primitives.ITabViewListView;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IZoomSnapPointFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass ZoomSnapPoint : Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPointBase
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IZoomSnapPoint;
                    }

                    [composable(Microsoft.UI.Xaml.Controls.Primitives.IZoomSnapPointBaseFactory, public, Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.XamlContract, 1.0)]
                    [experimental]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass ZoomSnapPointBase : Microsoft.UI.Xaml.Controls.Primitives.SnapPointBase
                    {
                        [default] [experimental] interface Microsoft.UI.Xaml.Controls.Primitives.IZoomSnapPointBase;
                    }
                }
            }
        }
    }
}
