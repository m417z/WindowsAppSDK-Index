//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";

// Forward Declare
namespace Microsoft
{
    namespace Windows
    {
        namespace SemanticSearch
        {
            apicontract SemanticSearchContract;

            interface IEmbeddingVector;

            interface IEmbeddingVectorFactory;

            runtimeclass EmbeddingVector;
        }
    }
}

// Generic instantiations

// Type definition
namespace Microsoft
{
    namespace Windows
    {
        namespace SemanticSearch
        {
            [contractversion(1.0)]
            apicontract SemanticSearchContract
            {
            }

            [contract(Microsoft.Windows.SemanticSearch.SemanticSearchContract, 1.0)]
            [exclusiveto(Microsoft.Windows.SemanticSearch.EmbeddingVector)]
            [uuid(F80248AA-68E7-5DE0-9166-B26E58935D34)]
            interface IEmbeddingVector : IInspectable
            {
                HRESULT GetValues([in] UINT32 __valuesSize, [out] [size_is(__valuesSize)] FLOAT* values);
                [propget] HRESULT Count([out] [retval] UINT32* value);
                [propget] HRESULT VectorSpaceId([out] [retval] GUID* value);
            }

            [contract(Microsoft.Windows.SemanticSearch.SemanticSearchContract, 1.0)]
            [exclusiveto(Microsoft.Windows.SemanticSearch.EmbeddingVector)]
            [uuid(3A31EAD7-1F01-5A4C-9C2E-9ACFA6495CDD)]
            interface IEmbeddingVectorFactory : IInspectable
            {
                HRESULT CreateInstance([in] UINT32 __dataSize, [in] [size_is(__dataSize)] FLOAT* data, [in] GUID vectorSpaceID, [out] [retval] Microsoft.Windows.SemanticSearch.EmbeddingVector** value);
            }

            [activatable(Microsoft.Windows.SemanticSearch.IEmbeddingVectorFactory, Microsoft.Windows.SemanticSearch.SemanticSearchContract, 1.0)]
            [contract(Microsoft.Windows.SemanticSearch.SemanticSearchContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass EmbeddingVector
            {
                [default] interface Microsoft.Windows.SemanticSearch.IEmbeddingVector;
            }
        }
    }
}
