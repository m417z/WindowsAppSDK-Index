//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Microsoft.Windows.Management.Deployment.idl";
import "Windows.Graphics.idl";
import "Windows.Graphics.Imaging.idl";
import "Windows.Storage.Streams.idl";

// Forward Declare
namespace Windows
{
    namespace Foundation
    {
        interface IClosable;
    }
}
namespace Windows
{
    namespace Graphics
    {
        namespace Imaging
        {
            runtimeclass SoftwareBitmap;
        }
    }
}
namespace Windows
{
    namespace Graphics
    {
        typedef struct PointInt32 PointInt32;

        typedef struct RectInt32 RectInt32;
    }
}
namespace Windows
{
    namespace Storage
    {
        namespace Streams
        {
            interface IBuffer;
        }
    }
}
namespace Microsoft
{
    namespace Graphics
    {
        namespace Imaging
        {
            apicontract ImageBufferContract;

            apicontract ImageObjectExtractorContract;

            apicontract ImageScalerContract;

            typedef enum PixelFormat PixelFormat;

            interface IImageBuffer;

            interface IImageBufferFactory;

            interface IImageBufferStatics;

            interface IImageBufferStatics2;

            interface IImageObjectExtractor;

            interface IImageObjectExtractorHint;

            interface IImageObjectExtractorHintFactory;

            interface IImageObjectExtractorStatics;

            interface IImageScaler;

            interface IImageScalerStatics;

            runtimeclass ImageBuffer;

            runtimeclass ImageObjectExtractor;

            runtimeclass ImageObjectExtractorHint;

            runtimeclass ImageScaler;
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace Graphics
    {
        namespace Imaging
        {
            declare
            {
                interface Windows.Foundation.IAsyncOperation<Microsoft.Graphics.Imaging.ImageObjectExtractor*>;

                interface Windows.Foundation.IAsyncOperation<Microsoft.Graphics.Imaging.ImageScaler*>;
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace Graphics
    {
        namespace Imaging
        {
            [contractversion(2.0)]
            apicontract ImageBufferContract
            {
            }

            [contractversion(1.0)]
            apicontract ImageObjectExtractorContract
            {
            }

            [contractversion(1.0)]
            apicontract ImageScalerContract
            {
            }

            [contract(Microsoft.Graphics.Imaging.ImageBufferContract, 1.0)]
            enum PixelFormat
            {
                Undefined = 0,
                Rgb24     = 1,
                Argb32    = 2,
                Rgba32    = 3,
                Bgra32    = 4,
                Gray8     = 5
            };

            [contract(Microsoft.Graphics.Imaging.ImageBufferContract, 1.0)]
            [exclusiveto(Microsoft.Graphics.Imaging.ImageBuffer)]
            [uuid(D8D9C801-5B32-54B6-A6E2-7384C6B822ED)]
            interface IImageBuffer : IInspectable
            {
                HRESULT CreateSoftwareBitmap([out] [retval] Windows.Graphics.Imaging.SoftwareBitmap** result);
                [propget] HRESULT Buffer([out] [retval] Windows.Storage.Streams.IBuffer** value);
                [propget] HRESULT PixelFormat([out] [retval] Microsoft.Graphics.Imaging.PixelFormat* value);
                [propget] HRESULT Height([out] [retval] UINT32* value);
                [propget] HRESULT Width([out] [retval] UINT32* value);
                [propget] HRESULT BufferLength([out] [retval] UINT32* value);
                HRESULT CopyToBuffer([in] UINT32 __valuesSize, [out] [size_is(__valuesSize)] BYTE* values);
            }

            [contract(Microsoft.Graphics.Imaging.ImageBufferContract, 1.0)]
            [exclusiveto(Microsoft.Graphics.Imaging.ImageBuffer)]
            [uuid(D1F288FD-37F1-5490-80B7-A2CA953C9FE5)]
            interface IImageBufferFactory : IInspectable
            {
                HRESULT CreateInstance([in] Windows.Storage.Streams.IBuffer* buffer, [in] Microsoft.Graphics.Imaging.PixelFormat pixelFormat, [in] UINT32 width, [in] UINT32 height, [out] [retval] Microsoft.Graphics.Imaging.ImageBuffer** value);
            }

            [contract(Microsoft.Graphics.Imaging.ImageBufferContract, 1.0)]
            [exclusiveto(Microsoft.Graphics.Imaging.ImageBuffer)]
            [uuid(E2DA1565-9F5F-5A92-B58C-0099643A289A)]
            interface IImageBufferStatics : IInspectable
            {
                HRESULT CreateCopyFromBitmap([in] Windows.Graphics.Imaging.SoftwareBitmap* softwareBitmap, [out] [retval] Microsoft.Graphics.Imaging.ImageBuffer** result);
                HRESULT CreateBufferAttachedToBitmap([in] Windows.Graphics.Imaging.SoftwareBitmap* softwareBitmap, [out] [retval] Microsoft.Graphics.Imaging.ImageBuffer** result);
            }

            [contract(Microsoft.Graphics.Imaging.ImageBufferContract, 2.0)]
            [exclusiveto(Microsoft.Graphics.Imaging.ImageBuffer)]
            [uuid(21C83045-1161-5A0F-AFBF-7330D0D74B97)]
            interface IImageBufferStatics2 : IInspectable
            {
                HRESULT CreateFromBuffer([in] Windows.Storage.Streams.IBuffer* buffer, [in] Microsoft.Graphics.Imaging.PixelFormat pixelFormat, [in] UINT32 width, [in] UINT32 height, [out] [retval] Microsoft.Graphics.Imaging.ImageBuffer** result);
                HRESULT CreateFromBufferWithStride([in] Windows.Storage.Streams.IBuffer* buffer, [in] Microsoft.Graphics.Imaging.PixelFormat pixelFormat, [in] UINT32 width, [in] UINT32 height, [in] UINT32 stride, [out] [retval] Microsoft.Graphics.Imaging.ImageBuffer** result);
            }

            [contract(Microsoft.Graphics.Imaging.ImageObjectExtractorContract, 1.0)]
            [exclusiveto(Microsoft.Graphics.Imaging.ImageObjectExtractor)]
            [uuid(1ED9427D-58E6-5BEC-9708-FAC1BE8A5AAE)]
            interface IImageObjectExtractor : IInspectable
            {
                HRESULT GetSoftwareBitmapObjectMask([in] Microsoft.Graphics.Imaging.ImageObjectExtractorHint* hint, [out] [retval] Windows.Graphics.Imaging.SoftwareBitmap** result);
                HRESULT GetImageBufferObjectMask([in] Microsoft.Graphics.Imaging.ImageObjectExtractorHint* hint, [out] [retval] Microsoft.Graphics.Imaging.ImageBuffer** result);
            }

            [contract(Microsoft.Graphics.Imaging.ImageObjectExtractorContract, 1.0)]
            [exclusiveto(Microsoft.Graphics.Imaging.ImageObjectExtractorHint)]
            [uuid(FAF8F38A-350F-5B4A-9E20-7A1812D48959)]
            interface IImageObjectExtractorHint : IInspectable
            {
                [propget] HRESULT IncludeRects([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Graphics.RectInt32>** value);
                [propget] HRESULT IncludePoints([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Graphics.PointInt32>** value);
                [propget] HRESULT ExcludePoints([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Graphics.PointInt32>** value);
            }

            [contract(Microsoft.Graphics.Imaging.ImageObjectExtractorContract, 1.0)]
            [exclusiveto(Microsoft.Graphics.Imaging.ImageObjectExtractorHint)]
            [uuid(CD873E40-EF5A-5C3A-9297-25BA3A066872)]
            interface IImageObjectExtractorHintFactory : IInspectable
            {
                HRESULT CreateInstance([in] Windows.Foundation.Collections.IVector<Windows.Graphics.RectInt32>* includeRects, [in] Windows.Foundation.Collections.IVector<Windows.Graphics.PointInt32>* includePoints, [in] Windows.Foundation.Collections.IVector<Windows.Graphics.PointInt32>* excludePoints, [out] [retval] Microsoft.Graphics.Imaging.ImageObjectExtractorHint** value);
            }

            [contract(Microsoft.Graphics.Imaging.ImageObjectExtractorContract, 1.0)]
            [exclusiveto(Microsoft.Graphics.Imaging.ImageObjectExtractor)]
            [uuid(490EF068-39D9-58A6-9D18-AA37A8E935DC)]
            interface IImageObjectExtractorStatics : IInspectable
            {
                HRESULT CreateWithSoftwareBitmapAsync([in] Windows.Graphics.Imaging.SoftwareBitmap* softwareBitmap, [out] [retval] Windows.Foundation.IAsyncOperation<Microsoft.Graphics.Imaging.ImageObjectExtractor*>** operation);
                HRESULT CreateWithImageBufferAsync([in] Microsoft.Graphics.Imaging.ImageBuffer* imageBuffer, [out] [retval] Windows.Foundation.IAsyncOperation<Microsoft.Graphics.Imaging.ImageObjectExtractor*>** operation);
                HRESULT IsAvailable([out] [retval] boolean* result);
                HRESULT MakeAvailableAsync([out] [retval] Windows.Foundation.IAsyncOperationWithProgress<Microsoft.Windows.Management.Deployment.PackageDeploymentResult*, Microsoft.Windows.Management.Deployment.PackageDeploymentProgress>** operation);
            }

            [contract(Microsoft.Graphics.Imaging.ImageScalerContract, 1.0)]
            [exclusiveto(Microsoft.Graphics.Imaging.ImageScaler)]
            [uuid(22103A1E-0B07-5645-B1F1-FFC3E854FD5B)]
            interface IImageScaler : IInspectable
            {
                HRESULT ScaleSoftwareBitmap([in] Windows.Graphics.Imaging.SoftwareBitmap* softwareBitmap, [in] INT32 width, [in] INT32 height, [out] [retval] Windows.Graphics.Imaging.SoftwareBitmap** result);
                HRESULT ScaleImageBuffer([in] Microsoft.Graphics.Imaging.ImageBuffer* imageBuffer, [in] INT32 width, [in] INT32 height, [out] [retval] Microsoft.Graphics.Imaging.ImageBuffer** result);
                [propget] HRESULT MaxSupportedScaleFactor([out] [retval] INT32* value);
            }

            [contract(Microsoft.Graphics.Imaging.ImageScalerContract, 1.0)]
            [exclusiveto(Microsoft.Graphics.Imaging.ImageScaler)]
            [uuid(9133569A-9D79-54DE-948E-DA82BC8DC855)]
            interface IImageScalerStatics : IInspectable
            {
                HRESULT IsAvailable([out] [retval] boolean* result);
                HRESULT MakeAvailableAsync([out] [retval] Windows.Foundation.IAsyncOperationWithProgress<Microsoft.Windows.Management.Deployment.PackageDeploymentResult*, Microsoft.Windows.Management.Deployment.PackageDeploymentProgress>** operation);
                HRESULT CreateAsync([out] [retval] Windows.Foundation.IAsyncOperation<Microsoft.Graphics.Imaging.ImageScaler*>** operation);
            }

            [activatable(Microsoft.Graphics.Imaging.IImageBufferFactory, Microsoft.Graphics.Imaging.ImageBufferContract, 1.0)]
            [contract(Microsoft.Graphics.Imaging.ImageBufferContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Microsoft.Graphics.Imaging.IImageBufferStatics, Microsoft.Graphics.Imaging.ImageBufferContract, 1.0)]
            [static(Microsoft.Graphics.Imaging.IImageBufferStatics2, Microsoft.Graphics.Imaging.ImageBufferContract, 2.0)]
            [threading(both)]
            runtimeclass ImageBuffer
            {
                [default] interface Microsoft.Graphics.Imaging.IImageBuffer;
                interface Windows.Foundation.IClosable;
            }

            [contract(Microsoft.Graphics.Imaging.ImageObjectExtractorContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Microsoft.Graphics.Imaging.IImageObjectExtractorStatics, Microsoft.Graphics.Imaging.ImageObjectExtractorContract, 1.0)]
            [threading(both)]
            runtimeclass ImageObjectExtractor
            {
                [default] interface Microsoft.Graphics.Imaging.IImageObjectExtractor;
                interface Windows.Foundation.IClosable;
            }

            [activatable(Microsoft.Graphics.Imaging.IImageObjectExtractorHintFactory, Microsoft.Graphics.Imaging.ImageObjectExtractorContract, 1.0)]
            [contract(Microsoft.Graphics.Imaging.ImageObjectExtractorContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ImageObjectExtractorHint
            {
                [default] interface Microsoft.Graphics.Imaging.IImageObjectExtractorHint;
            }

            [contract(Microsoft.Graphics.Imaging.ImageScalerContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Microsoft.Graphics.Imaging.IImageScalerStatics, Microsoft.Graphics.Imaging.ImageScalerContract, 1.0)]
            [threading(both)]
            runtimeclass ImageScaler
            {
                [default] interface Microsoft.Graphics.Imaging.IImageScaler;
                interface Windows.Foundation.IClosable;
            }
        }
    }
}
