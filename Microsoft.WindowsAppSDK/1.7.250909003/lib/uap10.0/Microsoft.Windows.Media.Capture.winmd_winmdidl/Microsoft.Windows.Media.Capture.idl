//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Microsoft.UI.idl";
import "Windows.Storage.idl";

// Forward Declare
namespace Microsoft
{
    namespace UI
    {
        typedef struct WindowId WindowId;
    }
}
namespace Windows
{
    namespace Foundation
    {
        typedef struct Size Size;
    }
}
namespace Windows
{
    namespace Storage
    {
        runtimeclass StorageFile;
    }
}
namespace Microsoft
{
    namespace Windows
    {
        namespace Media
        {
            namespace Capture
            {
                apicontract CameraCaptureUIContract;

                typedef enum CameraCaptureUIMaxPhotoResolution CameraCaptureUIMaxPhotoResolution;

                typedef enum CameraCaptureUIMaxVideoResolution CameraCaptureUIMaxVideoResolution;

                typedef enum CameraCaptureUIMode CameraCaptureUIMode;

                typedef enum CameraCaptureUIPhotoFormat CameraCaptureUIPhotoFormat;

                typedef enum CameraCaptureUIVideoFormat CameraCaptureUIVideoFormat;

                interface ICameraCaptureUI;

                interface ICameraCaptureUIFactory;

                interface ICameraCaptureUIPhotoCaptureSettings;

                interface ICameraCaptureUIVideoCaptureSettings;

                runtimeclass CameraCaptureUI;

                runtimeclass CameraCaptureUIPhotoCaptureSettings;

                runtimeclass CameraCaptureUIVideoCaptureSettings;
            }
        }
    }
}

// Generic instantiations

// Type definition
namespace Microsoft
{
    namespace Windows
    {
        namespace Media
        {
            namespace Capture
            {
                [contractversion(1.0)]
                apicontract CameraCaptureUIContract
                {
                }

                [contract(Microsoft.Windows.Media.Capture.CameraCaptureUIContract, 1.0)]
                enum CameraCaptureUIMaxPhotoResolution
                {
                    HighestAvailable = 0,
                    VerySmallQvga    = 1,
                    SmallVga         = 2,
                    MediumXga        = 3,
                    Large3M          = 4,
                    VeryLarge5M      = 5
                };

                [contract(Microsoft.Windows.Media.Capture.CameraCaptureUIContract, 1.0)]
                enum CameraCaptureUIMaxVideoResolution
                {
                    HighestAvailable   = 0,
                    LowDefinition      = 1,
                    StandardDefinition = 2,
                    HighDefinition     = 3
                };

                [contract(Microsoft.Windows.Media.Capture.CameraCaptureUIContract, 1.0)]
                enum CameraCaptureUIMode
                {
                    PhotoOrVideo = 0,
                    Photo        = 1,
                    Video        = 2
                };

                [contract(Microsoft.Windows.Media.Capture.CameraCaptureUIContract, 1.0)]
                enum CameraCaptureUIPhotoFormat
                {
                    Jpeg   = 0,
                    Png    = 1,
                    JpegXR = 2
                };

                [contract(Microsoft.Windows.Media.Capture.CameraCaptureUIContract, 1.0)]
                enum CameraCaptureUIVideoFormat
                {
                    Mp4 = 0,
                    Wmv = 1
                };

                [contract(Microsoft.Windows.Media.Capture.CameraCaptureUIContract, 1.0)]
                [exclusiveto(Microsoft.Windows.Media.Capture.CameraCaptureUI)]
                [uuid(C001D024-C617-5742-9AE1-8FD31BE07F6C)]
                interface ICameraCaptureUI : IInspectable
                {
                    [propget] HRESULT PhotoSettings([out] [retval] Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings** value);
                    [propget] HRESULT VideoSettings([out] [retval] Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings** value);
                    HRESULT CaptureFileAsync([in] Microsoft.Windows.Media.Capture.CameraCaptureUIMode mode, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Storage.StorageFile*>** operation);
                }

                [contract(Microsoft.Windows.Media.Capture.CameraCaptureUIContract, 1.0)]
                [exclusiveto(Microsoft.Windows.Media.Capture.CameraCaptureUI)]
                [uuid(2B49623D-5F22-5FEE-991F-14F24592A3C2)]
                interface ICameraCaptureUIFactory : IInspectable
                {
                    HRESULT CreateInstance([in] Microsoft.UI.WindowId windowId, [out] [retval] Microsoft.Windows.Media.Capture.CameraCaptureUI** value);
                }

                [contract(Microsoft.Windows.Media.Capture.CameraCaptureUIContract, 1.0)]
                [exclusiveto(Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoCaptureSettings)]
                [uuid(19FE2155-D018-53FC-BBDC-5781A94687A0)]
                interface ICameraCaptureUIPhotoCaptureSettings : IInspectable
                {
                    [propget] HRESULT AllowCropping([out] [retval] boolean* value);
                    [propput] HRESULT AllowCropping([in] boolean value);
                    [propget] HRESULT CroppedAspectRatio([out] [retval] Windows.Foundation.Size* value);
                    [propput] HRESULT CroppedAspectRatio([in] Windows.Foundation.Size value);
                    [propget] HRESULT CroppedSizeInPixels([out] [retval] Windows.Foundation.Size* value);
                    [propput] HRESULT CroppedSizeInPixels([in] Windows.Foundation.Size value);
                    [propget] HRESULT Format([out] [retval] Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoFormat* value);
                    [propput] HRESULT Format([in] Microsoft.Windows.Media.Capture.CameraCaptureUIPhotoFormat value);
                    [propget] HRESULT MaxResolution([out] [retval] Microsoft.Windows.Media.Capture.CameraCaptureUIMaxPhotoResolution* value);
                    [propput] HRESULT MaxResolution([in] Microsoft.Windows.Media.Capture.CameraCaptureUIMaxPhotoResolution value);
                }

                [contract(Microsoft.Windows.Media.Capture.CameraCaptureUIContract, 1.0)]
                [exclusiveto(Microsoft.Windows.Media.Capture.CameraCaptureUIVideoCaptureSettings)]
                [uuid(47DD74F6-83B7-5123-BBDF-D757201D1EE8)]
                interface ICameraCaptureUIVideoCaptureSettings : IInspectable
                {
                    [propget] HRESULT AllowTrimming([out] [retval] boolean* value);
                    [propput] HRESULT AllowTrimming([in] boolean value);
                    [propget] HRESULT Format([out] [retval] Microsoft.Windows.Media.Capture.CameraCaptureUIVideoFormat* value);
                    [propput] HRESULT Format([in] Microsoft.Windows.Media.Capture.CameraCaptureUIVideoFormat value);
                    [propget] HRESULT MaxDurationInSeconds([out] [retval] FLOAT* value);
                    [propput] HRESULT MaxDurationInSeconds([in] FLOAT value);
                    [propget] HRESULT MaxResolution([out] [retval] Microsoft.Windows.Media.Capture.CameraCaptureUIMaxVideoResolution* value);
                    [propput] HRESULT MaxResolution([in] Microsoft.Windows.Media.Capture.CameraCaptureUIMaxVideoResolution value);
                }

                [activatable(Microsoft.Windows.Media.Capture.ICameraCaptureUIFactory, Microsoft.Windows.Media.Capture.CameraCaptureUIContract, 1.0)]
                [contract(Microsoft.Windows.Media.Capture.CameraCaptureUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass CameraCaptureUI
                {
                    [default] interface Microsoft.Windows.Media.Capture.ICameraCaptureUI;
                }

                [activatable(Microsoft.Windows.Media.Capture.CameraCaptureUIContract, 1.0)]
                [contract(Microsoft.Windows.Media.Capture.CameraCaptureUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass CameraCaptureUIPhotoCaptureSettings
                {
                    [default] interface Microsoft.Windows.Media.Capture.ICameraCaptureUIPhotoCaptureSettings;
                }

                [activatable(Microsoft.Windows.Media.Capture.CameraCaptureUIContract, 1.0)]
                [contract(Microsoft.Windows.Media.Capture.CameraCaptureUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass CameraCaptureUIVideoCaptureSettings
                {
                    [default] interface Microsoft.Windows.Media.Capture.ICameraCaptureUIVideoCaptureSettings;
                }
            }
        }
    }
}
