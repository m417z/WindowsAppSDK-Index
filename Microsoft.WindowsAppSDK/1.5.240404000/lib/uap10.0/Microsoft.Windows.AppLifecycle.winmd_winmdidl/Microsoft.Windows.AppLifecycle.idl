//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Windows.ApplicationModel.Core.idl";

// Forward Declare
namespace Windows
{
    namespace ApplicationModel
    {
        namespace Core
        {
            typedef enum AppRestartFailureReason AppRestartFailureReason;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        interface IAsyncAction;
    }
}
namespace Microsoft
{
    namespace Windows
    {
        namespace AppLifecycle
        {
            apicontract AppLifecycleContract;

            typedef enum ExtendedActivationKind ExtendedActivationKind;

            interface IActivationRegistrationManagerStatics;

            interface IAppActivationArguments;

            interface IAppInstance;

            interface IAppInstanceStatics;

            interface IAppInstanceStatics2;

            runtimeclass ActivationRegistrationManager;

            runtimeclass AppActivationArguments;

            runtimeclass AppInstance;
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace Windows
    {
        namespace AppLifecycle
        {
            declare
            {
                interface Windows.Foundation.Collections.IIterable<Microsoft.Windows.AppLifecycle.AppInstance*>;

                interface Windows.Foundation.Collections.IIterator<Microsoft.Windows.AppLifecycle.AppInstance*>;

                interface Windows.Foundation.Collections.IVectorView<Microsoft.Windows.AppLifecycle.AppInstance*>;

                interface Windows.Foundation.Collections.IVector<Microsoft.Windows.AppLifecycle.AppInstance*>;

                interface Windows.Foundation.EventHandler<Microsoft.Windows.AppLifecycle.AppActivationArguments*>;
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace Windows
    {
        namespace AppLifecycle
        {
            [contractversion(2.0)]
            apicontract AppLifecycleContract
            {
            }

            [contract(Microsoft.Windows.AppLifecycle.AppLifecycleContract, 1.0)]
            enum ExtendedActivationKind
            {
                Launch                              = 0,
                Search                              = 1,
                ShareTarget                         = 2,
                File                                = 3,
                Protocol                            = 4,
                FileOpenPicker                      = 5,
                FileSavePicker                      = 6,
                CachedFileUpdater                   = 7,
                ContactPicker                       = 8,
                Device                              = 9,
                PrintTaskSettings                   = 10,
                CameraSettings                      = 11,
                RestrictedLaunch                    = 12,
                AppointmentsProvider                = 13,
                Contact                             = 14,
                LockScreenCall                      = 15,
                VoiceCommand                        = 16,
                LockScreen                          = 17,
                PickerReturned                      = 1000,
                WalletAction                        = 1001,
                PickFileContinuation                = 1002,
                PickSaveFileContinuation            = 1003,
                PickFolderContinuation              = 1004,
                WebAuthenticationBrokerContinuation = 1005,
                WebAccountProvider                  = 1006,
                ComponentUI                         = 1007,
                ProtocolForResults                  = 1009,
                ToastNotification                   = 1010,
                Print3DWorkflow                     = 1011,
                DialReceiver                        = 1012,
                DevicePairing                       = 1013,
                UserDataAccountsProvider            = 1014,
                FilePickerExperience                = 1015,
                LockScreenComponent                 = 1016,
                ContactPanel                        = 1017,
                PrintWorkflowForegroundTask         = 1018,
                GameUIProvider                      = 1019,
                StartupTask                         = 1020,
                CommandLineLaunch                   = 1021,
                BarcodeScannerProvider              = 1022,
                PrintSupportJobUI                   = 1023,
                PrintSupportSettingsUI              = 1024,
                PhoneCallActivation                 = 1025,
                VpnForeground                       = 1026,
                Push                                = 5000,
                [contract(Microsoft.Windows.AppLifecycle.AppLifecycleContract, 2.0)]
                AppNotification                     = 5001
            };

            [contract(Microsoft.Windows.AppLifecycle.AppLifecycleContract, 1.0)]
            [exclusiveto(Microsoft.Windows.AppLifecycle.ActivationRegistrationManager)]
            [uuid(5AC4E92E-017B-5D68-8198-F68636AB99D3)]
            interface IActivationRegistrationManagerStatics : IInspectable
            {
                HRESULT RegisterForFileTypeActivation([in] UINT32 __supportedFileTypesSize, [in] [size_is(__supportedFileTypesSize)] HSTRING* supportedFileTypes, [in] HSTRING logo, [in] HSTRING displayName, [in] UINT32 __supportedVerbsSize, [in] [size_is(__supportedVerbsSize)] HSTRING* supportedVerbs, [in] HSTRING exePath);
                HRESULT RegisterForProtocolActivation([in] HSTRING scheme, [in] HSTRING logo, [in] HSTRING displayName, [in] HSTRING exePath);
                HRESULT RegisterForStartupActivation([in] HSTRING taskId, [in] HSTRING exePath);
                HRESULT UnregisterForFileTypeActivation([in] UINT32 __fileTypesSize, [in] [size_is(__fileTypesSize)] HSTRING* fileTypes, [in] HSTRING exePath);
                HRESULT UnregisterForProtocolActivation([in] HSTRING scheme, [in] HSTRING exePath);
                HRESULT UnregisterForStartupActivation([in] HSTRING taskId);
            }

            [contract(Microsoft.Windows.AppLifecycle.AppLifecycleContract, 1.0)]
            [exclusiveto(Microsoft.Windows.AppLifecycle.AppActivationArguments)]
            [uuid(14F99EAF-1580-5062-BDC8-D5D1C31138FB)]
            interface IAppActivationArguments : IInspectable
            {
                [propget] HRESULT Kind([out] [retval] Microsoft.Windows.AppLifecycle.ExtendedActivationKind* value);
                [propget] HRESULT Data([out] [retval] IInspectable** value);
            }

            [contract(Microsoft.Windows.AppLifecycle.AppLifecycleContract, 1.0)]
            [exclusiveto(Microsoft.Windows.AppLifecycle.AppInstance)]
            [uuid(75766AE4-0239-5A26-B9DA-D5BFC75A4866)]
            interface IAppInstance : IInspectable
            {
                HRESULT UnregisterKey();
                HRESULT RedirectActivationToAsync([in] Microsoft.Windows.AppLifecycle.AppActivationArguments* args, [out] [retval] Windows.Foundation.IAsyncAction** operation);
                HRESULT GetActivatedEventArgs([out] [retval] Microsoft.Windows.AppLifecycle.AppActivationArguments** result);
                [eventadd] HRESULT Activated([in] Windows.Foundation.EventHandler<Microsoft.Windows.AppLifecycle.AppActivationArguments*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT Activated([in] EventRegistrationToken token);
                [propget] HRESULT Key([out] [retval] HSTRING* value);
                [propget] HRESULT IsCurrent([out] [retval] boolean* value);
                [propget] HRESULT ProcessId([out] [retval] UINT32* value);
            }

            [contract(Microsoft.Windows.AppLifecycle.AppLifecycleContract, 1.0)]
            [exclusiveto(Microsoft.Windows.AppLifecycle.AppInstance)]
            [uuid(4F414B25-8330-5A9B-BBC1-8229D479649D)]
            interface IAppInstanceStatics : IInspectable
            {
                HRESULT GetCurrent([out] [retval] Microsoft.Windows.AppLifecycle.AppInstance** result);
                HRESULT GetInstances([out] [retval] Windows.Foundation.Collections.IVector<Microsoft.Windows.AppLifecycle.AppInstance*>** result);
                HRESULT FindOrRegisterForKey([in] HSTRING key, [out] [retval] Microsoft.Windows.AppLifecycle.AppInstance** result);
            }

            [contract(Microsoft.Windows.AppLifecycle.AppLifecycleContract, 2.0)]
            [exclusiveto(Microsoft.Windows.AppLifecycle.AppInstance)]
            [uuid(FE9F1885-7160-5397-BA9B-5890B24FDC04)]
            interface IAppInstanceStatics2 : IInspectable
            {
                HRESULT Restart([in] HSTRING arguments, [out] [retval] Windows.ApplicationModel.Core.AppRestartFailureReason* result);
            }

            [contract(Microsoft.Windows.AppLifecycle.AppLifecycleContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Microsoft.Windows.AppLifecycle.IActivationRegistrationManagerStatics, Microsoft.Windows.AppLifecycle.AppLifecycleContract, 1.0)]
            [threading(both)]
            runtimeclass ActivationRegistrationManager
            {
            }

            [contract(Microsoft.Windows.AppLifecycle.AppLifecycleContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass AppActivationArguments
            {
                [default] interface Microsoft.Windows.AppLifecycle.IAppActivationArguments;
            }

            [contract(Microsoft.Windows.AppLifecycle.AppLifecycleContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Microsoft.Windows.AppLifecycle.IAppInstanceStatics, Microsoft.Windows.AppLifecycle.AppLifecycleContract, 1.0)]
            [static(Microsoft.Windows.AppLifecycle.IAppInstanceStatics2, Microsoft.Windows.AppLifecycle.AppLifecycleContract, 2.0)]
            [threading(both)]
            runtimeclass AppInstance
            {
                [default] interface Microsoft.Windows.AppLifecycle.IAppInstance;
            }
        }
    }
}
