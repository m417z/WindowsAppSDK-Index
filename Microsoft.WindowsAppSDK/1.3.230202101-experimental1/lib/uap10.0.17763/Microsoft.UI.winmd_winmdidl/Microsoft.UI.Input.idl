//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Microsoft.Foundation.idl";
import "Microsoft.UI.idl";
import "Microsoft.UI.Composition.idl";
import "Microsoft.UI.Content.idl";
import "Microsoft.UI.Dispatching.idl";
import "Windows.Graphics.idl";
import "Windows.System.idl";
import "Windows.UI.Core.idl";

// Forward Declare
namespace Microsoft
{
    namespace Foundation
    {
        apicontract WindowsAppSDKContract;
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Composition
        {
            runtimeclass Visual;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Content
        {
            runtimeclass ContentIsland;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Dispatching
        {
            runtimeclass DispatcherQueue;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        typedef struct WindowId WindowId;
    }
}
namespace Windows
{
    namespace Foundation
    {
        interface IClosable;

        typedef struct Point Point;

        typedef struct Rect Rect;

        typedef struct TimeSpan TimeSpan;
    }
}
namespace Windows
{
    namespace Graphics
    {
        typedef struct RectInt32 RectInt32;
    }
}
namespace Windows
{
    namespace System
    {
        typedef enum VirtualKey VirtualKey;

        typedef enum VirtualKeyModifiers VirtualKeyModifiers;
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Core
        {
            runtimeclass CoreCursor;

            typedef enum CoreVirtualKeyStates CoreVirtualKeyStates;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Input
        {
            typedef enum CrossSlidingState CrossSlidingState;

            typedef enum DraggingState DraggingState;

            typedef enum GestureSettings GestureSettings;

            typedef enum HoldingState HoldingState;

            typedef enum InputActivationState InputActivationState;

            typedef enum InputPointerActivationBehavior InputPointerActivationBehavior;

            typedef enum InputPointerSourceDeviceKinds InputPointerSourceDeviceKinds;

            typedef enum InputSystemCursorShape InputSystemCursorShape;

            typedef enum NonClientRegionKind NonClientRegionKind;

            typedef enum PointerDeviceType PointerDeviceType;

            typedef enum PointerUpdateKind PointerUpdateKind;

            typedef enum VirtualKeyStates VirtualKeyStates;

            typedef struct CrossSlideThresholds CrossSlideThresholds;

            typedef struct ManipulationDelta ManipulationDelta;

            typedef struct ManipulationVelocities ManipulationVelocities;

            typedef struct PhysicalKeyStatus PhysicalKeyStatus;

            typedef struct ProximityEvaluation ProximityEvaluation;

            interface ICharacterReceivedEventArgs;

            interface IContextMenuKeyEventArgs;

            interface ICrossSlidingEventArgs;

            interface IDraggingEventArgs;

            interface IGestureRecognizer;

            interface IHoldingEventArgs;

            interface IInputActivationListener;

            interface IInputActivationListenerActivationChangedEventArgs;

            interface IInputActivationListenerStatics;

            interface IInputActivationListenerStatics2;

            interface IInputCursor;

            interface IInputCursorFactory;

            interface IInputCursorStatics;

            interface IInputCustomCursor;

            interface IInputCustomCursorFactory;

            interface IInputDesktopNamedResourceCursor;

            interface IInputDesktopNamedResourceCursorStatics;

            interface IInputDesktopResourceCursor;

            interface IInputDesktopResourceCursorStatics;

            interface IInputFocusChangedEventArgs;

            interface IInputKeyboardSource;

            interface IInputKeyboardSource2;

            interface IInputKeyboardSourceStatics;

            interface IInputKeyboardSourceStatics2;

            interface IInputLightDismissAction;

            interface IInputLightDismissActionStatics;

            interface IInputLightDismissActionStatics2;

            interface IInputLightDismissEventArgs;

            interface IInputNonClientPointerSource;

            interface IInputNonClientPointerSourceStatics;

            interface IInputObject;

            interface IInputObjectFactory;

            interface IInputPointerSource;

            interface IInputPointerSource2;

            interface IInputPointerSourceStatics;

            interface IInputSystemCursor;

            interface IInputSystemCursorStatics;

            interface IKeyEventArgs;

            interface IManipulationCompletedEventArgs;

            interface IManipulationInertiaStartingEventArgs;

            interface IManipulationStartedEventArgs;

            interface IManipulationUpdatedEventArgs;

            interface IMouseWheelParameters;

            interface INonClientRegionCaptionTappedEventArgs;

            interface INonClientRegionHoverEventArgs;

            interface IPointerEventArgs;

            interface IPointerPoint;

            interface IPointerPointProperties;

            interface IPointerPointTransform;

            interface IPointerPredictor;

            interface IPointerPredictorStatics;

            interface IRightTappedEventArgs;

            interface ITappedEventArgs;

            interface ITouchHitTestingEventArgs;

            runtimeclass CharacterReceivedEventArgs;

            runtimeclass ContextMenuKeyEventArgs;

            runtimeclass CrossSlidingEventArgs;

            runtimeclass DraggingEventArgs;

            runtimeclass GestureRecognizer;

            runtimeclass HoldingEventArgs;

            runtimeclass InputActivationListener;

            runtimeclass InputActivationListenerActivationChangedEventArgs;

            runtimeclass InputCursor;

            runtimeclass InputCustomCursor;

            runtimeclass InputDesktopNamedResourceCursor;

            runtimeclass InputDesktopResourceCursor;

            runtimeclass InputFocusChangedEventArgs;

            runtimeclass InputKeyboardSource;

            runtimeclass InputLightDismissAction;

            runtimeclass InputLightDismissEventArgs;

            runtimeclass InputNonClientPointerSource;

            runtimeclass InputObject;

            runtimeclass InputPointerSource;

            runtimeclass InputSystemCursor;

            runtimeclass KeyEventArgs;

            runtimeclass ManipulationCompletedEventArgs;

            runtimeclass ManipulationInertiaStartingEventArgs;

            runtimeclass ManipulationStartedEventArgs;

            runtimeclass ManipulationUpdatedEventArgs;

            runtimeclass MouseWheelParameters;

            runtimeclass NonClientRegionCaptionTappedEventArgs;

            runtimeclass NonClientRegionHoverEventArgs;

            runtimeclass PointerEventArgs;

            runtimeclass PointerPoint;

            runtimeclass PointerPointProperties;

            runtimeclass PointerPredictor;

            runtimeclass RightTappedEventArgs;

            runtimeclass TappedEventArgs;

            runtimeclass TouchHitTestingEventArgs;
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace UI
    {
        namespace Input
        {
            declare
            {
                interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Input.PointerPoint*>;

                interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Input.PointerPoint*>;

                interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Input.PointerPoint*>;

                interface Windows.Foundation.Collections.IVector<Microsoft.UI.Input.PointerPoint*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.GestureRecognizer*, Microsoft.UI.Input.CrossSlidingEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.GestureRecognizer*, Microsoft.UI.Input.DraggingEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.GestureRecognizer*, Microsoft.UI.Input.HoldingEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.GestureRecognizer*, Microsoft.UI.Input.ManipulationCompletedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.GestureRecognizer*, Microsoft.UI.Input.ManipulationInertiaStartingEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.GestureRecognizer*, Microsoft.UI.Input.ManipulationStartedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.GestureRecognizer*, Microsoft.UI.Input.ManipulationUpdatedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.GestureRecognizer*, Microsoft.UI.Input.RightTappedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.GestureRecognizer*, Microsoft.UI.Input.TappedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputActivationListener*, Microsoft.UI.Input.InputActivationListenerActivationChangedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputKeyboardSource*, Microsoft.UI.Input.CharacterReceivedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputKeyboardSource*, Microsoft.UI.Input.ContextMenuKeyEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputKeyboardSource*, Microsoft.UI.Input.InputFocusChangedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputKeyboardSource*, Microsoft.UI.Input.KeyEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputLightDismissAction*, Microsoft.UI.Input.InputLightDismissEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputNonClientPointerSource*, Microsoft.UI.Input.NonClientRegionCaptionTappedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputNonClientPointerSource*, Microsoft.UI.Input.NonClientRegionHoverEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputPointerSource*, Microsoft.UI.Input.PointerEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputPointerSource*, Microsoft.UI.Input.TouchHitTestingEventArgs*>;
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace UI
    {
        namespace Input
        {
            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            enum CrossSlidingState
            {
                Started            = 0,
                Dragging           = 1,
                Selecting          = 2,
                SelectSpeedBumping = 3,
                SpeedBumping       = 4,
                Rearranging        = 5,
                Completed          = 6
            };

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            enum DraggingState
            {
                Started    = 0,
                Continuing = 1,
                Completed  = 2
            };

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [flags]
            enum GestureSettings
            {
                None                              = 0x0,
                Tap                               = 0x1,
                DoubleTap                         = 0x2,
                Hold                              = 0x4,
                HoldWithMouse                     = 0x8,
                RightTap                          = 0x10,
                Drag                              = 0x20,
                ManipulationTranslateX            = 0x40,
                ManipulationTranslateY            = 0x80,
                ManipulationTranslateRailsX       = 0x100,
                ManipulationTranslateRailsY       = 0x200,
                ManipulationRotate                = 0x400,
                ManipulationScale                 = 0x800,
                ManipulationTranslateInertia      = 0x1000,
                ManipulationRotateInertia         = 0x2000,
                ManipulationScaleInertia          = 0x4000,
                CrossSlide                        = 0x8000,
                ManipulationMultipleFingerPanning = 0x10000
            };

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            enum HoldingState
            {
                Started   = 0,
                Completed = 1,
                Canceled  = 2
            };

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.1)]
            enum InputActivationState
            {
                None        = 0,
                Deactivated = 1,
                Activated   = 2
            };

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [experimental]
            enum InputPointerActivationBehavior
            {
                Default    = 0,
                Activate   = 1,
                NoActivate = 3
            };

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [flags]
            enum InputPointerSourceDeviceKinds
            {
                None  = 0x0,
                Touch = 0x1,
                Pen   = 0x2,
                Mouse = 0x4
            };

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            enum InputSystemCursorShape
            {
                Arrow                  = 0,
                Cross                  = 1,
                Hand                   = 3,
                Help                   = 4,
                IBeam                  = 5,
                SizeAll                = 6,
                SizeNortheastSouthwest = 7,
                SizeNorthSouth         = 8,
                SizeNorthwestSoutheast = 9,
                SizeWestEast           = 10,
                UniversalNo            = 11,
                UpArrow                = 12,
                Wait                   = 13,
                Pin                    = 14,
                Person                 = 15,
                AppStarting            = 16
            };

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [experimental]
            enum NonClientRegionKind
            {
                None         = 0,
                Close        = 1,
                Maximize     = 2,
                Minimize     = 3,
                Icon         = 4,
                Caption      = 5,
                TopBorder    = 6,
                LeftBorder   = 7,
                BottomBorder = 8,
                RightBorder  = 9,
                Transparent  = 10
            };

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            enum PointerDeviceType
            {
                Touch    = 0,
                Pen      = 1,
                Mouse    = 2,
                Touchpad = 3
            };

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            enum PointerUpdateKind
            {
                Other                = 0,
                LeftButtonPressed    = 1,
                LeftButtonReleased   = 2,
                RightButtonPressed   = 3,
                RightButtonReleased  = 4,
                MiddleButtonPressed  = 5,
                MiddleButtonReleased = 6,
                XButton1Pressed      = 7,
                XButton1Released     = 8,
                XButton2Pressed      = 9,
                XButton2Released     = 10
            };

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [experimental]
            [flags]
            enum VirtualKeyStates
            {
                None   = 0x0,
                Down   = 0x1,
                Locked = 0x2
            };

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            struct CrossSlideThresholds
            {
                FLOAT SelectionStart;
                FLOAT SpeedBumpStart;
                FLOAT SpeedBumpEnd;
                FLOAT RearrangeStart;
            };

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            struct ManipulationDelta
            {
                Windows.Foundation.Point Translation;
                FLOAT Scale;
                FLOAT Rotation;
                FLOAT Expansion;
            };

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            struct ManipulationVelocities
            {
                Windows.Foundation.Point Linear;
                FLOAT Angular;
                FLOAT Expansion;
            };

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [experimental]
            struct PhysicalKeyStatus
            {
                UINT32 RepeatCount;
                UINT32 ScanCode;
                boolean IsExtendedKey;
                boolean IsMenuKeyDown;
                boolean WasKeyDown;
                boolean IsKeyReleased;
            };

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [experimental]
            struct ProximityEvaluation
            {
                INT32 Score;
                Windows.Foundation.Point AdjustedPoint;
            };

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [exclusiveto(Microsoft.UI.Input.CharacterReceivedEventArgs)]
            [experimental]
            [uuid(36122718-9263-592B-8D87-8F86543FFC95)]
            interface ICharacterReceivedEventArgs : IInspectable
            {
                [propget] HRESULT Handled([out] [retval] boolean* value);
                [propput] HRESULT Handled([in] boolean value);
                [propget] HRESULT KeyCode([out] [retval] UINT32* value);
                [propget] HRESULT KeyStatus([out] [retval] Microsoft.UI.Input.PhysicalKeyStatus* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [exclusiveto(Microsoft.UI.Input.ContextMenuKeyEventArgs)]
            [experimental]
            [uuid(F6025762-9426-541A-B647-037ABDBECEFC)]
            interface IContextMenuKeyEventArgs : IInspectable
            {
                [propget] HRESULT Handled([out] [retval] boolean* value);
                [propput] HRESULT Handled([in] boolean value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.CrossSlidingEventArgs)]
            [uuid(7679641F-BA9F-543C-A7C8-6229A98F89EF)]
            interface ICrossSlidingEventArgs : IInspectable
            {
                [propget] HRESULT CrossSlidingState([out] [retval] Microsoft.UI.Input.CrossSlidingState* value);
                [propget] HRESULT PointerDeviceType([out] [retval] Microsoft.UI.Input.PointerDeviceType* value);
                [propget] HRESULT Position([out] [retval] Windows.Foundation.Point* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.DraggingEventArgs)]
            [uuid(3EFB1B75-3D3B-550E-963D-0828CA76128A)]
            interface IDraggingEventArgs : IInspectable
            {
                [propget] HRESULT DraggingState([out] [retval] Microsoft.UI.Input.DraggingState* value);
                [propget] HRESULT PointerDeviceType([out] [retval] Microsoft.UI.Input.PointerDeviceType* value);
                [propget] HRESULT Position([out] [retval] Windows.Foundation.Point* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.GestureRecognizer)]
            [uuid(CDA89AFC-6BD0-595C-BA37-545FCE5BF016)]
            interface IGestureRecognizer : IInspectable
            {
                [propget] HRESULT AutoProcessInertia([out] [retval] boolean* value);
                [propput] HRESULT AutoProcessInertia([in] boolean value);
                [propget] HRESULT CrossSlideExact([out] [retval] boolean* value);
                [propput] HRESULT CrossSlideExact([in] boolean value);
                [propget] HRESULT CrossSlideHorizontally([out] [retval] boolean* value);
                [propput] HRESULT CrossSlideHorizontally([in] boolean value);
                [propget] HRESULT CrossSlideThresholds([out] [retval] Microsoft.UI.Input.CrossSlideThresholds* value);
                [propput] HRESULT CrossSlideThresholds([in] Microsoft.UI.Input.CrossSlideThresholds value);
                [propget] HRESULT GestureSettings([out] [retval] Microsoft.UI.Input.GestureSettings* value);
                [propput] HRESULT GestureSettings([in] Microsoft.UI.Input.GestureSettings value);
                [propget] HRESULT IsActive([out] [retval] boolean* value);
                [propget] HRESULT IsInertial([out] [retval] boolean* value);
                [propget] HRESULT PivotCenter([out] [retval] Windows.Foundation.Point* value);
                [propput] HRESULT PivotCenter([in] Windows.Foundation.Point value);
                [propget] HRESULT PivotRadius([out] [retval] FLOAT* value);
                [propput] HRESULT PivotRadius([in] FLOAT value);
                [propget] HRESULT InertiaExpansionDeceleration([out] [retval] FLOAT* value);
                [propput] HRESULT InertiaExpansionDeceleration([in] FLOAT value);
                [propget] HRESULT InertiaExpansion([out] [retval] FLOAT* value);
                [propput] HRESULT InertiaExpansion([in] FLOAT value);
                [propget] HRESULT InertiaRotationAngle([out] [retval] FLOAT* value);
                [propput] HRESULT InertiaRotationAngle([in] FLOAT value);
                [propget] HRESULT InertiaRotationDeceleration([out] [retval] FLOAT* value);
                [propput] HRESULT InertiaRotationDeceleration([in] FLOAT value);
                [propget] HRESULT InertiaTranslationDeceleration([out] [retval] FLOAT* value);
                [propput] HRESULT InertiaTranslationDeceleration([in] FLOAT value);
                [propget] HRESULT InertiaTranslationDisplacement([out] [retval] FLOAT* value);
                [propput] HRESULT InertiaTranslationDisplacement([in] FLOAT value);
                [propget] HRESULT ManipulationExact([out] [retval] boolean* value);
                [propput] HRESULT ManipulationExact([in] boolean value);
                [propget] HRESULT MouseWheelParameters([out] [retval] Microsoft.UI.Input.MouseWheelParameters** value);
                [propget] HRESULT ShowGestureFeedback([out] [retval] boolean* value);
                [propput] HRESULT ShowGestureFeedback([in] boolean value);
                HRESULT CanBeDoubleTap([in] Microsoft.UI.Input.PointerPoint* value, [out] [retval] boolean* result);
                HRESULT CompleteGesture();
                HRESULT ProcessDownEvent([in] Microsoft.UI.Input.PointerPoint* value);
                HRESULT ProcessMoveEvents([in] Windows.Foundation.Collections.IVector<Microsoft.UI.Input.PointerPoint*>* value);
                HRESULT ProcessMouseWheelEvent([in] Microsoft.UI.Input.PointerPoint* value, [in] boolean isShiftKeyDown, [in] boolean isControlKeyDown);
                HRESULT ProcessInertia();
                HRESULT ProcessUpEvent([in] Microsoft.UI.Input.PointerPoint* value);
                [eventadd] HRESULT Tapped([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.GestureRecognizer*, Microsoft.UI.Input.TappedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT Tapped([in] EventRegistrationToken token);
                [eventadd] HRESULT RightTapped([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.GestureRecognizer*, Microsoft.UI.Input.RightTappedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT RightTapped([in] EventRegistrationToken token);
                [eventadd] HRESULT Holding([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.GestureRecognizer*, Microsoft.UI.Input.HoldingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT Holding([in] EventRegistrationToken token);
                [eventadd] HRESULT Dragging([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.GestureRecognizer*, Microsoft.UI.Input.DraggingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT Dragging([in] EventRegistrationToken token);
                [eventadd] HRESULT ManipulationStarted([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.GestureRecognizer*, Microsoft.UI.Input.ManipulationStartedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT ManipulationStarted([in] EventRegistrationToken token);
                [eventadd] HRESULT ManipulationUpdated([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.GestureRecognizer*, Microsoft.UI.Input.ManipulationUpdatedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT ManipulationUpdated([in] EventRegistrationToken token);
                [eventadd] HRESULT ManipulationInertiaStarting([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.GestureRecognizer*, Microsoft.UI.Input.ManipulationInertiaStartingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT ManipulationInertiaStarting([in] EventRegistrationToken token);
                [eventadd] HRESULT ManipulationCompleted([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.GestureRecognizer*, Microsoft.UI.Input.ManipulationCompletedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT ManipulationCompleted([in] EventRegistrationToken token);
                [eventadd] HRESULT CrossSliding([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.GestureRecognizer*, Microsoft.UI.Input.CrossSlidingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT CrossSliding([in] EventRegistrationToken token);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.HoldingEventArgs)]
            [uuid(8E449E85-D223-533C-B0B2-BF7C6D10C2DB)]
            interface IHoldingEventArgs : IInspectable
            {
                [propget] HRESULT HoldingState([out] [retval] Microsoft.UI.Input.HoldingState* value);
                [propget] HRESULT PointerDeviceType([out] [retval] Microsoft.UI.Input.PointerDeviceType* value);
                [propget] HRESULT Position([out] [retval] Windows.Foundation.Point* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.1)]
            [exclusiveto(Microsoft.UI.Input.InputActivationListener)]
            [uuid(3B818627-6CE7-5E0D-A0F5-6684FD1AEC78)]
            interface IInputActivationListener : IInspectable
            {
                [propget] HRESULT State([out] [retval] Microsoft.UI.Input.InputActivationState* value);
                [eventadd] HRESULT InputActivationChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputActivationListener*, Microsoft.UI.Input.InputActivationListenerActivationChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT InputActivationChanged([in] EventRegistrationToken token);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.1)]
            [exclusiveto(Microsoft.UI.Input.InputActivationListenerActivationChangedEventArgs)]
            [uuid(7978526B-00B6-5303-8F7D-55BEF36DA786)]
            interface IInputActivationListenerActivationChangedEventArgs : IInspectable
            {
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.1)]
            [exclusiveto(Microsoft.UI.Input.InputActivationListener)]
            [uuid(C4249843-F053-5C99-9D51-720ADE94224D)]
            interface IInputActivationListenerStatics : IInspectable
            {
                HRESULT GetForWindowId([in] Microsoft.UI.WindowId windowId, [out] [retval] Microsoft.UI.Input.InputActivationListener** result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [exclusiveto(Microsoft.UI.Input.InputActivationListener)]
            [experimental]
            [uuid(7EA26120-9636-5292-A7B1-56544AC51A22)]
            interface IInputActivationListenerStatics2 : IInspectable
            {
                HRESULT GetForIsland([in] Microsoft.UI.Content.ContentIsland* content, [out] [retval] Microsoft.UI.Input.InputActivationListener** result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.InputCursor)]
            [uuid(359B15F9-19C2-5714-8432-75176826406B)]
            interface IInputCursor : IInspectable
            {
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.InputCursor)]
            [uuid(2F47647B-4BE0-53E9-BE7E-C38D5459DB6B)]
            interface IInputCursorFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.1)]
            [exclusiveto(Microsoft.UI.Input.InputCursor)]
            [uuid(92F6A552-099F-55FB-8C31-E450284C9643)]
            interface IInputCursorStatics : IInspectable
            {
                HRESULT CreateFromCoreCursor([in] Windows.UI.Core.CoreCursor* cursor, [out] [retval] Microsoft.UI.Input.InputCursor** result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.1)]
            [exclusiveto(Microsoft.UI.Input.InputCustomCursor)]
            [uuid(5486F042-7E1A-5DC8-8041-E47B609A5BA1)]
            interface IInputCustomCursor : IInspectable
            {
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.1)]
            [exclusiveto(Microsoft.UI.Input.InputCustomCursor)]
            [uuid(6F402882-66E0-57D3-89D0-AA5E2FF917BC)]
            interface IInputCustomCursorFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.1)]
            [exclusiveto(Microsoft.UI.Input.InputDesktopNamedResourceCursor)]
            [uuid(F40EA93B-0ED7-5B3A-BFE2-14E2B5AD88A3)]
            interface IInputDesktopNamedResourceCursor : IInspectable
            {
                [propget] HRESULT ModuleName([out] [retval] HSTRING* value);
                [propget] HRESULT ResourceName([out] [retval] HSTRING* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.1)]
            [exclusiveto(Microsoft.UI.Input.InputDesktopNamedResourceCursor)]
            [uuid(E8B6D5AA-898B-5E69-B01F-383A0943E3E4)]
            interface IInputDesktopNamedResourceCursorStatics : IInspectable
            {
                HRESULT Create([in] HSTRING resourceName, [out] [retval] Microsoft.UI.Input.InputDesktopNamedResourceCursor** result);
                HRESULT CreateFromModule([in] HSTRING moduleName, [in] HSTRING resourceName, [out] [retval] Microsoft.UI.Input.InputDesktopNamedResourceCursor** result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.InputDesktopResourceCursor)]
            [uuid(1DF2777F-7C90-58FC-A7A3-D5736C6510FD)]
            interface IInputDesktopResourceCursor : IInspectable
            {
                [propget] HRESULT ModuleName([out] [retval] HSTRING* value);
                [propget] HRESULT ResourceId([out] [retval] UINT32* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.InputDesktopResourceCursor)]
            [uuid(F440DC37-A0B6-56EB-BCEC-B024F2233D47)]
            interface IInputDesktopResourceCursorStatics : IInspectable
            {
                HRESULT Create([in] UINT32 resourceId, [out] [retval] Microsoft.UI.Input.InputDesktopResourceCursor** result);
                HRESULT CreateFromModule([in] HSTRING moduleName, [in] UINT32 resourceId, [out] [retval] Microsoft.UI.Input.InputDesktopResourceCursor** result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [exclusiveto(Microsoft.UI.Input.InputFocusChangedEventArgs)]
            [experimental]
            [uuid(D85B1B7A-045D-5A1B-9966-EBC0B3D47567)]
            interface IInputFocusChangedEventArgs : IInspectable
            {
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.InputKeyboardSource)]
            [uuid(ED61B906-16AD-5DF7-A550-5E6F7D2229F7)]
            interface IInputKeyboardSource : IInspectable
            {
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [exclusiveto(Microsoft.UI.Input.InputKeyboardSource)]
            [experimental]
            [uuid(E73D4328-4432-5375-83DF-D73801DFAA09)]
            interface IInputKeyboardSource2 : IInspectable
            {
                [propget] HRESULT HasFocus([out] [retval] boolean* value);
                HRESULT GetCurrentKeyState([in] Windows.System.VirtualKey virtualKey, [out] [retval] Microsoft.UI.Input.VirtualKeyStates* result);
                HRESULT GetKeyState([in] Windows.System.VirtualKey virtualKey, [out] [retval] Microsoft.UI.Input.VirtualKeyStates* result);
                HRESULT TrySetFocus([out] [retval] boolean* result);
                [eventadd] HRESULT CharacterReceived([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputKeyboardSource*, Microsoft.UI.Input.CharacterReceivedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT CharacterReceived([in] EventRegistrationToken token);
                [eventadd] HRESULT ContextMenuKey([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputKeyboardSource*, Microsoft.UI.Input.ContextMenuKeyEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT ContextMenuKey([in] EventRegistrationToken token);
                [eventadd] HRESULT GotFocus([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputKeyboardSource*, Microsoft.UI.Input.InputFocusChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT GotFocus([in] EventRegistrationToken token);
                [eventadd] HRESULT KeyDown([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputKeyboardSource*, Microsoft.UI.Input.KeyEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT KeyDown([in] EventRegistrationToken token);
                [eventadd] HRESULT KeyUp([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputKeyboardSource*, Microsoft.UI.Input.KeyEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT KeyUp([in] EventRegistrationToken token);
                [eventadd] HRESULT LostFocus([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputKeyboardSource*, Microsoft.UI.Input.InputFocusChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT LostFocus([in] EventRegistrationToken token);
                [eventadd] HRESULT SystemKeyDown([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputKeyboardSource*, Microsoft.UI.Input.KeyEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT SystemKeyDown([in] EventRegistrationToken token);
                [eventadd] HRESULT SystemKeyUp([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputKeyboardSource*, Microsoft.UI.Input.KeyEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT SystemKeyUp([in] EventRegistrationToken token);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.InputKeyboardSource)]
            [uuid(F4E1563D-8C2E-5BCD-B784-47ADEAA3CD7E)]
            interface IInputKeyboardSourceStatics : IInspectable
            {
                HRESULT GetKeyStateForCurrentThread([in] Windows.System.VirtualKey virtualKey, [out] [retval] Windows.UI.Core.CoreVirtualKeyStates* result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [exclusiveto(Microsoft.UI.Input.InputKeyboardSource)]
            [experimental]
            [uuid(3D0DF09D-B028-5672-91E8-5BC91B10DC22)]
            interface IInputKeyboardSourceStatics2 : IInspectable
            {
                HRESULT GetForIsland([in] Microsoft.UI.Content.ContentIsland* content, [out] [retval] Microsoft.UI.Input.InputKeyboardSource** result);
                HRESULT GetForWindowId([in] Microsoft.UI.WindowId windowId, [out] [retval] Microsoft.UI.Input.InputKeyboardSource** result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.InputLightDismissAction)]
            [uuid(E8A39502-A860-502F-8C10-3646D43AECF1)]
            interface IInputLightDismissAction : IInspectable
            {
                [eventadd] HRESULT Dismissed([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputLightDismissAction*, Microsoft.UI.Input.InputLightDismissEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT Dismissed([in] EventRegistrationToken token);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.InputLightDismissAction)]
            [uuid(ED9B8DEF-6496-5169-984D-D44B4E690623)]
            interface IInputLightDismissActionStatics : IInspectable
            {
                HRESULT GetForWindowId([in] Microsoft.UI.WindowId windowId, [out] [retval] Microsoft.UI.Input.InputLightDismissAction** result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [exclusiveto(Microsoft.UI.Input.InputLightDismissAction)]
            [experimental]
            [uuid(C499A8A8-7182-5179-A28C-EAB3F369B6F9)]
            interface IInputLightDismissActionStatics2 : IInspectable
            {
                HRESULT GetForIsland([in] Microsoft.UI.Content.ContentIsland* content, [out] [retval] Microsoft.UI.Input.InputLightDismissAction** result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.InputLightDismissEventArgs)]
            [uuid(078660EE-07CA-5808-B982-E6E899CF098C)]
            interface IInputLightDismissEventArgs : IInspectable
            {
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [exclusiveto(Microsoft.UI.Input.InputNonClientPointerSource)]
            [experimental]
            [uuid(29888DDF-621E-5B5B-9C4A-9BC6196345E0)]
            interface IInputNonClientPointerSource : IInspectable
            {
                HRESULT ConfigureRegion([in] Microsoft.UI.Input.NonClientRegionKind region, [in] UINT32 __rectsSize, [in] [size_is(__rectsSize)] Windows.Graphics.RectInt32* rects);
                HRESULT ClearAllRegions();
                HRESULT ClearRegion([in] Microsoft.UI.Input.NonClientRegionKind region);
                HRESULT QueryRegion([in] Microsoft.UI.Input.NonClientRegionKind region, [out] UINT32* __resultSize, [out] [retval] [size_is(, *__resultSize)] Windows.Graphics.RectInt32** result);
                [eventadd] HRESULT CaptionTapped([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputNonClientPointerSource*, Microsoft.UI.Input.NonClientRegionCaptionTappedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT CaptionTapped([in] EventRegistrationToken token);
                [eventadd] HRESULT Hover([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputNonClientPointerSource*, Microsoft.UI.Input.NonClientRegionHoverEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT Hover([in] EventRegistrationToken token);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [exclusiveto(Microsoft.UI.Input.InputNonClientPointerSource)]
            [experimental]
            [uuid(6C7AD13E-FE96-5BA1-9C1B-39DB2D923C9F)]
            interface IInputNonClientPointerSourceStatics : IInspectable
            {
                HRESULT CreateForWindowId([in] Microsoft.UI.WindowId windowId, [out] [retval] Microsoft.UI.Input.InputNonClientPointerSource** result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.InputObject)]
            [uuid(42EDBC88-D386-544D-B1B8-68617FE68282)]
            interface IInputObject : IInspectable
            {
                [propget] HRESULT DispatcherQueue([out] [retval] Microsoft.UI.Dispatching.DispatcherQueue** value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.InputObject)]
            [uuid(F7786BC2-B0B8-5961-9A57-AE199D452106)]
            interface IInputObjectFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.InputPointerSource)]
            [uuid(6A6C2764-C3F4-5BE5-8447-C9A98766C240)]
            interface IInputPointerSource : IInspectable
            {
                [propget] HRESULT Cursor([out] [retval] Microsoft.UI.Input.InputCursor** value);
                [propput] HRESULT Cursor([in] Microsoft.UI.Input.InputCursor* value);
                [propget] HRESULT DeviceKinds([out] [retval] Microsoft.UI.Input.InputPointerSourceDeviceKinds* value);
                [eventadd] HRESULT PointerCaptureLost([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputPointerSource*, Microsoft.UI.Input.PointerEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT PointerCaptureLost([in] EventRegistrationToken token);
                [eventadd] HRESULT PointerEntered([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputPointerSource*, Microsoft.UI.Input.PointerEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT PointerEntered([in] EventRegistrationToken token);
                [eventadd] HRESULT PointerExited([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputPointerSource*, Microsoft.UI.Input.PointerEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT PointerExited([in] EventRegistrationToken token);
                [eventadd] HRESULT PointerMoved([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputPointerSource*, Microsoft.UI.Input.PointerEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT PointerMoved([in] EventRegistrationToken token);
                [eventadd] HRESULT PointerPressed([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputPointerSource*, Microsoft.UI.Input.PointerEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT PointerPressed([in] EventRegistrationToken token);
                [eventadd] HRESULT PointerReleased([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputPointerSource*, Microsoft.UI.Input.PointerEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT PointerReleased([in] EventRegistrationToken token);
                [eventadd] HRESULT PointerRoutedAway([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputPointerSource*, Microsoft.UI.Input.PointerEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT PointerRoutedAway([in] EventRegistrationToken token);
                [eventadd] HRESULT PointerRoutedReleased([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputPointerSource*, Microsoft.UI.Input.PointerEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT PointerRoutedReleased([in] EventRegistrationToken token);
                [eventadd] HRESULT PointerRoutedTo([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputPointerSource*, Microsoft.UI.Input.PointerEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT PointerRoutedTo([in] EventRegistrationToken token);
                [eventadd] HRESULT PointerWheelChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputPointerSource*, Microsoft.UI.Input.PointerEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT PointerWheelChanged([in] EventRegistrationToken token);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [exclusiveto(Microsoft.UI.Input.InputPointerSource)]
            [experimental]
            [uuid(58757E6E-DA80-5AD2-A088-B90E8E407379)]
            interface IInputPointerSource2 : IInspectable
            {
                HRESULT TrySetDeviceKinds([in] Microsoft.UI.Input.InputPointerSourceDeviceKinds DeviceKinds, [out] [retval] boolean* result);
                [propget] HRESULT ActivationBehavior([out] [retval] Microsoft.UI.Input.InputPointerActivationBehavior* value);
                [propput] HRESULT ActivationBehavior([in] Microsoft.UI.Input.InputPointerActivationBehavior value);
                [eventadd] HRESULT DirectManipulationHitTest([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputPointerSource*, Microsoft.UI.Input.PointerEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT DirectManipulationHitTest([in] EventRegistrationToken token);
                [eventadd] HRESULT TouchHitTesting([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.InputPointerSource*, Microsoft.UI.Input.TouchHitTestingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT TouchHitTesting([in] EventRegistrationToken token);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [exclusiveto(Microsoft.UI.Input.InputPointerSource)]
            [experimental]
            [uuid(55E4D6F5-264D-5248-93C5-E62FF39CA2F8)]
            interface IInputPointerSourceStatics : IInspectable
            {
                HRESULT GetForIsland([in] Microsoft.UI.Content.ContentIsland* content, [out] [retval] Microsoft.UI.Input.InputPointerSource** result);
                HRESULT GetForVisual([in] Microsoft.UI.Composition.Visual* visual, [out] [retval] Microsoft.UI.Input.InputPointerSource** result);
                HRESULT GetForWindowId([in] Microsoft.UI.WindowId windowId, [out] [retval] Microsoft.UI.Input.InputPointerSource** result);
                HRESULT RemoveForVisual([in] Microsoft.UI.Composition.Visual* visual);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.InputSystemCursor)]
            [uuid(59F538E7-C500-59AB-8B54-0BC6100FD49E)]
            interface IInputSystemCursor : IInspectable
            {
                [propget] HRESULT CursorShape([out] [retval] Microsoft.UI.Input.InputSystemCursorShape* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.InputSystemCursor)]
            [uuid(D3860BB6-698A-5814-AEDD-C2FA8BBA5A02)]
            interface IInputSystemCursorStatics : IInspectable
            {
                HRESULT Create([in] Microsoft.UI.Input.InputSystemCursorShape type, [out] [retval] Microsoft.UI.Input.InputSystemCursor** result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [exclusiveto(Microsoft.UI.Input.KeyEventArgs)]
            [experimental]
            [uuid(40D5BB74-977E-5194-8039-9F6C44427BBB)]
            interface IKeyEventArgs : IInspectable
            {
                [propget] HRESULT Handled([out] [retval] boolean* value);
                [propput] HRESULT Handled([in] boolean value);
                [propget] HRESULT KeyStatus([out] [retval] Microsoft.UI.Input.PhysicalKeyStatus* value);
                [propget] HRESULT Timestamp([out] [retval] UINT64* value);
                [propget] HRESULT VirtualKey([out] [retval] Windows.System.VirtualKey* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.ManipulationCompletedEventArgs)]
            [uuid(0E0249D4-46E4-5559-AEE3-FA45CE2A7F56)]
            interface IManipulationCompletedEventArgs : IInspectable
            {
                [propget] HRESULT Cumulative([out] [retval] Microsoft.UI.Input.ManipulationDelta* value);
                [propget] HRESULT PointerDeviceType([out] [retval] Microsoft.UI.Input.PointerDeviceType* value);
                [propget] HRESULT Position([out] [retval] Windows.Foundation.Point* value);
                [propget] HRESULT Velocities([out] [retval] Microsoft.UI.Input.ManipulationVelocities* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.ManipulationInertiaStartingEventArgs)]
            [uuid(ACF9EF71-6E15-56AB-9260-F0D3CE5F66E8)]
            interface IManipulationInertiaStartingEventArgs : IInspectable
            {
                [propget] HRESULT Cumulative([out] [retval] Microsoft.UI.Input.ManipulationDelta* value);
                [propget] HRESULT Delta([out] [retval] Microsoft.UI.Input.ManipulationDelta* value);
                [propget] HRESULT PointerDeviceType([out] [retval] Microsoft.UI.Input.PointerDeviceType* value);
                [propget] HRESULT Position([out] [retval] Windows.Foundation.Point* value);
                [propget] HRESULT Velocities([out] [retval] Microsoft.UI.Input.ManipulationVelocities* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.ManipulationStartedEventArgs)]
            [uuid(4A616613-EEF1-5F1B-A768-0775478D49D4)]
            interface IManipulationStartedEventArgs : IInspectable
            {
                [propget] HRESULT Cumulative([out] [retval] Microsoft.UI.Input.ManipulationDelta* value);
                [propget] HRESULT PointerDeviceType([out] [retval] Microsoft.UI.Input.PointerDeviceType* value);
                [propget] HRESULT Position([out] [retval] Windows.Foundation.Point* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.ManipulationUpdatedEventArgs)]
            [uuid(406E1961-0C98-5FC0-B3D8-116492EF0053)]
            interface IManipulationUpdatedEventArgs : IInspectable
            {
                [propget] HRESULT Cumulative([out] [retval] Microsoft.UI.Input.ManipulationDelta* value);
                [propget] HRESULT Delta([out] [retval] Microsoft.UI.Input.ManipulationDelta* value);
                [propget] HRESULT PointerDeviceType([out] [retval] Microsoft.UI.Input.PointerDeviceType* value);
                [propget] HRESULT Position([out] [retval] Windows.Foundation.Point* value);
                [propget] HRESULT Velocities([out] [retval] Microsoft.UI.Input.ManipulationVelocities* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.MouseWheelParameters)]
            [uuid(6D98BE40-1D56-51D1-AA0D-F325439CD009)]
            interface IMouseWheelParameters : IInspectable
            {
                [propget] HRESULT CharTranslation([out] [retval] Windows.Foundation.Point* value);
                [propput] HRESULT CharTranslation([in] Windows.Foundation.Point value);
                [propget] HRESULT DeltaScale([out] [retval] FLOAT* value);
                [propput] HRESULT DeltaScale([in] FLOAT value);
                [propget] HRESULT DeltaRotationAngle([out] [retval] FLOAT* value);
                [propput] HRESULT DeltaRotationAngle([in] FLOAT value);
                [propget] HRESULT PageTranslation([out] [retval] Windows.Foundation.Point* value);
                [propput] HRESULT PageTranslation([in] Windows.Foundation.Point value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [exclusiveto(Microsoft.UI.Input.NonClientRegionCaptionTappedEventArgs)]
            [experimental]
            [uuid(D385565E-3FDF-5F24-8436-6A8D8718222E)]
            interface INonClientRegionCaptionTappedEventArgs : IInspectable
            {
                [propget] HRESULT PointerDeviceType([out] [retval] Microsoft.UI.Input.PointerDeviceType* value);
                [propget] HRESULT Point([out] [retval] Windows.Foundation.Point* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [exclusiveto(Microsoft.UI.Input.NonClientRegionHoverEventArgs)]
            [experimental]
            [uuid(4AB26762-0562-52D4-B6A8-DA6BB7CA126F)]
            interface INonClientRegionHoverEventArgs : IInspectable
            {
                [propget] HRESULT PointerDeviceType([out] [retval] Microsoft.UI.Input.PointerDeviceType* value);
                [propget] HRESULT Point([out] [retval] Windows.Foundation.Point* value);
                [propget] HRESULT RegionKind([out] [retval] Microsoft.UI.Input.NonClientRegionKind* value);
                [propget] HRESULT IsCaptionButtonCaptured([out] [retval] boolean* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.PointerEventArgs)]
            [uuid(865B188C-2ED5-5DF8-829F-AC0701D5C51A)]
            interface IPointerEventArgs : IInspectable
            {
                [propget] HRESULT CurrentPoint([out] [retval] Microsoft.UI.Input.PointerPoint** value);
                [propget] HRESULT Handled([out] [retval] boolean* value);
                [propput] HRESULT Handled([in] boolean value);
                [propget] HRESULT KeyModifiers([out] [retval] Windows.System.VirtualKeyModifiers* value);
                HRESULT GetIntermediatePoints([out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Input.PointerPoint*>** result);
                HRESULT GetIntermediateTransformedPoints([in] Microsoft.UI.Input.IPointerPointTransform* transform, [out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Input.PointerPoint*>** result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.PointerPoint)]
            [uuid(0D430EE6-252C-59A4-B2A2-D44264DC6A40)]
            interface IPointerPoint : IInspectable
            {
                [propget] HRESULT FrameId([out] [retval] UINT32* value);
                [propget] HRESULT IsInContact([out] [retval] boolean* value);
                [propget] HRESULT PointerDeviceType([out] [retval] Microsoft.UI.Input.PointerDeviceType* value);
                [propget] HRESULT PointerId([out] [retval] UINT32* value);
                [propget] HRESULT Position([out] [retval] Windows.Foundation.Point* value);
                [propget] HRESULT Properties([out] [retval] Microsoft.UI.Input.PointerPointProperties** value);
                [propget] HRESULT Timestamp([out] [retval] UINT64* value);
                HRESULT GetTransformedPoint([in] Microsoft.UI.Input.IPointerPointTransform* transform, [out] [retval] Microsoft.UI.Input.PointerPoint** result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.PointerPointProperties)]
            [uuid(D760ED77-4B10-57A5-B3CC-D9BF3413E996)]
            interface IPointerPointProperties : IInspectable
            {
                [propget] HRESULT ContactRect([out] [retval] Windows.Foundation.Rect* value);
                [propget] HRESULT IsBarrelButtonPressed([out] [retval] boolean* value);
                [propget] HRESULT IsCanceled([out] [retval] boolean* value);
                [propget] HRESULT IsEraser([out] [retval] boolean* value);
                [propget] HRESULT IsHorizontalMouseWheel([out] [retval] boolean* value);
                [propget] HRESULT IsInRange([out] [retval] boolean* value);
                [propget] HRESULT IsInverted([out] [retval] boolean* value);
                [propget] HRESULT IsLeftButtonPressed([out] [retval] boolean* value);
                [propget] HRESULT IsMiddleButtonPressed([out] [retval] boolean* value);
                [propget] HRESULT IsPrimary([out] [retval] boolean* value);
                [propget] HRESULT IsRightButtonPressed([out] [retval] boolean* value);
                [propget] HRESULT IsXButton1Pressed([out] [retval] boolean* value);
                [propget] HRESULT IsXButton2Pressed([out] [retval] boolean* value);
                [propget] HRESULT MouseWheelDelta([out] [retval] INT32* value);
                [propget] HRESULT Orientation([out] [retval] FLOAT* value);
                [propget] HRESULT PointerUpdateKind([out] [retval] Microsoft.UI.Input.PointerUpdateKind* value);
                [propget] HRESULT Pressure([out] [retval] FLOAT* value);
                [propget] HRESULT TouchConfidence([out] [retval] boolean* value);
                [propget] HRESULT Twist([out] [retval] FLOAT* value);
                [propget] HRESULT XTilt([out] [retval] FLOAT* value);
                [propget] HRESULT YTilt([out] [retval] FLOAT* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [uuid(DB4791BC-994D-54C7-92EF-66EA1DE9B43C)]
            interface IPointerPointTransform : IInspectable
            {
                [propget] HRESULT Inverse([out] [retval] Microsoft.UI.Input.IPointerPointTransform** value);
                HRESULT TryTransform([in] Windows.Foundation.Point inPoint, [out] Windows.Foundation.Point* outPoint, [out] [retval] boolean* result);
                HRESULT TryTransformBounds([in] Windows.Foundation.Rect inRect, [out] Windows.Foundation.Rect* outRect, [out] [retval] boolean* result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.PointerPredictor)]
            [uuid(12C100EC-2100-565F-A60C-F1187F438828)]
            interface IPointerPredictor : IInspectable
            {
                [propget] HRESULT PredictionTime([out] [retval] Windows.Foundation.TimeSpan* value);
                [propput] HRESULT PredictionTime([in] Windows.Foundation.TimeSpan value);
                HRESULT GetPredictedPoints([in] Microsoft.UI.Input.PointerPoint* point, [out] UINT32* __resultSize, [out] [retval] [size_is(, *__resultSize)] Microsoft.UI.Input.PointerPoint*** result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.PointerPredictor)]
            [uuid(78A8EF30-3E5C-55CD-8F85-65AC09B1A987)]
            interface IPointerPredictorStatics : IInspectable
            {
                HRESULT CreateForInputPointerSource([in] Microsoft.UI.Input.InputPointerSource* inputPointerSource, [out] [retval] Microsoft.UI.Input.PointerPredictor** result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.RightTappedEventArgs)]
            [uuid(8FF73B39-887E-50A4-8500-77953039DCB4)]
            interface IRightTappedEventArgs : IInspectable
            {
                [propget] HRESULT PointerDeviceType([out] [retval] Microsoft.UI.Input.PointerDeviceType* value);
                [propget] HRESULT Position([out] [retval] Windows.Foundation.Point* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [exclusiveto(Microsoft.UI.Input.TappedEventArgs)]
            [uuid(C3A01BB5-6076-5E0F-871A-9D94A6A8F82B)]
            interface ITappedEventArgs : IInspectable
            {
                [propget] HRESULT PointerDeviceType([out] [retval] Microsoft.UI.Input.PointerDeviceType* value);
                [propget] HRESULT Position([out] [retval] Windows.Foundation.Point* value);
                [propget] HRESULT TapCount([out] [retval] UINT32* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [exclusiveto(Microsoft.UI.Input.TouchHitTestingEventArgs)]
            [experimental]
            [uuid(C2196F0C-60ED-5B5D-B919-AA7357E0A25C)]
            interface ITouchHitTestingEventArgs : IInspectable
            {
                [propget] HRESULT BoundingBox([out] [retval] Windows.Foundation.Rect* value);
                [propget] HRESULT Handled([out] [retval] boolean* value);
                [propput] HRESULT Handled([in] boolean value);
                [propget] HRESULT Point([out] [retval] Windows.Foundation.Point* value);
                HRESULT GetProximityEvaluation([out] [retval] Microsoft.UI.Input.ProximityEvaluation* result);
                HRESULT SetProximityEvaluation([in] Microsoft.UI.Input.ProximityEvaluation proximityEvaluation);
                HRESULT EvaluateProximityToRect([in] Windows.Foundation.Rect controlBoundingBox, [out] [retval] Microsoft.UI.Input.ProximityEvaluation* result);
                HRESULT EvaluateProximityToPolygon([in] UINT32 __controlVerticesSize, [in] [size_is(__controlVerticesSize)] Windows.Foundation.Point* controlVertices, [out] [retval] Microsoft.UI.Input.ProximityEvaluation* result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [experimental]
            [marshaling_behavior(agile)]
            runtimeclass CharacterReceivedEventArgs
            {
                [default] [experimental] interface Microsoft.UI.Input.ICharacterReceivedEventArgs;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [experimental]
            [marshaling_behavior(agile)]
            runtimeclass ContextMenuKeyEventArgs
            {
                [default] [experimental] interface Microsoft.UI.Input.IContextMenuKeyEventArgs;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass CrossSlidingEventArgs
            {
                [default] interface Microsoft.UI.Input.ICrossSlidingEventArgs;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass DraggingEventArgs
            {
                [default] interface Microsoft.UI.Input.IDraggingEventArgs;
            }

            [activatable(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass GestureRecognizer
            {
                [default] interface Microsoft.UI.Input.IGestureRecognizer;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass HoldingEventArgs
            {
                [default] interface Microsoft.UI.Input.IHoldingEventArgs;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.1)]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Input.IInputActivationListenerStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.1)]
            [static(Microsoft.UI.Input.IInputActivationListenerStatics2, Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [threading(both)]
            runtimeclass InputActivationListener : Microsoft.UI.Input.InputObject
            {
                [default] interface Microsoft.UI.Input.IInputActivationListener;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.1)]
            [marshaling_behavior(agile)]
            runtimeclass InputActivationListenerActivationChangedEventArgs
            {
                [default] interface Microsoft.UI.Input.IInputActivationListenerActivationChangedEventArgs;
            }

            [composable(Microsoft.UI.Input.IInputCursorFactory, public, Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Input.IInputCursorStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.1)]
            [threading(both)]
            runtimeclass InputCursor
            {
                [default] interface Microsoft.UI.Input.IInputCursor;
                interface Windows.Foundation.IClosable;
            }

            [composable(Microsoft.UI.Input.IInputCustomCursorFactory, public, Microsoft.Foundation.WindowsAppSDKContract, 1.1)]
            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.1)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass InputCustomCursor : Microsoft.UI.Input.InputCursor
            {
                [default] interface Microsoft.UI.Input.IInputCustomCursor;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.1)]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Input.IInputDesktopNamedResourceCursorStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.1)]
            [threading(both)]
            runtimeclass InputDesktopNamedResourceCursor : Microsoft.UI.Input.InputCursor
            {
                [default] interface Microsoft.UI.Input.IInputDesktopNamedResourceCursor;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Input.IInputDesktopResourceCursorStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [threading(both)]
            runtimeclass InputDesktopResourceCursor : Microsoft.UI.Input.InputCursor
            {
                [default] interface Microsoft.UI.Input.IInputDesktopResourceCursor;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [experimental]
            [marshaling_behavior(agile)]
            runtimeclass InputFocusChangedEventArgs
            {
                [default] [experimental] interface Microsoft.UI.Input.IInputFocusChangedEventArgs;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Input.IInputKeyboardSourceStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [static(Microsoft.UI.Input.IInputKeyboardSourceStatics2, Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [threading(both)]
            runtimeclass InputKeyboardSource : Microsoft.UI.Input.InputObject
            {
                [default] interface Microsoft.UI.Input.IInputKeyboardSource;
                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)] [experimental] interface Microsoft.UI.Input.IInputKeyboardSource2;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Input.IInputLightDismissActionStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [static(Microsoft.UI.Input.IInputLightDismissActionStatics2, Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [threading(both)]
            runtimeclass InputLightDismissAction : Microsoft.UI.Input.InputObject
            {
                [default] interface Microsoft.UI.Input.IInputLightDismissAction;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass InputLightDismissEventArgs
            {
                [default] interface Microsoft.UI.Input.IInputLightDismissEventArgs;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [experimental]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Input.IInputNonClientPointerSourceStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [threading(both)]
            runtimeclass InputNonClientPointerSource
            {
                [default] [experimental] interface Microsoft.UI.Input.IInputNonClientPointerSource;
            }

            [composable(Microsoft.UI.Input.IInputObjectFactory, public, Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass InputObject
            {
                [default] interface Microsoft.UI.Input.IInputObject;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Input.IInputPointerSourceStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [threading(both)]
            runtimeclass InputPointerSource : Microsoft.UI.Input.InputObject
            {
                [default] interface Microsoft.UI.Input.IInputPointerSource;
                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)] [experimental] interface Microsoft.UI.Input.IInputPointerSource2;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Input.IInputSystemCursorStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [threading(both)]
            runtimeclass InputSystemCursor : Microsoft.UI.Input.InputCursor
            {
                [default] interface Microsoft.UI.Input.IInputSystemCursor;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [experimental]
            [marshaling_behavior(agile)]
            runtimeclass KeyEventArgs
            {
                [default] [experimental] interface Microsoft.UI.Input.IKeyEventArgs;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass ManipulationCompletedEventArgs
            {
                [default] interface Microsoft.UI.Input.IManipulationCompletedEventArgs;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass ManipulationInertiaStartingEventArgs
            {
                [default] interface Microsoft.UI.Input.IManipulationInertiaStartingEventArgs;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass ManipulationStartedEventArgs
            {
                [default] interface Microsoft.UI.Input.IManipulationStartedEventArgs;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass ManipulationUpdatedEventArgs
            {
                [default] interface Microsoft.UI.Input.IManipulationUpdatedEventArgs;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass MouseWheelParameters
            {
                [default] interface Microsoft.UI.Input.IMouseWheelParameters;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [experimental]
            [marshaling_behavior(agile)]
            runtimeclass NonClientRegionCaptionTappedEventArgs
            {
                [default] [experimental] interface Microsoft.UI.Input.INonClientRegionCaptionTappedEventArgs;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [experimental]
            [marshaling_behavior(agile)]
            runtimeclass NonClientRegionHoverEventArgs
            {
                [default] [experimental] interface Microsoft.UI.Input.INonClientRegionHoverEventArgs;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass PointerEventArgs
            {
                [default] interface Microsoft.UI.Input.IPointerEventArgs;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass PointerPoint
            {
                [default] interface Microsoft.UI.Input.IPointerPoint;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass PointerPointProperties
            {
                [default] interface Microsoft.UI.Input.IPointerPointProperties;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Input.IPointerPredictorStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [threading(both)]
            runtimeclass PointerPredictor
            {
                [default] interface Microsoft.UI.Input.IPointerPredictor;
                interface Windows.Foundation.IClosable;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass RightTappedEventArgs
            {
                [default] interface Microsoft.UI.Input.IRightTappedEventArgs;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass TappedEventArgs
            {
                [default] interface Microsoft.UI.Input.ITappedEventArgs;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
            [experimental]
            [marshaling_behavior(agile)]
            runtimeclass TouchHitTestingEventArgs
            {
                [default] [experimental] interface Microsoft.UI.Input.ITouchHitTestingEventArgs;
            }
        }
    }
}
