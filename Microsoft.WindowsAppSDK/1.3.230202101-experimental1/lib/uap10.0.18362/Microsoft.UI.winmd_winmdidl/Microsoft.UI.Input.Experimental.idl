//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Microsoft.Foundation.idl";
import "Microsoft.UI.Input.idl";

// Forward Declare
namespace Microsoft
{
    namespace Foundation
    {
        apicontract WindowsAppSDKContract;
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Input
        {
            interface IPointerPointTransform;

            runtimeclass PointerPoint;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        interface IClosable;

        typedef struct Rect Rect;
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Input
        {
            namespace Experimental
            {
                typedef enum ExpFocusChangedDirection ExpFocusChangedDirection;

                typedef enum ExpFocusNavigationReason ExpFocusNavigationReason;

                interface IExpFocusChangedEventArgs;

                interface IExpFocusController;

                interface IExpFocusControllerStatics;

                interface IExpFocusNavigationHost;

                interface IExpFocusNavigationHostStatics;

                interface IExpFocusNavigationRequest;

                interface IExpFocusNavigationRequestStatics;

                interface IExpFocusNavigationResult;

                interface IExpInputSite;

                interface IExpNavigateFocusRequestedEventArgs;

                interface IExpPointerPoint;

                interface IExpPointerPointStatics;

                runtimeclass ExpFocusChangedEventArgs;

                runtimeclass ExpFocusController;

                runtimeclass ExpFocusNavigationHost;

                runtimeclass ExpFocusNavigationRequest;

                runtimeclass ExpFocusNavigationResult;

                runtimeclass ExpInputSite;

                runtimeclass ExpNavigateFocusRequestedEventArgs;

                runtimeclass ExpPointerPoint;
            }
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace UI
    {
        namespace Input
        {
            namespace Experimental
            {
                declare
                {
                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.Experimental.ExpFocusController*, Microsoft.UI.Input.Experimental.ExpNavigateFocusRequestedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.Experimental.ExpFocusNavigationHost*, Microsoft.UI.Input.Experimental.ExpNavigateFocusRequestedEventArgs*>;
                }
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace UI
    {
        namespace Input
        {
            namespace Experimental
            {
                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
                [experimental]
                enum ExpFocusChangedDirection
                {
                    None     = 0,
                    Next     = 1,
                    Previous = 2,
                    Up       = 3,
                    Down     = 4,
                    Left     = 5,
                    Right    = 6
                };

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
                [experimental]
                enum ExpFocusNavigationReason
                {
                    Programmatic = 0,
                    Restore      = 1,
                    First        = 2,
                    Last         = 3,
                    Left         = 4,
                    Up           = 5,
                    Right        = 6,
                    Down         = 7
                };

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
                [exclusiveto(Microsoft.UI.Input.Experimental.ExpFocusChangedEventArgs)]
                [experimental]
                [uuid(714933B6-BA0D-58BC-97A9-BCC89A0B3431)]
                interface IExpFocusChangedEventArgs : IInspectable
                {
                    [propget] HRESULT Direction([out] [retval] Microsoft.UI.Input.Experimental.ExpFocusChangedDirection* value);
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
                [exclusiveto(Microsoft.UI.Input.Experimental.ExpFocusController)]
                [experimental]
                [uuid(FD86E2D9-1550-59BA-8B4A-973C7251CD2C)]
                interface IExpFocusController : IInspectable
                {
                    [propget] HRESULT HasFocus([out] [retval] boolean* value);
                    HRESULT TrySetFocus([out] [retval] boolean* result);
                    HRESULT DepartFocus([in] Microsoft.UI.Input.Experimental.ExpFocusNavigationRequest* request, [out] [retval] Microsoft.UI.Input.Experimental.ExpFocusNavigationResult** result);
                    [eventadd] HRESULT NavigateFocusRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.Experimental.ExpFocusController*, Microsoft.UI.Input.Experimental.ExpNavigateFocusRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT NavigateFocusRequested([in] EventRegistrationToken token);
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
                [exclusiveto(Microsoft.UI.Input.Experimental.ExpFocusController)]
                [experimental]
                [uuid(F7D9123F-9364-566B-B6F0-19C49ED142B9)]
                interface IExpFocusControllerStatics : IInspectable
                {
                    HRESULT GetForInputSite([in] Microsoft.UI.Input.Experimental.ExpInputSite* inputSite, [out] [retval] Microsoft.UI.Input.Experimental.ExpFocusController** result);
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
                [exclusiveto(Microsoft.UI.Input.Experimental.ExpFocusNavigationHost)]
                [experimental]
                [uuid(49B02D03-B0D8-55DB-985A-48611E47E838)]
                interface IExpFocusNavigationHost : IInspectable
                {
                    HRESULT NavigateFocus([in] Microsoft.UI.Input.Experimental.ExpFocusNavigationRequest* request, [out] [retval] Microsoft.UI.Input.Experimental.ExpFocusNavigationResult** result);
                    [eventadd] HRESULT TakeFocusRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.Experimental.ExpFocusNavigationHost*, Microsoft.UI.Input.Experimental.ExpNavigateFocusRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TakeFocusRequested([in] EventRegistrationToken token);
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
                [exclusiveto(Microsoft.UI.Input.Experimental.ExpFocusNavigationHost)]
                [experimental]
                [uuid(7634E568-2177-50D9-9D95-18E3CACA2B40)]
                interface IExpFocusNavigationHostStatics : IInspectable
                {
                    HRESULT GetForInputSite([in] Microsoft.UI.Input.Experimental.ExpInputSite* inputSite, [out] [retval] Microsoft.UI.Input.Experimental.ExpFocusNavigationHost** result);
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
                [exclusiveto(Microsoft.UI.Input.Experimental.ExpFocusNavigationRequest)]
                [experimental]
                [uuid(4DE7C4D0-6F4B-5176-9AE2-346D3318DB4E)]
                interface IExpFocusNavigationRequest : IInspectable
                {
                    [propget] HRESULT CorrelationId([out] [retval] GUID* value);
                    [propget] HRESULT HintRect([out] [retval] Windows.Foundation.Rect* value);
                    [propget] HRESULT Reason([out] [retval] Microsoft.UI.Input.Experimental.ExpFocusNavigationReason* value);
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
                [exclusiveto(Microsoft.UI.Input.Experimental.ExpFocusNavigationRequest)]
                [experimental]
                [uuid(1CC934BB-EC15-5FAA-AF75-AFE45D0CE1A9)]
                interface IExpFocusNavigationRequestStatics : IInspectable
                {
                    HRESULT CreateFocusNavigationRequestReasonAndHintRect([in] Microsoft.UI.Input.Experimental.ExpFocusNavigationReason reason, [in] Windows.Foundation.Rect hintRect, [out] [retval] Microsoft.UI.Input.Experimental.ExpFocusNavigationRequest** result);
                    HRESULT CreateFocusNavigationRequestReasonHintRectAndId([in] Microsoft.UI.Input.Experimental.ExpFocusNavigationReason reason, [in] Windows.Foundation.Rect hintRect, [in] GUID correlationId, [out] [retval] Microsoft.UI.Input.Experimental.ExpFocusNavigationRequest** result);
                    HRESULT CreateFocusNavigationRequestWithReason([in] Microsoft.UI.Input.Experimental.ExpFocusNavigationReason reason, [out] [retval] Microsoft.UI.Input.Experimental.ExpFocusNavigationRequest** result);
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
                [exclusiveto(Microsoft.UI.Input.Experimental.ExpFocusNavigationResult)]
                [experimental]
                [uuid(33007903-6CD1-54A2-A5D3-5724EF673C6C)]
                interface IExpFocusNavigationResult : IInspectable
                {
                    [propget] HRESULT WasMoved([out] [retval] boolean* value);
                    [propput] HRESULT WasMoved([in] boolean value);
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
                [exclusiveto(Microsoft.UI.Input.Experimental.ExpInputSite)]
                [experimental]
                [uuid(6B707B95-BBE8-5131-A6D7-B11C26CB7CB6)]
                interface IExpInputSite : IInspectable
                {
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
                [exclusiveto(Microsoft.UI.Input.Experimental.ExpNavigateFocusRequestedEventArgs)]
                [experimental]
                [uuid(563B3F71-ECA0-5652-B748-13C6D6794CEE)]
                interface IExpNavigateFocusRequestedEventArgs : IInspectable
                {
                    [propget] HRESULT Request([out] [retval] Microsoft.UI.Input.Experimental.ExpFocusNavigationRequest** value);
                    [propget] HRESULT WasMoved([out] [retval] boolean* value);
                    [propput] HRESULT WasMoved([in] boolean value);
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
                [exclusiveto(Microsoft.UI.Input.Experimental.ExpPointerPoint)]
                [experimental]
                [uuid(F9DC0C95-F286-5A1C-B038-7FF84A4E4AF5)]
                interface IExpPointerPoint : IInspectable
                {
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
                [exclusiveto(Microsoft.UI.Input.Experimental.ExpPointerPoint)]
                [experimental]
                [uuid(FAE05D62-8E52-5BF5-A577-FF07BB15E031)]
                interface IExpPointerPointStatics : IInspectable
                {
                    HRESULT GetCurrentPoint([in] UINT32 pointerId, [out] [retval] Microsoft.UI.Input.PointerPoint** result);
                    HRESULT GetCurrentPointTransformed([in] UINT32 pointerId, [in] Microsoft.UI.Input.IPointerPointTransform* transform, [out] [retval] Microsoft.UI.Input.PointerPoint** result);
                    HRESULT GetIntermediatePoints([in] UINT32 pointerId, [out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Input.PointerPoint*>** result);
                    HRESULT GetIntermediatePointsTransformed([in] UINT32 pointerId, [in] Microsoft.UI.Input.IPointerPointTransform* transform, [out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Input.PointerPoint*>** result);
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
                [experimental]
                [marshaling_behavior(agile)]
                runtimeclass ExpFocusChangedEventArgs
                {
                    [default] [experimental] interface Microsoft.UI.Input.Experimental.IExpFocusChangedEventArgs;
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
                [experimental]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Input.Experimental.IExpFocusControllerStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
                [threading(both)]
                runtimeclass ExpFocusController : Microsoft.UI.Input.InputObject
                {
                    [default] [experimental] interface Microsoft.UI.Input.Experimental.IExpFocusController;
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
                [experimental]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Input.Experimental.IExpFocusNavigationHostStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
                [threading(both)]
                runtimeclass ExpFocusNavigationHost : Microsoft.UI.Input.InputObject
                {
                    [default] [experimental] interface Microsoft.UI.Input.Experimental.IExpFocusNavigationHost;
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
                [experimental]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Input.Experimental.IExpFocusNavigationRequestStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
                [threading(both)]
                runtimeclass ExpFocusNavigationRequest
                {
                    [default] [experimental] interface Microsoft.UI.Input.Experimental.IExpFocusNavigationRequest;
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
                [experimental]
                [marshaling_behavior(agile)]
                runtimeclass ExpFocusNavigationResult
                {
                    [default] [experimental] interface Microsoft.UI.Input.Experimental.IExpFocusNavigationResult;
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
                [experimental]
                [marshaling_behavior(agile)]
                runtimeclass ExpInputSite
                {
                    [default] [experimental] interface Microsoft.UI.Input.Experimental.IExpInputSite;
                    interface Windows.Foundation.IClosable;
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
                [experimental]
                [marshaling_behavior(agile)]
                runtimeclass ExpNavigateFocusRequestedEventArgs
                {
                    [default] [experimental] interface Microsoft.UI.Input.Experimental.IExpNavigateFocusRequestedEventArgs;
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
                [experimental]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Input.Experimental.IExpPointerPointStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.2)]
                [threading(both)]
                runtimeclass ExpPointerPoint
                {
                    [default] [experimental] interface Microsoft.UI.Input.Experimental.IExpPointerPoint;
                }
            }
        }
    }
}
