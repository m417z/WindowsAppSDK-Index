//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Windows.Storage.idl";
import "Windows.System.idl";

// Forward Declare
namespace Windows
{
    namespace Foundation
    {
        namespace Collections
        {
            interface IPropertySet;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        interface IAsyncAction;

        interface IClosable;
    }
}
namespace Windows
{
    namespace Storage
    {
        runtimeclass StorageFolder;
    }
}
namespace Windows
{
    namespace System
    {
        runtimeclass User;
    }
}
namespace Microsoft
{
    namespace Windows
    {
        namespace Storage
        {
            apicontract ApplicationDataContract;

            typedef enum ApplicationDataCreateDisposition ApplicationDataCreateDisposition;

            typedef enum ApplicationDataLocality ApplicationDataLocality;

            interface IApplicationData;

            interface IApplicationDataContainer;

            interface IApplicationDataStatics;

            runtimeclass ApplicationData;

            runtimeclass ApplicationDataContainer;
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace Windows
    {
        namespace Storage
        {
            declare
            {
                interface Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<HSTRING, Microsoft.Windows.Storage.ApplicationDataContainer*>*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Foundation.Collections.IKeyValuePair<HSTRING, Microsoft.Windows.Storage.ApplicationDataContainer*>*>;

                interface Windows.Foundation.Collections.IKeyValuePair<HSTRING, Microsoft.Windows.Storage.ApplicationDataContainer*>;

                interface Windows.Foundation.Collections.IMapView<HSTRING, Microsoft.Windows.Storage.ApplicationDataContainer*>;

                interface Windows.Foundation.Collections.IMap<HSTRING, Microsoft.Windows.Storage.ApplicationDataContainer*>;
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace Windows
    {
        namespace Storage
        {
            [contractversion(2.0)]
            apicontract ApplicationDataContract
            {
            }

            [contract(Microsoft.Windows.Storage.ApplicationDataContract, 1.0)]
            enum ApplicationDataCreateDisposition
            {
                Always   = 0,
                Existing = 1
            };

            [contract(Microsoft.Windows.Storage.ApplicationDataContract, 1.0)]
            enum ApplicationDataLocality
            {
                Local       = 0,
                LocalCache  = 3,
                SharedLocal = 4,
                Temporary   = 2,
                Machine     = 1000
            };

            [contract(Microsoft.Windows.Storage.ApplicationDataContract, 1.0)]
            [exclusiveto(Microsoft.Windows.Storage.ApplicationData)]
            [uuid(FC073CE2-2F7B-5214-95FA-530A3F9D1EA5)]
            interface IApplicationData : IInspectable
            {
                [propget] HRESULT IsMachinePathSupported([out] [retval] boolean* value);
                [propget] HRESULT LocalCachePath([out] [retval] HSTRING* value);
                [propget] HRESULT LocalPath([out] [retval] HSTRING* value);
                [propget] HRESULT MachinePath([out] [retval] HSTRING* value);
                [propget] HRESULT SharedLocalPath([out] [retval] HSTRING* value);
                [propget] HRESULT TemporaryPath([out] [retval] HSTRING* value);
                [propget] HRESULT LocalCacheFolder([out] [retval] Windows.Storage.StorageFolder** value);
                [propget] HRESULT LocalFolder([out] [retval] Windows.Storage.StorageFolder** value);
                [propget] HRESULT MachineFolder([out] [retval] Windows.Storage.StorageFolder** value);
                [propget] HRESULT SharedLocalFolder([out] [retval] Windows.Storage.StorageFolder** value);
                [propget] HRESULT TemporaryFolder([out] [retval] Windows.Storage.StorageFolder** value);
                [propget] HRESULT LocalSettings([out] [retval] Microsoft.Windows.Storage.ApplicationDataContainer** value);
                HRESULT ClearAsync([in] Microsoft.Windows.Storage.ApplicationDataLocality locality, [out] [retval] Windows.Foundation.IAsyncAction** operation);
                HRESULT ClearPublisherCacheFolderAsync([in] HSTRING folderName, [out] [retval] Windows.Foundation.IAsyncAction** operation);
                HRESULT GetPublisherCachePath([in] HSTRING folderName, [out] [retval] HSTRING* result);
                HRESULT GetPublisherCacheFolder([in] HSTRING folderName, [out] [retval] Windows.Storage.StorageFolder** result);
            }

            [contract(Microsoft.Windows.Storage.ApplicationDataContract, 1.0)]
            [exclusiveto(Microsoft.Windows.Storage.ApplicationDataContainer)]
            [uuid(D1FA9C23-2E59-55D8-BD86-88C2FDC9E7C9)]
            interface IApplicationDataContainer : IInspectable
            {
                [propget] HRESULT Containers([out] [retval] Windows.Foundation.Collections.IMap<HSTRING, Microsoft.Windows.Storage.ApplicationDataContainer*>** value);
                [propget] HRESULT Name([out] [retval] HSTRING* value);
                [propget] HRESULT Locality([out] [retval] Microsoft.Windows.Storage.ApplicationDataLocality* value);
                [propget] HRESULT Values([out] [retval] Windows.Foundation.Collections.IPropertySet** value);
                HRESULT CreateContainer([in] HSTRING name, [in] Microsoft.Windows.Storage.ApplicationDataCreateDisposition disposition, [out] [retval] Microsoft.Windows.Storage.ApplicationDataContainer** result);
                HRESULT DeleteContainer([in] HSTRING name);
            }

            [contract(Microsoft.Windows.Storage.ApplicationDataContract, 1.0)]
            [exclusiveto(Microsoft.Windows.Storage.ApplicationData)]
            [uuid(6A8B41F8-5560-56FB-86B0-D59E897D4D95)]
            interface IApplicationDataStatics : IInspectable
            {
                HRESULT GetDefault([out] [retval] Microsoft.Windows.Storage.ApplicationData** result);
                HRESULT GetForUser([in] Windows.System.User* user, [out] [retval] Microsoft.Windows.Storage.ApplicationData** result);
                HRESULT GetForPackageFamily([in] HSTRING packageFamilyName, [out] [retval] Microsoft.Windows.Storage.ApplicationData** result);
            }

            [contract(Microsoft.Windows.Storage.ApplicationDataContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Microsoft.Windows.Storage.IApplicationDataStatics, Microsoft.Windows.Storage.ApplicationDataContract, 1.0)]
            [threading(both)]
            runtimeclass ApplicationData
            {
                [default] interface Microsoft.Windows.Storage.IApplicationData;
                interface Windows.Foundation.IClosable;
            }

            [contract(Microsoft.Windows.Storage.ApplicationDataContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass ApplicationDataContainer
            {
                [default] interface Microsoft.Windows.Storage.IApplicationDataContainer;
                interface Windows.Foundation.IClosable;
            }
        }
    }
}
