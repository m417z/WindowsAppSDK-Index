//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Windows.ApplicationModel.Background.idl";
import "Windows.Networking.PushNotifications.idl";

// Forward Declare
namespace Microsoft
{
    namespace Windows
    {
        namespace PushNotifications
        {
            typedef enum PushNotificationChannelStatus PushNotificationChannelStatus;

            typedef enum PushNotificationRegistrationActivators PushNotificationRegistrationActivators;

            typedef struct PushNotificationCreateChannelStatus PushNotificationCreateChannelStatus;

            interface IPushNotificationActivationInfo;

            interface IPushNotificationActivationInfoFactory;

            interface IPushNotificationChannel;

            interface IPushNotificationChannelFactory;

            interface IPushNotificationCreateChannelResult;

            interface IPushNotificationCreateChannelResultFactory;

            interface IPushNotificationManagerStatics;

            interface IPushNotificationReceivedEventArgs;

            runtimeclass PushNotificationActivationInfo;

            runtimeclass PushNotificationChannel;

            runtimeclass PushNotificationCreateChannelResult;

            runtimeclass PushNotificationManager;

            runtimeclass PushNotificationReceivedEventArgs;
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace Windows
    {
        namespace PushNotifications
        {
            declare
            {
                interface Windows.Foundation.IAsyncOperationWithProgress<Microsoft.Windows.PushNotifications.PushNotificationCreateChannelResult*, Microsoft.Windows.PushNotifications.PushNotificationCreateChannelStatus>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.Windows.PushNotifications.PushNotificationChannel*, Microsoft.Windows.PushNotifications.PushNotificationReceivedEventArgs*>;
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace Windows
    {
        namespace PushNotifications
        {
            [experimental]
            [version(0x00000001)]
            enum PushNotificationChannelStatus
            {
                InProgress       = 0,
                InProgressRetry  = 1,
                CompletedSuccess = 2,
                CompletedFailure = 3
            };

            [flags]
            [version(0x00000001)]
            enum PushNotificationRegistrationActivators
            {
                Undefined         = 0x0,
                PushTrigger       = 0x1,
                ComActivator      = 0x2,
                ProtocolActivator = 0x4
            };

            [experimental]
            [version(0x00000001)]
            struct PushNotificationCreateChannelStatus
            {
                Microsoft.Windows.PushNotifications.PushNotificationChannelStatus status;
                HRESULT extendedError;
                UINT32 retryCount;
            };

            [exclusiveto(Microsoft.Windows.PushNotifications.PushNotificationActivationInfo)]
            [experimental]
            [uuid(F50B1226-8EB2-57B9-891F-9CEB3948C5C3)]
            [version(0x00000001)]
            interface IPushNotificationActivationInfo : IInspectable
            {
                [propget] HRESULT TaskClsid([out] [retval] GUID* value);
                [propget] HRESULT Activators([out] [retval] Microsoft.Windows.PushNotifications.PushNotificationRegistrationActivators* value);
                HRESULT GetConditions([out] UINT32* __resultSize, [out] [retval] [size_is(, *__resultSize)] Windows.ApplicationModel.Background.IBackgroundCondition*** result);
                HRESULT SetConditions([in] UINT32 __conditionsSize, [in] [size_is(__conditionsSize)] Windows.ApplicationModel.Background.IBackgroundCondition** conditions);
            }

            [exclusiveto(Microsoft.Windows.PushNotifications.PushNotificationActivationInfo)]
            [experimental]
            [uuid(353B2C3F-BC64-5B92-BE1D-A76A2CDE2BF8)]
            [version(0x00000001)]
            interface IPushNotificationActivationInfoFactory : IInspectable
            {
                HRESULT CreateInstance([in] Microsoft.Windows.PushNotifications.PushNotificationRegistrationActivators activators, [in] GUID taskClsid, [out] [retval] Microsoft.Windows.PushNotifications.PushNotificationActivationInfo** value);
                HRESULT CreateInstance2([in] Microsoft.Windows.PushNotifications.PushNotificationRegistrationActivators activators, [out] [retval] Microsoft.Windows.PushNotifications.PushNotificationActivationInfo** value);
            }

            [exclusiveto(Microsoft.Windows.PushNotifications.PushNotificationChannel)]
            [experimental]
            [uuid(CD4EF2A0-3985-5848-8426-813DE636F825)]
            [version(0x00000001)]
            interface IPushNotificationChannel : IInspectable
            {
                [propget] HRESULT Uri([out] [retval] Windows.Foundation.Uri** value);
                [propget] HRESULT ExpirationTime([out] [retval] Windows.Foundation.DateTime* value);
                HRESULT Close();
                [eventadd] HRESULT PushReceived([in] Windows.Foundation.TypedEventHandler<Microsoft.Windows.PushNotifications.PushNotificationChannel*, Microsoft.Windows.PushNotifications.PushNotificationReceivedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT PushReceived([in] EventRegistrationToken token);
            }

            [exclusiveto(Microsoft.Windows.PushNotifications.PushNotificationChannel)]
            [experimental]
            [uuid(F065CAEC-3FD1-50C7-9434-0E29FFE7BA5E)]
            [version(0x00000001)]
            interface IPushNotificationChannelFactory : IInspectable
            {
                HRESULT CreateInstance([in] Windows.Networking.PushNotifications.PushNotificationChannel* channel, [out] [retval] Microsoft.Windows.PushNotifications.PushNotificationChannel** value);
            }

            [exclusiveto(Microsoft.Windows.PushNotifications.PushNotificationCreateChannelResult)]
            [experimental]
            [uuid(4DF3717F-5D33-56E9-B381-1B350C95722E)]
            [version(0x00000001)]
            interface IPushNotificationCreateChannelResult : IInspectable
            {
                [propget] HRESULT Channel([out] [retval] Microsoft.Windows.PushNotifications.PushNotificationChannel** value);
                [propget] HRESULT ExtendedError([out] [retval] HRESULT* value);
                [propget] HRESULT Status([out] [retval] Microsoft.Windows.PushNotifications.PushNotificationChannelStatus* value);
            }

            [exclusiveto(Microsoft.Windows.PushNotifications.PushNotificationCreateChannelResult)]
            [experimental]
            [uuid(6162A948-0DDA-53AE-ABCD-5B47F336D612)]
            [version(0x00000001)]
            interface IPushNotificationCreateChannelResultFactory : IInspectable
            {
                HRESULT CreateInstance([in] Microsoft.Windows.PushNotifications.PushNotificationChannel* channel, [in] HRESULT extendedError, [in] Microsoft.Windows.PushNotifications.PushNotificationChannelStatus status, [out] [retval] Microsoft.Windows.PushNotifications.PushNotificationCreateChannelResult** value);
            }

            [exclusiveto(Microsoft.Windows.PushNotifications.PushNotificationManager)]
            [uuid(214C19B4-31B3-5E12-9EFE-BEBC0279BF8C)]
            [version(0x00000001)]
            interface IPushNotificationManagerStatics : IInspectable
            {
                HRESULT RegisterActivator([in] Microsoft.Windows.PushNotifications.PushNotificationActivationInfo* details);
                HRESULT UnregisterActivator([in] Microsoft.Windows.PushNotifications.PushNotificationRegistrationActivators activators);
                HRESULT UnregisterAllActivators();
                HRESULT CreateChannelAsync([in] GUID remoteId, [out] [retval] Windows.Foundation.IAsyncOperationWithProgress<Microsoft.Windows.PushNotifications.PushNotificationCreateChannelResult*, Microsoft.Windows.PushNotifications.PushNotificationCreateChannelStatus>** operation);
                HRESULT IsActivatorSupported([in] Microsoft.Windows.PushNotifications.PushNotificationRegistrationActivators activators, [out] [retval] boolean* result);
            }

            [exclusiveto(Microsoft.Windows.PushNotifications.PushNotificationReceivedEventArgs)]
            [experimental]
            [uuid(A8FE81BC-D2D9-52CF-AB1B-6FDE711862EA)]
            [version(0x00000001)]
            interface IPushNotificationReceivedEventArgs : IInspectable
            {
                [propget] HRESULT Payload([out] UINT32* __valueSize, [out] [retval] [size_is(, *__valueSize)] BYTE** value);
                HRESULT GetDeferral([out] [retval] Windows.ApplicationModel.Background.BackgroundTaskDeferral** result);
                [eventadd] HRESULT Canceled([in] Windows.ApplicationModel.Background.BackgroundTaskCanceledEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT Canceled([in] EventRegistrationToken token);
                [propget] HRESULT Handled([out] [retval] boolean* value);
                [propput] HRESULT Handled([in] boolean value);
            }

            [activatable(Microsoft.Windows.PushNotifications.IPushNotificationActivationInfoFactory, 0x00000001)]
            [experimental]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x00000001)]
            runtimeclass PushNotificationActivationInfo
            {
                [default] [experimental] interface Microsoft.Windows.PushNotifications.IPushNotificationActivationInfo;
            }

            [activatable(Microsoft.Windows.PushNotifications.IPushNotificationChannelFactory, 0x00000001)]
            [experimental]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x00000001)]
            runtimeclass PushNotificationChannel
            {
                [default] [experimental] interface Microsoft.Windows.PushNotifications.IPushNotificationChannel;
            }

            [activatable(Microsoft.Windows.PushNotifications.IPushNotificationCreateChannelResultFactory, 0x00000001)]
            [experimental]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x00000001)]
            runtimeclass PushNotificationCreateChannelResult
            {
                [default] [experimental] interface Microsoft.Windows.PushNotifications.IPushNotificationCreateChannelResult;
            }

            [marshaling_behavior(agile)]
            [static(Microsoft.Windows.PushNotifications.IPushNotificationManagerStatics, 0x00000001)]
            [threading(both)]
            [version(0x00000001)]
            runtimeclass PushNotificationManager
            {
            }

            [experimental]
            [marshaling_behavior(agile)]
            [version(0x00000001)]
            runtimeclass PushNotificationReceivedEventArgs
            {
                [default] [experimental] interface Microsoft.Windows.PushNotifications.IPushNotificationReceivedEventArgs;
            }
        }
    }
}
