//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";

// Forward Declare
namespace Microsoft
{
    namespace Windows
    {
        namespace AI
        {
            namespace MachineLearning
            {
                apicontract MachineLearningContract;

                typedef enum ExecutionProviderReadyResultState ExecutionProviderReadyResultState;

                typedef enum ExecutionProviderReadyState ExecutionProviderReadyState;

                interface IExecutionProvider;

                interface IExecutionProviderCatalog;

                interface IExecutionProviderCatalogStatics;

                interface IExecutionProviderReadyResult;

                runtimeclass ExecutionProvider;

                runtimeclass ExecutionProviderCatalog;

                runtimeclass ExecutionProviderReadyResult;
            }
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace Windows
    {
        namespace AI
        {
            namespace MachineLearning
            {
                declare
                {
                    interface Windows.Foundation.Collections.IIterable<Microsoft.Windows.AI.MachineLearning.ExecutionProvider*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.Windows.AI.MachineLearning.ExecutionProvider*>;

                    interface Windows.Foundation.Collections.IVectorView<Microsoft.Windows.AI.MachineLearning.ExecutionProvider*>;

                    interface Windows.Foundation.Collections.IVector<Microsoft.Windows.AI.MachineLearning.ExecutionProvider*>;

                    interface Windows.Foundation.IAsyncOperationWithProgress<Microsoft.Windows.AI.MachineLearning.ExecutionProviderReadyResult*, DOUBLE>;

                    interface Windows.Foundation.IAsyncOperationWithProgress<Windows.Foundation.Collections.IVector<Microsoft.Windows.AI.MachineLearning.ExecutionProvider*>*, DOUBLE>;
                }
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace Windows
    {
        namespace AI
        {
            namespace MachineLearning
            {
                [contractversion(1.0)]
                apicontract MachineLearningContract
                {
                }

                [contract(Microsoft.Windows.AI.MachineLearning.MachineLearningContract, 1.0)]
                enum ExecutionProviderReadyResultState
                {
                    InProgress = 0,
                    Success    = 1,
                    Failure    = 2
                };

                [contract(Microsoft.Windows.AI.MachineLearning.MachineLearningContract, 1.0)]
                enum ExecutionProviderReadyState
                {
                    Ready      = 0,
                    NotReady   = 1,
                    NotPresent = 2
                };

                [contract(Microsoft.Windows.AI.MachineLearning.MachineLearningContract, 1.0)]
                [exclusiveto(Microsoft.Windows.AI.MachineLearning.ExecutionProvider)]
                [uuid(D541C2BF-4A51-5804-8E44-2BDF2160C3A1)]
                interface IExecutionProvider : IInspectable
                {
                    [propget] HRESULT Name([out] [retval] HSTRING* value);
                    [propget] HRESULT LibraryPath([out] [retval] HSTRING* value);
                    [propget] HRESULT ReadyState([out] [retval] Microsoft.Windows.AI.MachineLearning.ExecutionProviderReadyState* value);
                    HRESULT EnsureReadyAsync([out] [retval] Windows.Foundation.IAsyncOperationWithProgress<Microsoft.Windows.AI.MachineLearning.ExecutionProviderReadyResult*, DOUBLE>** operation);
                    HRESULT TryRegister([out] [retval] boolean* result);
                }

                [contract(Microsoft.Windows.AI.MachineLearning.MachineLearningContract, 1.0)]
                [exclusiveto(Microsoft.Windows.AI.MachineLearning.ExecutionProviderCatalog)]
                [uuid(1DC174C1-5C7F-54EC-AF7A-9F3CBF230097)]
                interface IExecutionProviderCatalog : IInspectable
                {
                    HRESULT FindAllProviders([out] UINT32* __resultSize, [out] [retval] [size_is(, *__resultSize)] Microsoft.Windows.AI.MachineLearning.ExecutionProvider*** result);
                    HRESULT EnsureAndRegisterAllAsync([out] [retval] Windows.Foundation.IAsyncOperationWithProgress<Windows.Foundation.Collections.IVector<Microsoft.Windows.AI.MachineLearning.ExecutionProvider*>*, DOUBLE>** operation);
                    HRESULT RegisterAllAsync([out] [retval] Windows.Foundation.IAsyncOperationWithProgress<Windows.Foundation.Collections.IVector<Microsoft.Windows.AI.MachineLearning.ExecutionProvider*>*, DOUBLE>** operation);
                }

                [contract(Microsoft.Windows.AI.MachineLearning.MachineLearningContract, 1.0)]
                [exclusiveto(Microsoft.Windows.AI.MachineLearning.ExecutionProviderCatalog)]
                [uuid(550DEF98-2611-5433-AFB8-43673B610848)]
                interface IExecutionProviderCatalogStatics : IInspectable
                {
                    HRESULT GetDefault([out] [retval] Microsoft.Windows.AI.MachineLearning.ExecutionProviderCatalog** result);
                }

                [contract(Microsoft.Windows.AI.MachineLearning.MachineLearningContract, 1.0)]
                [exclusiveto(Microsoft.Windows.AI.MachineLearning.ExecutionProviderReadyResult)]
                [uuid(91C1724D-93C7-5284-ADBE-BA2BD7BE7C79)]
                interface IExecutionProviderReadyResult : IInspectable
                {
                    [propget] HRESULT Status([out] [retval] Microsoft.Windows.AI.MachineLearning.ExecutionProviderReadyResultState* value);
                    [propget] HRESULT ExtendedError([out] [retval] HRESULT* value);
                    [propget] HRESULT DiagnosticText([out] [retval] HSTRING* value);
                }

                [contract(Microsoft.Windows.AI.MachineLearning.MachineLearningContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass ExecutionProvider
                {
                    [default] interface Microsoft.Windows.AI.MachineLearning.IExecutionProvider;
                }

                [contract(Microsoft.Windows.AI.MachineLearning.MachineLearningContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.Windows.AI.MachineLearning.IExecutionProviderCatalogStatics, Microsoft.Windows.AI.MachineLearning.MachineLearningContract, 1.0)]
                [threading(both)]
                runtimeclass ExecutionProviderCatalog
                {
                    [default] interface Microsoft.Windows.AI.MachineLearning.IExecutionProviderCatalog;
                }

                [contract(Microsoft.Windows.AI.MachineLearning.MachineLearningContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass ExecutionProviderReadyResult
                {
                    [default] interface Microsoft.Windows.AI.MachineLearning.IExecutionProviderReadyResult;
                }
            }
        }
    }
}
