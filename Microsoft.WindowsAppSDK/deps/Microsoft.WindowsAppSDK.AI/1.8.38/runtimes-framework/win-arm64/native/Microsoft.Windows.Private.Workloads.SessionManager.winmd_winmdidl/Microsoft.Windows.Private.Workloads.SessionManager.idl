//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Microsoft.Windows.PrivateCommon.idl";

// Forward Declare
namespace Microsoft
{
    namespace Windows
    {
        namespace PrivateCommon
        {
            interface IAnchorInstance;

            interface INotifyExpiredSessionHost;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        interface IClosable;
    }
}
namespace Microsoft
{
    namespace Windows
    {
        namespace Private
        {
            namespace Workloads
            {
                namespace SessionManager
                {
                    apicontract SessionManagerContract;

                    interface ISessionManager;

                    interface ISessionManager2;

                    interface ISessionManager3;

                    interface ISessionManagerStatics;

                    runtimeclass SessionManager;
                }
            }
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace Windows
    {
        namespace Private
        {
            namespace Workloads
            {
                namespace SessionManager
                {
                    declare
                    {
                        interface Windows.Foundation.IAsyncOperation<Microsoft.Windows.Private.Workloads.SessionManager.SessionManager*>;
                    }
                }
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace Windows
    {
        namespace Private
        {
            namespace Workloads
            {
                namespace SessionManager
                {
                    [contractversion(3.0)]
                    apicontract SessionManagerContract
                    {
                    }

                    [contract(Microsoft.Windows.Private.Workloads.SessionManager.SessionManagerContract, 1.0)]
                    [exclusiveto(Microsoft.Windows.Private.Workloads.SessionManager.SessionManager)]
                    [uuid(52010AB7-BBCE-591B-A2BC-A5743A5673D2)]
                    interface ISessionManager : IInspectable
                    {
                        HRESULT GetOrCreateSessionAsync([in] HSTRING packageName, [in] HSTRING typeName, [in] UINT32 priority, [out] [retval] Windows.Foundation.IAsyncOperation<IInspectable*>** operation);
                    }

                    [contract(Microsoft.Windows.Private.Workloads.SessionManager.SessionManagerContract, 2.0)]
                    [exclusiveto(Microsoft.Windows.Private.Workloads.SessionManager.SessionManager)]
                    [uuid(EF69FD6A-766E-5A92-8CE1-1BBE988DF0FC)]
                    interface ISessionManager2 : IInspectable
                    {
                        HRESULT ReportSessionFailure([in] IInspectable* session, [in] INT32 hrFailure, [in] HSTRING failureMessage, [out] [retval] boolean* result);
                    }

                    [contract(Microsoft.Windows.Private.Workloads.SessionManager.SessionManagerContract, 3.0)]
                    [exclusiveto(Microsoft.Windows.Private.Workloads.SessionManager.SessionManager)]
                    [uuid(C1D6FBFA-5CDC-591A-9D90-416EB4ECC4D7)]
                    interface ISessionManager3 : IInspectable
                    {
                        HRESULT GetOrCreateUninitializedSessionAsync([in] HSTRING packageName, [in] HSTRING typeName, [in] UINT32 priority, [out] [retval] Windows.Foundation.IAsyncOperation<IInspectable*>** operation);
                    }

                    [contract(Microsoft.Windows.Private.Workloads.SessionManager.SessionManagerContract, 1.0)]
                    [exclusiveto(Microsoft.Windows.Private.Workloads.SessionManager.SessionManager)]
                    [uuid(2E9ECA64-7D54-5BD1-82BE-9B91F80133DB)]
                    interface ISessionManagerStatics : IInspectable
                    {
                        HRESULT GetOrCreateAsync([out] [retval] Windows.Foundation.IAsyncOperation<Microsoft.Windows.Private.Workloads.SessionManager.SessionManager*>** operation);
                    }

                    [contract(Microsoft.Windows.Private.Workloads.SessionManager.SessionManagerContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.Windows.Private.Workloads.SessionManager.ISessionManagerStatics, Microsoft.Windows.Private.Workloads.SessionManager.SessionManagerContract, 1.0)]
                    [threading(both)]
                    runtimeclass SessionManager
                    {
                        [default] interface Microsoft.Windows.Private.Workloads.SessionManager.ISessionManager;
                        [contract(Microsoft.Windows.Private.Workloads.SessionManager.SessionManagerContract, 2.0)] interface Microsoft.Windows.Private.Workloads.SessionManager.ISessionManager2;
                        [contract(Microsoft.Windows.Private.Workloads.SessionManager.SessionManagerContract, 3.0)] interface Microsoft.Windows.Private.Workloads.SessionManager.ISessionManager3;
                        interface Microsoft.Windows.PrivateCommon.IAnchorInstance;
                        interface Microsoft.Windows.PrivateCommon.INotifyExpiredSessionHost;
                        interface Windows.Foundation.IClosable;
                    }
                }
            }
        }
    }
}
