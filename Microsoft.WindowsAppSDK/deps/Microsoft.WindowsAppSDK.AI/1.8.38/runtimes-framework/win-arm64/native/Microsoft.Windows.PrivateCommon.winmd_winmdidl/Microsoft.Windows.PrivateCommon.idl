//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";

// Forward Declare
namespace Windows
{
    namespace Foundation
    {
        interface IAsyncAction;
    }
}
namespace Microsoft
{
    namespace Windows
    {
        namespace PrivateCommon
        {
            apicontract SessionHostingSharedContract;

            typedef enum PixelFormat PixelFormat;

            typedef struct ImageBufferData ImageBufferData;

            typedef struct ImageBufferView ImageBufferView;

            typedef struct ImageBufferViewData ImageBufferViewData;

            interface IAnchorInstance;

            interface IGetSessionHostProcessId;

            interface IImageBufferPrivate;

            interface IImageBufferResource;

            interface IImageBufferResourceFactory;

            interface IModelManager;

            interface IModelManager2;

            interface IModelManager3;

            interface INotifyExpiredSessionHost;

            runtimeclass ImageBufferResource;
        }
    }
}

// Generic instantiations

// Type definition
namespace Microsoft
{
    namespace Windows
    {
        namespace PrivateCommon
        {
            [contractversion(5.0)]
            apicontract SessionHostingSharedContract
            {
            }

            [contract(Microsoft.Windows.PrivateCommon.SessionHostingSharedContract, 1.0)]
            enum PixelFormat
            {
                Undefined = 0,
                Rgb24     = 1,
                Argb32    = 2,
                Rgba32    = 3,
                Bgra32    = 4,
                Gray8     = 5
            };

            [contract(Microsoft.Windows.PrivateCommon.SessionHostingSharedContract, 2.0)]
            struct ImageBufferData
            {
                UINT32 height;
                UINT32 width;
                Microsoft.Windows.PrivateCommon.PixelFormat pixelFormat;
                UINT32 rowStride;
                UINT64 targetProcessHandle;
                UINT64 sourceProcessHandle;
            };

            [contract(Microsoft.Windows.PrivateCommon.SessionHostingSharedContract, 1.0)]
            struct ImageBufferView
            {
                UINT32 height;
                UINT32 width;
                Microsoft.Windows.PrivateCommon.PixelFormat pixelFormat;
                UINT32 rowStride;
            };

            [contract(Microsoft.Windows.PrivateCommon.SessionHostingSharedContract, 1.0)]
            struct ImageBufferViewData
            {
                UINT64 targetProcessHandle;
                UINT64 sourceProcessHandle;
            };

            [contract(Microsoft.Windows.PrivateCommon.SessionHostingSharedContract, 1.0)]
            [uuid(361C44E1-1FE7-5C7D-9DA4-128AEAF49A31)]
            interface IAnchorInstance : IInspectable
            {
                HRESULT AnchorInstance([in] IInspectable* instance);
            }

            [contract(Microsoft.Windows.PrivateCommon.SessionHostingSharedContract, 1.0)]
            [uuid(21B73D7A-6388-50AC-AB2A-FA9720B2B5F6)]
            interface IGetSessionHostProcessId : IInspectable
            {
                HRESULT GetSessionHostProcessId([out] [retval] UINT32* result);
            }

            [contract(Microsoft.Windows.PrivateCommon.SessionHostingSharedContract, 1.0)]
            [uuid(FA333FED-4E3C-53B4-BFAB-2F8A112D348C)]
            interface IImageBufferPrivate : IInspectable
            {
                HRESULT GetImageBufferView([out] [retval] Microsoft.Windows.PrivateCommon.ImageBufferView* result);
                HRESULT GetImageBufferViewData([in] UINT32 targetProcessId, [out] [retval] Microsoft.Windows.PrivateCommon.ImageBufferViewData* result);
                HRESULT SyncBufferWithOutValue();
                HRESULT GetImageBufferResource([in] IInspectable* sessionAsInspectable, [out] [retval] Microsoft.Windows.PrivateCommon.ImageBufferResource** result);
            }

            [contract(Microsoft.Windows.PrivateCommon.SessionHostingSharedContract, 2.0)]
            [exclusiveto(Microsoft.Windows.PrivateCommon.ImageBufferResource)]
            [uuid(E4856A61-8FCF-566A-BCD4-F56021869396)]
            interface IImageBufferResource : IInspectable
            {
                [propget] HRESULT BufferData([out] [retval] Microsoft.Windows.PrivateCommon.ImageBufferData* value);
                [propput] HRESULT BufferData([in] Microsoft.Windows.PrivateCommon.ImageBufferData value);
                HRESULT Buffer([out] [retval] UINT64* result);
                HRESULT Width([out] [retval] UINT32* result);
                HRESULT Height([out] [retval] UINT32* result);
                HRESULT RowStride([out] [retval] UINT32* result);
                HRESULT BytesPerPixel([out] [retval] UINT32* result);
                HRESULT Capacity([out] [retval] UINT32* result);
                HRESULT PixelFormat([out] [retval] Microsoft.Windows.PrivateCommon.PixelFormat* result);
            }

            [contract(Microsoft.Windows.PrivateCommon.SessionHostingSharedContract, 2.0)]
            [exclusiveto(Microsoft.Windows.PrivateCommon.ImageBufferResource)]
            [uuid(A98B98AE-DB34-50BF-8B9C-9C58E6CF4BB6)]
            interface IImageBufferResourceFactory : IInspectable
            {
                HRESULT CreateInstance([in] Microsoft.Windows.PrivateCommon.ImageBufferData bufferData, [out] [retval] Microsoft.Windows.PrivateCommon.ImageBufferResource** value);
                HRESULT CreateInstance2([in] UINT32 height, [in] UINT32 width, [in] Microsoft.Windows.PrivateCommon.PixelFormat pixelFormat, [in] UINT32 rowStride, [in] UINT64 targetProcessHandle, [in] UINT64 sourceProcessHandle, [out] [retval] Microsoft.Windows.PrivateCommon.ImageBufferResource** value);
            }

            [contract(Microsoft.Windows.PrivateCommon.SessionHostingSharedContract, 3.0)]
            [uuid(F7F4DE39-CE0A-5D0D-9F37-7D22B8B1B6DB)]
            interface IModelManager : IInspectable
            {
                HRESULT EnsureModelInitialized();
                HRESULT GenerateCacheModel([in] HSTRING offlineDriverPath);
            }

            [contract(Microsoft.Windows.PrivateCommon.SessionHostingSharedContract, 4.0)]
            [uuid(0EAA0435-97DC-564C-A5BD-70C69FD124F1)]
            interface IModelManager2 : IInspectable
                requires
                    Microsoft.Windows.PrivateCommon.IModelManager
            {
                HRESULT SetPackageFamilyName([in] HSTRING packageFamilyName);
            }

            [contract(Microsoft.Windows.PrivateCommon.SessionHostingSharedContract, 5.0)]
            [uuid(544EAD0D-AAB7-5A0A-82B6-B5D8CFEF0C5F)]
            interface IModelManager3 : IInspectable
                requires
                    Microsoft.Windows.PrivateCommon.IModelManager2,
                    Microsoft.Windows.PrivateCommon.IModelManager
            {
                HRESULT GenerateCacheModel();
                HRESULT SetCorrelationVector([in] HSTRING correlationVector);
                HRESULT IsModelCacheReady([out] [retval] boolean* result);
            }

            [contract(Microsoft.Windows.PrivateCommon.SessionHostingSharedContract, 1.0)]
            [uuid(94C562D6-4752-5008-AF26-04C82AC73F80)]
            interface INotifyExpiredSessionHost : IInspectable
            {
                HRESULT NotifyExpiredSessionHost([out] [retval] Windows.Foundation.IAsyncAction** operation);
            }

            [activatable(Microsoft.Windows.PrivateCommon.IImageBufferResourceFactory, Microsoft.Windows.PrivateCommon.SessionHostingSharedContract, 2.0)]
            [activatable(Microsoft.Windows.PrivateCommon.SessionHostingSharedContract, 2.0)]
            [contract(Microsoft.Windows.PrivateCommon.SessionHostingSharedContract, 2.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ImageBufferResource
            {
                [default] interface Microsoft.Windows.PrivateCommon.IImageBufferResource;
            }
        }
    }
}
