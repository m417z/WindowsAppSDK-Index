//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";

// Forward Declare
namespace Microsoft
{
    namespace Windows
    {
        namespace Foundation
        {
            apicontract DecimalContract;

            typedef struct DecimalValue DecimalValue;

            interface IDecimalHelperStatics;

            runtimeclass DecimalHelper;
        }
    }
}

// Generic instantiations

// Type definition
namespace Microsoft
{
    namespace Windows
    {
        namespace Foundation
        {
            [contractversion(1.0)]
            apicontract DecimalContract
            {
            }

            [contract(Microsoft.Windows.Foundation.DecimalContract, 1.0)]
            struct DecimalValue
            {
                UINT16 Reserved;
                BYTE Scale;
                BYTE Sign;
                UINT32 Hi32;
                UINT64 Lo64;
            };

            [contract(Microsoft.Windows.Foundation.DecimalContract, 1.0)]
            [exclusiveto(Microsoft.Windows.Foundation.DecimalHelper)]
            [uuid(BA09A415-E26C-55B3-9B76-B3AFFD556A7F)]
            interface IDecimalHelperStatics : IInspectable
            {
                HRESULT FromBoolean([in] boolean value, [out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
                HRESULT FromInt16([in] INT16 value, [out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
                HRESULT FromInt32([in] INT32 value, [out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
                HRESULT FromInt64([in] INT64 value, [out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
                HRESULT FromUInt8([in] BYTE value, [out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
                HRESULT FromUInt16([in] UINT16 value, [out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
                HRESULT FromUInt32([in] UINT32 value, [out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
                HRESULT FromUInt64([in] UINT64 value, [out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
                HRESULT FromSingle([in] FLOAT value, [out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
                HRESULT FromDouble([in] DOUBLE value, [out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
                [overload("FromString")] HRESULT FromString([in] HSTRING source, [out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
                HRESULT FromStringInvariant([in] HSTRING source, [out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
                [overload("FromString")] HRESULT FromStringWithLocale([in] HSTRING source, [in] HSTRING localeName, [out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
                [overload("TryFromString")] HRESULT TryFromString([in] HSTRING source, [out] Microsoft.Windows.Foundation.DecimalValue* value, [out] [retval] boolean* result);
                HRESULT TryFromStringInvariant([in] HSTRING source, [out] Microsoft.Windows.Foundation.DecimalValue* value, [out] [retval] boolean* result);
                [overload("TryFromString")] HRESULT TryFromStringWithLocale([in] HSTRING source, [in] HSTRING localeName, [out] Microsoft.Windows.Foundation.DecimalValue* value, [out] [retval] boolean* result);
                HRESULT ToBoolean([in] Microsoft.Windows.Foundation.DecimalValue value, [out] [retval] boolean* result);
                HRESULT ToInt16([in] Microsoft.Windows.Foundation.DecimalValue value, [out] [retval] INT16* result);
                HRESULT ToInt32([in] Microsoft.Windows.Foundation.DecimalValue value, [out] [retval] INT32* result);
                HRESULT ToInt64([in] Microsoft.Windows.Foundation.DecimalValue value, [out] [retval] INT64* result);
                HRESULT ToUInt8([in] Microsoft.Windows.Foundation.DecimalValue value, [out] [retval] BYTE* result);
                HRESULT ToUInt16([in] Microsoft.Windows.Foundation.DecimalValue value, [out] [retval] UINT16* result);
                HRESULT ToUInt32([in] Microsoft.Windows.Foundation.DecimalValue value, [out] [retval] UINT32* result);
                HRESULT ToUInt64([in] Microsoft.Windows.Foundation.DecimalValue value, [out] [retval] UINT64* result);
                HRESULT ToSingle([in] Microsoft.Windows.Foundation.DecimalValue value, [out] [retval] FLOAT* result);
                HRESULT ToDouble([in] Microsoft.Windows.Foundation.DecimalValue value, [out] [retval] DOUBLE* result);
                [overload("ToString")] HRESULT ToString([in] Microsoft.Windows.Foundation.DecimalValue value, [out] [retval] HSTRING* result);
                HRESULT ToStringInvariant([in] Microsoft.Windows.Foundation.DecimalValue value, [out] [retval] HSTRING* result);
                [overload("ToString")] HRESULT ToStringWithLocale([in] Microsoft.Windows.Foundation.DecimalValue value, [in] HSTRING localeName, [out] [retval] HSTRING* result);
                HRESULT Equals([in] Microsoft.Windows.Foundation.DecimalValue left, [in] Microsoft.Windows.Foundation.DecimalValue right, [out] [retval] boolean* result);
                HRESULT Compare([in] Microsoft.Windows.Foundation.DecimalValue left, [in] Microsoft.Windows.Foundation.DecimalValue right, [out] [retval] INT32* result);
                HRESULT IsValid([in] Microsoft.Windows.Foundation.DecimalValue value, [out] [retval] boolean* result);
                HRESULT IsInteger([in] Microsoft.Windows.Foundation.DecimalValue value, [out] [retval] boolean* result);
                HRESULT Scale([in] Microsoft.Windows.Foundation.DecimalValue value, [out] [retval] BYTE* result);
                HRESULT Sign([in] Microsoft.Windows.Foundation.DecimalValue value, [out] [retval] INT32* result);
                HRESULT MaxScale([out] [retval] BYTE* result);
                HRESULT MaxValue([out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
                HRESULT MinValue([out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
                HRESULT Negate([in] Microsoft.Windows.Foundation.DecimalValue value, [out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
                HRESULT Abs([in] Microsoft.Windows.Foundation.DecimalValue value, [out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
                HRESULT Truncate([in] Microsoft.Windows.Foundation.DecimalValue value, [out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
                HRESULT Floor([in] Microsoft.Windows.Foundation.DecimalValue value, [out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
                HRESULT Ceiling([in] Microsoft.Windows.Foundation.DecimalValue value, [out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
                HRESULT Round([in] Microsoft.Windows.Foundation.DecimalValue value, [in] INT32 decimalPlaces, [out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
                HRESULT Clamp([in] Microsoft.Windows.Foundation.DecimalValue value, [in] Microsoft.Windows.Foundation.DecimalValue min, [in] Microsoft.Windows.Foundation.DecimalValue max, [out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
                HRESULT Add([in] Microsoft.Windows.Foundation.DecimalValue left, [in] Microsoft.Windows.Foundation.DecimalValue right, [out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
                HRESULT Subtract([in] Microsoft.Windows.Foundation.DecimalValue left, [in] Microsoft.Windows.Foundation.DecimalValue right, [out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
                HRESULT Multiply([in] Microsoft.Windows.Foundation.DecimalValue left, [in] Microsoft.Windows.Foundation.DecimalValue right, [out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
                HRESULT Divide([in] Microsoft.Windows.Foundation.DecimalValue left, [in] Microsoft.Windows.Foundation.DecimalValue right, [out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
                HRESULT Modulo([in] Microsoft.Windows.Foundation.DecimalValue left, [in] Microsoft.Windows.Foundation.DecimalValue right, [out] [retval] Microsoft.Windows.Foundation.DecimalValue* result);
            }

            [contract(Microsoft.Windows.Foundation.DecimalContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Microsoft.Windows.Foundation.IDecimalHelperStatics, Microsoft.Windows.Foundation.DecimalContract, 1.0)]
            [threading(both)]
            runtimeclass DecimalHelper
            {
            }
        }
    }
}
