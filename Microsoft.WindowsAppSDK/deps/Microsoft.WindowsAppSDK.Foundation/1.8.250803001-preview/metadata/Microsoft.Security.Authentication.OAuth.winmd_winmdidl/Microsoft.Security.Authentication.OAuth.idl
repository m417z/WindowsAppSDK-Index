//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Microsoft.UI.idl";
import "Windows.Data.Json.idl";
import "Windows.Web.Http.idl";
import "Windows.Web.Http.Headers.idl";

// Forward Declare
namespace Microsoft
{
    namespace UI
    {
        typedef struct WindowId WindowId;
    }
}
namespace Windows
{
    namespace Data
    {
        namespace Json
        {
            interface IJsonValue;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        runtimeclass Uri;
    }
}
namespace Windows
{
    namespace Web
    {
        namespace Http
        {
            namespace Headers
            {
                runtimeclass HttpCredentialsHeaderValue;
            }
        }
    }
}
namespace Windows
{
    namespace Web
    {
        namespace Http
        {
            runtimeclass HttpResponseMessage;
        }
    }
}
namespace Microsoft
{
    namespace Security
    {
        namespace Authentication
        {
            namespace OAuth
            {
                apicontract OAuthContract;

                typedef enum CodeChallengeMethodKind CodeChallengeMethodKind;

                typedef enum TokenFailureKind TokenFailureKind;

                interface IAuthFailure;

                interface IAuthRequestParams;

                interface IAuthRequestParamsFactory;

                interface IAuthRequestParamsStatics;

                interface IAuthRequestResult;

                interface IAuthResponse;

                interface IClientAuthentication;

                interface IClientAuthenticationFactory;

                interface IClientAuthenticationStatics;

                interface IOAuth2ManagerStatics;

                interface ITokenFailure;

                interface ITokenRequestParams;

                interface ITokenRequestParamsFactory;

                interface ITokenRequestParamsStatics;

                interface ITokenRequestResult;

                interface ITokenResponse;

                runtimeclass AuthFailure;

                runtimeclass AuthRequestParams;

                runtimeclass AuthRequestResult;

                runtimeclass AuthResponse;

                runtimeclass ClientAuthentication;

                runtimeclass OAuth2Manager;

                runtimeclass TokenFailure;

                runtimeclass TokenRequestParams;

                runtimeclass TokenRequestResult;

                runtimeclass TokenResponse;
            }
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace Security
    {
        namespace Authentication
        {
            namespace OAuth
            {
                declare
                {
                    interface Windows.Foundation.IAsyncOperation<Microsoft.Security.Authentication.OAuth.AuthRequestResult*>;

                    interface Windows.Foundation.IAsyncOperation<Microsoft.Security.Authentication.OAuth.TokenRequestResult*>;
                }
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace Security
    {
        namespace Authentication
        {
            namespace OAuth
            {
                [contractversion(1.0)]
                apicontract OAuthContract
                {
                }

                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                enum CodeChallengeMethodKind
                {
                    None  = 0,
                    S256  = 1,
                    Plain = 2
                };

                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                enum TokenFailureKind
                {
                    ErrorResponse   = 0,
                    HttpFailure     = 1,
                    InvalidResponse = 2
                };

                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [exclusiveto(Microsoft.Security.Authentication.OAuth.AuthFailure)]
                [uuid(EC55ED5F-0497-53CB-976B-ABD146350175)]
                interface IAuthFailure : IInspectable
                {
                    [propget] HRESULT Error([out] [retval] HSTRING* value);
                    [propget] HRESULT ErrorDescription([out] [retval] HSTRING* value);
                    [propget] HRESULT ErrorUri([out] [retval] Windows.Foundation.Uri** value);
                    [propget] HRESULT State([out] [retval] HSTRING* value);
                    [propget] HRESULT AdditionalParams([out] [retval] Windows.Foundation.Collections.IMapView<HSTRING, HSTRING>** value);
                }

                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [exclusiveto(Microsoft.Security.Authentication.OAuth.AuthRequestParams)]
                [uuid(AAC61E23-9155-551A-AC37-CDB2995F88D2)]
                interface IAuthRequestParams : IInspectable
                {
                    [propget] HRESULT ResponseType([out] [retval] HSTRING* value);
                    [propput] HRESULT ResponseType([in] HSTRING value);
                    [propget] HRESULT ClientId([out] [retval] HSTRING* value);
                    [propput] HRESULT ClientId([in] HSTRING value);
                    [propget] HRESULT RedirectUri([out] [retval] Windows.Foundation.Uri** value);
                    [propput] HRESULT RedirectUri([in] Windows.Foundation.Uri* value);
                    [propget] HRESULT State([out] [retval] HSTRING* value);
                    [propput] HRESULT State([in] HSTRING value);
                    [propget] HRESULT Scope([out] [retval] HSTRING* value);
                    [propput] HRESULT Scope([in] HSTRING value);
                    [propget] HRESULT CodeChallenge([out] [retval] HSTRING* value);
                    [propput] HRESULT CodeChallenge([in] HSTRING value);
                    [propget] HRESULT CodeChallengeMethod([out] [retval] Microsoft.Security.Authentication.OAuth.CodeChallengeMethodKind* value);
                    [propput] HRESULT CodeChallengeMethod([in] Microsoft.Security.Authentication.OAuth.CodeChallengeMethodKind value);
                    [propget] HRESULT AdditionalParams([out] [retval] Windows.Foundation.Collections.IMap<HSTRING, HSTRING>** value);
                }

                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [exclusiveto(Microsoft.Security.Authentication.OAuth.AuthRequestParams)]
                [uuid(539BDCA7-BDE4-5A63-85D1-33403F6E3452)]
                interface IAuthRequestParamsFactory : IInspectable
                {
                    HRESULT CreateInstance([in] HSTRING responseType, [in] HSTRING clientId, [out] [retval] Microsoft.Security.Authentication.OAuth.AuthRequestParams** value);
                    HRESULT CreateInstance2([in] HSTRING responseType, [in] HSTRING clientId, [in] Windows.Foundation.Uri* redirectUri, [out] [retval] Microsoft.Security.Authentication.OAuth.AuthRequestParams** value);
                }

                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [exclusiveto(Microsoft.Security.Authentication.OAuth.AuthRequestParams)]
                [uuid(0BEFD4F0-6864-5BF4-BD8E-2F3BF98906B5)]
                interface IAuthRequestParamsStatics : IInspectable
                {
                    [overload("CreateForAuthorizationCodeRequest")] HRESULT CreateForAuthorizationCodeRequest([in] HSTRING clientId, [out] [retval] Microsoft.Security.Authentication.OAuth.AuthRequestParams** result);
                    [overload("CreateForAuthorizationCodeRequest")] HRESULT CreateForAuthorizationCodeRequest2([in] HSTRING clientId, [in] Windows.Foundation.Uri* redirectUri, [out] [retval] Microsoft.Security.Authentication.OAuth.AuthRequestParams** result);
                }

                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [exclusiveto(Microsoft.Security.Authentication.OAuth.AuthRequestResult)]
                [uuid(10F8B804-04CF-5651-BD52-7DA9346DEBC1)]
                interface IAuthRequestResult : IInspectable
                {
                    [propget] HRESULT ResponseUri([out] [retval] Windows.Foundation.Uri** value);
                    [propget] HRESULT Response([out] [retval] Microsoft.Security.Authentication.OAuth.AuthResponse** value);
                    [propget] HRESULT Failure([out] [retval] Microsoft.Security.Authentication.OAuth.AuthFailure** value);
                }

                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [exclusiveto(Microsoft.Security.Authentication.OAuth.AuthResponse)]
                [uuid(5BC1FA62-FDED-5769-9D40-DED1EEA90D72)]
                interface IAuthResponse : IInspectable
                {
                    [propget] HRESULT State([out] [retval] HSTRING* value);
                    [propget] HRESULT Code([out] [retval] HSTRING* value);
                    [propget] HRESULT AccessToken([out] [retval] HSTRING* value);
                    [propget] HRESULT TokenType([out] [retval] HSTRING* value);
                    [propget] HRESULT ExpiresIn([out] [retval] HSTRING* value);
                    [propget] HRESULT Scope([out] [retval] HSTRING* value);
                    [propget] HRESULT AdditionalParams([out] [retval] Windows.Foundation.Collections.IMapView<HSTRING, HSTRING>** value);
                }

                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [exclusiveto(Microsoft.Security.Authentication.OAuth.ClientAuthentication)]
                [uuid(EF99342D-D597-5EFF-878A-8DE0CB597172)]
                interface IClientAuthentication : IInspectable
                {
                    [propget] HRESULT Authorization([out] [retval] Windows.Web.Http.Headers.HttpCredentialsHeaderValue** value);
                    [propput] HRESULT Authorization([in] Windows.Web.Http.Headers.HttpCredentialsHeaderValue* value);
                    [propget] HRESULT ProxyAuthorization([out] [retval] Windows.Web.Http.Headers.HttpCredentialsHeaderValue** value);
                    [propput] HRESULT ProxyAuthorization([in] Windows.Web.Http.Headers.HttpCredentialsHeaderValue* value);
                    [propget] HRESULT AdditionalHeaders([out] [retval] Windows.Foundation.Collections.IMap<HSTRING, HSTRING>** value);
                }

                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [exclusiveto(Microsoft.Security.Authentication.OAuth.ClientAuthentication)]
                [uuid(0D50E9F5-C37F-57CC-B9EC-2B193B0F9CEC)]
                interface IClientAuthenticationFactory : IInspectable
                {
                    HRESULT CreateInstance([in] Windows.Web.Http.Headers.HttpCredentialsHeaderValue* authorization, [out] [retval] Microsoft.Security.Authentication.OAuth.ClientAuthentication** value);
                }

                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [exclusiveto(Microsoft.Security.Authentication.OAuth.ClientAuthentication)]
                [uuid(65613560-2B6F-52FD-A479-3A96624682AE)]
                interface IClientAuthenticationStatics : IInspectable
                {
                    HRESULT CreateForBasicAuthorization([in] HSTRING clientId, [in] HSTRING clientSecret, [out] [retval] Microsoft.Security.Authentication.OAuth.ClientAuthentication** result);
                }

                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [exclusiveto(Microsoft.Security.Authentication.OAuth.OAuth2Manager)]
                [uuid(AC9D0DD1-C07E-5302-8150-199C7D343F57)]
                interface IOAuth2ManagerStatics : IInspectable
                {
                    HRESULT RequestAuthWithParamsAsync([in] Microsoft.UI.WindowId parentWindowId, [in] Windows.Foundation.Uri* authEndpoint, [in] Microsoft.Security.Authentication.OAuth.AuthRequestParams* params, [out] [retval] Windows.Foundation.IAsyncOperation<Microsoft.Security.Authentication.OAuth.AuthRequestResult*>** operation);
                    HRESULT CompleteAuthRequest([in] Windows.Foundation.Uri* responseUri, [out] [retval] boolean* result);
                    [overload("RequestTokenAsync")] HRESULT RequestTokenAsync([in] Windows.Foundation.Uri* tokenEndpoint, [in] Microsoft.Security.Authentication.OAuth.TokenRequestParams* params, [out] [retval] Windows.Foundation.IAsyncOperation<Microsoft.Security.Authentication.OAuth.TokenRequestResult*>** operation);
                    [overload("RequestTokenAsync")] HRESULT RequestTokenAsync2([in] Windows.Foundation.Uri* tokenEndpoint, [in] Microsoft.Security.Authentication.OAuth.TokenRequestParams* params, [in] Microsoft.Security.Authentication.OAuth.ClientAuthentication* clientAuth, [out] [retval] Windows.Foundation.IAsyncOperation<Microsoft.Security.Authentication.OAuth.TokenRequestResult*>** operation);
                }

                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [exclusiveto(Microsoft.Security.Authentication.OAuth.TokenFailure)]
                [uuid(60F8D417-EA6A-51D2-8AD7-F0E5177AEF0A)]
                interface ITokenFailure : IInspectable
                {
                    [propget] HRESULT Kind([out] [retval] Microsoft.Security.Authentication.OAuth.TokenFailureKind* value);
                    [propget] HRESULT ErrorCode([out] [retval] HRESULT* value);
                    [propget] HRESULT Error([out] [retval] HSTRING* value);
                    [propget] HRESULT ErrorDescription([out] [retval] HSTRING* value);
                    [propget] HRESULT ErrorUri([out] [retval] Windows.Foundation.Uri** value);
                    [propget] HRESULT AdditionalParams([out] [retval] Windows.Foundation.Collections.IMapView<HSTRING, Windows.Data.Json.IJsonValue*>** value);
                }

                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [exclusiveto(Microsoft.Security.Authentication.OAuth.TokenRequestParams)]
                [uuid(49134DBC-AAB5-5BA4-BCDF-950214D81182)]
                interface ITokenRequestParams : IInspectable
                {
                    [propget] HRESULT GrantType([out] [retval] HSTRING* value);
                    [propput] HRESULT GrantType([in] HSTRING value);
                    [propget] HRESULT Code([out] [retval] HSTRING* value);
                    [propput] HRESULT Code([in] HSTRING value);
                    [propget] HRESULT RedirectUri([out] [retval] Windows.Foundation.Uri** value);
                    [propput] HRESULT RedirectUri([in] Windows.Foundation.Uri* value);
                    [propget] HRESULT CodeVerifier([out] [retval] HSTRING* value);
                    [propput] HRESULT CodeVerifier([in] HSTRING value);
                    [propget] HRESULT ClientId([out] [retval] HSTRING* value);
                    [propput] HRESULT ClientId([in] HSTRING value);
                    [propget] HRESULT Username([out] [retval] HSTRING* value);
                    [propput] HRESULT Username([in] HSTRING value);
                    [propget] HRESULT Password([out] [retval] HSTRING* value);
                    [propput] HRESULT Password([in] HSTRING value);
                    [propget] HRESULT Scope([out] [retval] HSTRING* value);
                    [propput] HRESULT Scope([in] HSTRING value);
                    [propget] HRESULT RefreshToken([out] [retval] HSTRING* value);
                    [propput] HRESULT RefreshToken([in] HSTRING value);
                    [propget] HRESULT AdditionalParams([out] [retval] Windows.Foundation.Collections.IMap<HSTRING, HSTRING>** value);
                }

                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [exclusiveto(Microsoft.Security.Authentication.OAuth.TokenRequestParams)]
                [uuid(2BF39C30-2F30-5788-98D2-A8BA622BE809)]
                interface ITokenRequestParamsFactory : IInspectable
                {
                    HRESULT CreateInstance([in] HSTRING grantType, [out] [retval] Microsoft.Security.Authentication.OAuth.TokenRequestParams** value);
                }

                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [exclusiveto(Microsoft.Security.Authentication.OAuth.TokenRequestParams)]
                [uuid(68B7AF65-4381-5593-8820-F74A605B9F3B)]
                interface ITokenRequestParamsStatics : IInspectable
                {
                    HRESULT CreateForAuthorizationCodeRequest([in] Microsoft.Security.Authentication.OAuth.AuthResponse* authResponse, [out] [retval] Microsoft.Security.Authentication.OAuth.TokenRequestParams** result);
                    HRESULT CreateForClientCredentials([out] [retval] Microsoft.Security.Authentication.OAuth.TokenRequestParams** result);
                    HRESULT CreateForExtension([in] Windows.Foundation.Uri* extensionUri, [out] [retval] Microsoft.Security.Authentication.OAuth.TokenRequestParams** result);
                    HRESULT CreateForRefreshToken([in] HSTRING refreshToken, [out] [retval] Microsoft.Security.Authentication.OAuth.TokenRequestParams** result);
                }

                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [exclusiveto(Microsoft.Security.Authentication.OAuth.TokenRequestResult)]
                [uuid(35B31F77-F166-50DF-A837-EC0460215166)]
                interface ITokenRequestResult : IInspectable
                {
                    [propget] HRESULT ResponseMessage([out] [retval] Windows.Web.Http.HttpResponseMessage** value);
                    [propget] HRESULT Response([out] [retval] Microsoft.Security.Authentication.OAuth.TokenResponse** value);
                    [propget] HRESULT Failure([out] [retval] Microsoft.Security.Authentication.OAuth.TokenFailure** value);
                }

                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [exclusiveto(Microsoft.Security.Authentication.OAuth.TokenResponse)]
                [uuid(9D9D8CD3-04B2-5DF6-BFD2-E8A6859745DA)]
                interface ITokenResponse : IInspectable
                {
                    [propget] HRESULT AccessToken([out] [retval] HSTRING* value);
                    [propget] HRESULT TokenType([out] [retval] HSTRING* value);
                    [propget] HRESULT ExpiresIn([out] [retval] DOUBLE* value);
                    [propget] HRESULT RefreshToken([out] [retval] HSTRING* value);
                    [propget] HRESULT Scope([out] [retval] HSTRING* value);
                    [propget] HRESULT AdditionalParams([out] [retval] Windows.Foundation.Collections.IMapView<HSTRING, Windows.Data.Json.IJsonValue*>** value);
                }

                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass AuthFailure
                {
                    [default] interface Microsoft.Security.Authentication.OAuth.IAuthFailure;
                }

                [activatable(Microsoft.Security.Authentication.OAuth.IAuthRequestParamsFactory, Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.Security.Authentication.OAuth.IAuthRequestParamsStatics, Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [threading(both)]
                runtimeclass AuthRequestParams
                {
                    [default] interface Microsoft.Security.Authentication.OAuth.IAuthRequestParams;
                }

                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass AuthRequestResult
                {
                    [default] interface Microsoft.Security.Authentication.OAuth.IAuthRequestResult;
                }

                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass AuthResponse
                {
                    [default] interface Microsoft.Security.Authentication.OAuth.IAuthResponse;
                }

                [activatable(Microsoft.Security.Authentication.OAuth.IClientAuthenticationFactory, Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [activatable(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.Security.Authentication.OAuth.IClientAuthenticationStatics, Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [threading(both)]
                runtimeclass ClientAuthentication
                {
                    [default] interface Microsoft.Security.Authentication.OAuth.IClientAuthentication;
                }

                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.Security.Authentication.OAuth.IOAuth2ManagerStatics, Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [threading(both)]
                runtimeclass OAuth2Manager
                {
                }

                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass TokenFailure
                {
                    [default] interface Microsoft.Security.Authentication.OAuth.ITokenFailure;
                }

                [activatable(Microsoft.Security.Authentication.OAuth.ITokenRequestParamsFactory, Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.Security.Authentication.OAuth.ITokenRequestParamsStatics, Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [threading(both)]
                runtimeclass TokenRequestParams
                {
                    [default] interface Microsoft.Security.Authentication.OAuth.ITokenRequestParams;
                }

                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass TokenRequestResult
                {
                    [default] interface Microsoft.Security.Authentication.OAuth.ITokenRequestResult;
                }

                [contract(Microsoft.Security.Authentication.OAuth.OAuthContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass TokenResponse
                {
                    [default] interface Microsoft.Security.Authentication.OAuth.ITokenResponse;
                }
            }
        }
    }
}
