//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Microsoft.Foundation.idl";
import "Windows.Graphics.Effects.idl";

// Forward Declare
namespace Microsoft
{
    namespace Foundation
    {
        apicontract LiftedContract;
    }
}
namespace Windows
{
    namespace Graphics
    {
        namespace Effects
        {
            interface IGraphicsEffect;

            interface IGraphicsEffectSource;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Composition
        {
            namespace Effects
            {
                typedef enum SceneLightingEffectReflectanceModel SceneLightingEffectReflectanceModel;

                interface ISceneLightingEffect;

                interface ISceneLightingEffect2;

                runtimeclass SceneLightingEffect;
            }
        }
    }
}

// Generic instantiations

// Type definition
namespace Microsoft
{
    namespace UI
    {
        namespace Composition
        {
            namespace Effects
            {
                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                enum SceneLightingEffectReflectanceModel
                {
                    BlinnPhong                = 0,
                    PhysicallyBasedBlinnPhong = 1
                };

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Effects.SceneLightingEffect)]
                [uuid(EB1E7316-114C-5950-8480-20A29A3BB1EE)]
                interface ISceneLightingEffect : IInspectable
                {
                    [propget] HRESULT AmbientAmount([out] [retval] FLOAT* value);
                    [propput] HRESULT AmbientAmount([in] FLOAT value);
                    [propget] HRESULT DiffuseAmount([out] [retval] FLOAT* value);
                    [propput] HRESULT DiffuseAmount([in] FLOAT value);
                    [propget] HRESULT NormalMapSource([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** value);
                    [propput] HRESULT NormalMapSource([in] Windows.Graphics.Effects.IGraphicsEffectSource* value);
                    [propget] HRESULT SpecularAmount([out] [retval] FLOAT* value);
                    [propput] HRESULT SpecularAmount([in] FLOAT value);
                    [propget] HRESULT SpecularShine([out] [retval] FLOAT* value);
                    [propput] HRESULT SpecularShine([in] FLOAT value);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Effects.SceneLightingEffect)]
                [uuid(6B6496B2-468D-50D1-BBE9-593B8263AD80)]
                interface ISceneLightingEffect2 : IInspectable
                {
                    [propget] HRESULT ReflectanceModel([out] [retval] Microsoft.UI.Composition.Effects.SceneLightingEffectReflectanceModel* value);
                    [propput] HRESULT ReflectanceModel([in] Microsoft.UI.Composition.Effects.SceneLightingEffectReflectanceModel value);
                }

                [activatable(Microsoft.Foundation.LiftedContract, 1.0)]
                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass SceneLightingEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.ISceneLightingEffect;
                    [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.Effects.ISceneLightingEffect2;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }
            }
        }
    }
}
