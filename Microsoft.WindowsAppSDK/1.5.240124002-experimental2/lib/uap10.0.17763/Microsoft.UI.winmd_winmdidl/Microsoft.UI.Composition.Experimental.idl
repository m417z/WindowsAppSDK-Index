//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Microsoft.Foundation.idl";
import "Microsoft.UI.Composition.idl";
import "Windows.Foundation.Numerics.idl";
import "Windows.Graphics.idl";
import "Windows.UI.idl";

// Forward Declare
namespace Microsoft
{
    namespace Foundation
    {
        apicontract WindowsAppSDKContract;
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Composition
        {
            runtimeclass CompositionObject;

            runtimeclass CompositionVisualSurface;

            runtimeclass Compositor;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        namespace Numerics
        {
            typedef struct Matrix3x2 Matrix3x2;

            typedef struct Matrix4x4 Matrix4x4;

            typedef struct Vector2 Vector2;

            typedef struct Vector3 Vector3;

            typedef struct Vector4 Vector4;
        }
    }
}
namespace Windows
{
    namespace Graphics
    {
        typedef struct SizeInt32 SizeInt32;
    }
}
namespace Windows
{
    namespace UI
    {
        typedef struct Color Color;
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Composition
        {
            namespace Experimental
            {
                typedef enum ExpExpressionNotificationProperty ExpExpressionNotificationProperty;

                interface IExpCompositionPropertyChanged;

                interface IExpCompositionPropertyChangedListener;

                interface IExpCompositionVisualSurfaceStatics;

                interface IExpCompositor;

                interface IExpVisual;

                runtimeclass ExpCompositionVisualSurface;
            }
        }
    }
}

// Generic instantiations

// Type definition
namespace Microsoft
{
    namespace UI
    {
        namespace Composition
        {
            namespace Experimental
            {
                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.5)]
                [experimental]
                enum ExpExpressionNotificationProperty
                {
                    Undefined          = 0,
                    Clip               = 1,
                    Offset             = 2,
                    Opacity            = 3,
                    Size               = 4,
                    RelativeOffset     = 5,
                    RelativeSize       = 6,
                    AnchorPoint        = 7,
                    CenterPoint        = 8,
                    Orientation        = 9,
                    RotationAngle      = 10,
                    RotationAxis       = 11,
                    Scale              = 12,
                    TransformMatrix    = 13,
                    BottomInset        = 14,
                    LeftInset          = 15,
                    RightInset         = 16,
                    TopInset           = 17,
                    LeftRadiusX        = 18,
                    LeftRadiusY        = 19,
                    BottomRightRadiusX = 20,
                    BottomRightRadiusY = 21,
                    TopLeftRadiusX     = 22,
                    TopLeftRadiusY     = 23,
                    TopRightRadiusX    = 24,
                    TopRightRadiusY    = 25
                };

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.5)]
                [experimental]
                [uuid(12B579A9-6A27-5CDE-A2A1-C557BB7DFDB3)]
                interface IExpCompositionPropertyChanged : IInspectable
                {
                    HRESULT SetPropertyChangedListener([in] Microsoft.UI.Composition.Experimental.ExpExpressionNotificationProperty property, [in] Microsoft.UI.Composition.Experimental.IExpCompositionPropertyChangedListener* listener);
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.5)]
                [experimental]
                [uuid(5F9C3D96-1E77-5980-8B28-7A9B8614A863)]
                interface IExpCompositionPropertyChangedListener : IInspectable
                {
                    HRESULT NotifyBooleanPropertyChanged([in] Microsoft.UI.Composition.CompositionObject* target, [in] Microsoft.UI.Composition.Experimental.ExpExpressionNotificationProperty property, [in] boolean value);
                    HRESULT NotifyColorPropertyChanged([in] Microsoft.UI.Composition.CompositionObject* target, [in] Microsoft.UI.Composition.Experimental.ExpExpressionNotificationProperty property, [in] Windows.UI.Color value);
                    HRESULT NotifyMatrix3x2PropertyChanged([in] Microsoft.UI.Composition.CompositionObject* target, [in] Microsoft.UI.Composition.Experimental.ExpExpressionNotificationProperty property, [in] Windows.Foundation.Numerics.Matrix3x2 value);
                    HRESULT NotifyMatrix4x4PropertyChanged([in] Microsoft.UI.Composition.CompositionObject* target, [in] Microsoft.UI.Composition.Experimental.ExpExpressionNotificationProperty property, [in] Windows.Foundation.Numerics.Matrix4x4 value);
                    HRESULT NotifyReferencePropertyChanged([in] Microsoft.UI.Composition.CompositionObject* target, [in] Microsoft.UI.Composition.Experimental.ExpExpressionNotificationProperty property);
                    HRESULT NotifySinglePropertyChanged([in] Microsoft.UI.Composition.CompositionObject* target, [in] Microsoft.UI.Composition.Experimental.ExpExpressionNotificationProperty property, [in] FLOAT value);
                    HRESULT NotifyVector2PropertyChanged([in] Microsoft.UI.Composition.CompositionObject* target, [in] Microsoft.UI.Composition.Experimental.ExpExpressionNotificationProperty property, [in] Windows.Foundation.Numerics.Vector2 value);
                    HRESULT NotifyVector3PropertyChanged([in] Microsoft.UI.Composition.CompositionObject* target, [in] Microsoft.UI.Composition.Experimental.ExpExpressionNotificationProperty property, [in] Windows.Foundation.Numerics.Vector3 value);
                    HRESULT NotifyVector4PropertyChanged([in] Microsoft.UI.Composition.CompositionObject* target, [in] Microsoft.UI.Composition.Experimental.ExpExpressionNotificationProperty property, [in] Windows.Foundation.Numerics.Vector4 value);
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.5)]
                [exclusiveto(Microsoft.UI.Composition.Experimental.ExpCompositionVisualSurface)]
                [experimental]
                [uuid(46193461-9018-5674-A09C-4AE6A29DAA35)]
                interface IExpCompositionVisualSurfaceStatics : IInspectable
                {
                    [overload("CreateVisualSurface")] HRESULT CreateVisualSurfaceWithRealizationSize([in] Microsoft.UI.Composition.Compositor* compositor, [in] Windows.Graphics.SizeInt32 realizationSize, [in] boolean frozen, [out] [retval] Microsoft.UI.Composition.CompositionVisualSurface** result);
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.5)]
                [experimental]
                [uuid(DDFE7441-66C9-5654-9E80-FF2677295995)]
                interface IExpCompositor : IInspectable
                {
                    HRESULT OpenSharedManipulationTransformFromHandle([in] UINT64 handle, [out] [retval] IInspectable** result);
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.5)]
                [experimental]
                [uuid(8FACCF79-665B-578F-8197-F8A64F8833D6)]
                interface IExpVisual : IInspectable
                {
                    HRESULT SetInteraction([in] IInspectable* interaction);
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.5)]
                [experimental]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Composition.Experimental.IExpCompositionVisualSurfaceStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.5)]
                [threading(both)]
                runtimeclass ExpCompositionVisualSurface
                {
                }
            }
        }
    }
}
