//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Microsoft.Foundation.idl";
import "Microsoft.UI.idl";
import "Microsoft.UI.Composition.idl";
import "Microsoft.UI.Dispatching.idl";
import "Windows.Foundation.Numerics.idl";
import "Windows.Graphics.idl";
import "Windows.UI.idl";
import "Windows.UI.Composition.idl";
import "Windows.UI.Core.idl";

// Forward Declare
namespace Microsoft
{
    namespace Foundation
    {
        apicontract WindowsAppSDKContract;
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Composition
        {
            typedef enum CompositionBorderMode CompositionBorderMode;

            runtimeclass Compositor;

            runtimeclass ContainerVisual;

            interface ICompositionSupportsSystemBackdrop;

            runtimeclass Visual;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Dispatching
        {
            runtimeclass DispatcherQueue;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        typedef struct DisplayId DisplayId;

        interface IClosableNotifier;

        typedef struct WindowId WindowId;
    }
}
namespace Windows
{
    namespace Foundation
    {
        namespace Collections
        {
            interface IPropertySet;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        interface IClosable;
    }
}
namespace Windows
{
    namespace Foundation
    {
        namespace Numerics
        {
            typedef struct Matrix3x2 Matrix3x2;

            typedef struct Vector2 Vector2;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        typedef struct Point Point;

        typedef struct Rect Rect;
    }
}
namespace Windows
{
    namespace Graphics
    {
        typedef struct PointInt32 PointInt32;

        typedef struct RectInt32 RectInt32;

        typedef struct SizeInt32 SizeInt32;
    }
}
namespace Windows
{
    namespace UI
    {
        typedef struct Color Color;
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Composition
        {
            runtimeclass Compositor;

            runtimeclass ContainerVisual;

            runtimeclass Visual;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Core
        {
            runtimeclass CoreWindow;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Content
        {
            typedef enum AutomationOptions AutomationOptions;

            typedef enum ContentCoordinateRoundingMode ContentCoordinateRoundingMode;

            typedef enum ContentDisplayOrientations ContentDisplayOrientations;

            typedef enum ContentLayoutDirection ContentLayoutDirection;

            typedef enum ContentSizePolicy ContentSizePolicy;

            interface IChildContentLink;

            interface IChildContentLinkStatics;

            interface IContentAppWindowBridge;

            interface IContentAppWindowBridgeStatics;

            interface IContentCoordinateConverter;

            interface IContentCoordinateConverterFactory;

            interface IContentCoordinateConverterStatics;

            interface IContentDeferral;

            interface IContentEnvironmentSettingChangedEventArgs;

            interface IContentEnvironmentStateChangedEventArgs;

            interface IContentEnvironmentStateChangedEventArgs2;

            interface IContentExternalBackdropLink;

            interface IContentExternalBackdropLinkStatics;

            interface IContentExternalOutputLink;

            interface IContentExternalOutputLinkStatics;

            interface IContentIsland;

            interface IContentIsland2;

            interface IContentIsland3;

            interface IContentIslandAutomation;

            interface IContentIslandAutomationProviderRequestedEventArgs;

            interface IContentIslandEndpointConnectionPrivate;

            interface IContentIslandEnvironment;

            interface IContentIslandEnvironment2;

            interface IContentIslandEnvironment3;

            interface IContentIslandEnvironmentFactory;

            interface IContentIslandFactory;

            interface IContentIslandStateChangedEventArgs;

            interface IContentIslandStatics;

            interface IContentIslandStatics2;

            interface IContentLink;

            interface IContentNodeOwner;

            interface IContentSite;

            interface IContentSite2;

            interface IContentSite3;

            interface IContentSiteAutomationProviderRequestedEventArgs;

            interface IContentSiteBridge;

            interface IContentSiteBridge2;

            interface IContentSiteBridgeAutomation;

            interface IContentSiteBridgeEndpointConnectionPrivate;

            interface IContentSiteEnvironment;

            interface IContentSiteEnvironment2;

            interface IContentSiteEnvironmentFactory;

            interface IContentSiteEnvironmentView;

            interface IContentSiteEnvironmentViewFactory;

            interface IContentSiteFactory;

            interface IContentSiteRequestedStateChangedEventArgs;

            interface IContentSiteView;

            interface IContentSiteView2;

            interface IContentSiteViewFactory;

            interface ICoreWindowSiteBridge;

            interface ICoreWindowSiteBridgeStatics;

            interface IDesktopChildSiteBridge;

            interface IDesktopChildSiteBridgeStatics;

            interface IDesktopSiteBridge;

            interface IDesktopSiteBridge2;

            interface IDesktopSiteBridgeFactory;

            interface IDesktopSiteBridgeStatics;

            interface IEndpointConnectionEventArgs;

            interface IEndpointRequestedStateChangedEventArgs;

            interface IPopupWindowSiteBridge;

            interface IProcessStarter;

            interface IProcessStarterFactory;

            interface IProcessStarterStatics;

            interface IReadOnlyDesktopSiteBridge;

            interface IReadOnlyDesktopSiteBridgeStatics;

            interface ISystemVisualSiteBridge;

            interface ISystemVisualSiteBridgeStatics;

            runtimeclass ChildContentLink;

            runtimeclass ContentAppWindowBridge;

            runtimeclass ContentCoordinateConverter;

            runtimeclass ContentDeferral;

            runtimeclass ContentEnvironmentSettingChangedEventArgs;

            runtimeclass ContentEnvironmentStateChangedEventArgs;

            runtimeclass ContentExternalBackdropLink;

            runtimeclass ContentExternalOutputLink;

            runtimeclass ContentIsland;

            runtimeclass ContentIslandAutomationProviderRequestedEventArgs;

            runtimeclass ContentIslandEnvironment;

            runtimeclass ContentIslandStateChangedEventArgs;

            runtimeclass ContentSite;

            runtimeclass ContentSiteAutomationProviderRequestedEventArgs;

            runtimeclass ContentSiteEnvironment;

            runtimeclass ContentSiteEnvironmentView;

            runtimeclass ContentSiteRequestedStateChangedEventArgs;

            runtimeclass ContentSiteView;

            runtimeclass CoreWindowSiteBridge;

            runtimeclass CoreWindowTopLevelWindowBridge;

            runtimeclass DesktopChildSiteBridge;

            runtimeclass DesktopSiteBridge;

            runtimeclass EndpointConnectionEventArgs;

            runtimeclass EndpointRequestedStateChangedEventArgs;

            runtimeclass PopupWindowSiteBridge;

            runtimeclass ProcessStarter;

            runtimeclass ReadOnlyDesktopSiteBridge;

            runtimeclass SystemVisualSiteBridge;
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace UI
    {
        namespace Content
        {
            declare
            {
                interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Content.ChildContentLink*>;

                interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Content.ChildContentLink*>;

                interface Windows.Foundation.EventHandler<Microsoft.UI.Content.ContentIsland*>;

                interface Windows.Foundation.IReference<Microsoft.UI.Content.ContentLayoutDirection>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Content.ContentIsland*, Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Content.ContentIsland*, Microsoft.UI.Content.ContentIslandStateChangedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Content.ContentIslandEnvironment*, IInspectable*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Content.ContentIslandEnvironment*, Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Content.ContentIslandEnvironment*, Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Content.ContentSite*, Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Content.IContentSiteBridgeAutomation*, Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate*, Microsoft.UI.Content.EndpointConnectionEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate*, Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs*>;
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace UI
    {
        namespace Content
        {
            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [experimental]
            enum AutomationOptions
            {
                Disabled            = 0,
                Framework           = 1,
                NavigatableFragment = 2
            };

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            enum ContentCoordinateRoundingMode
            {
                Auto    = 0,
                Floor   = 1,
                Round   = 2,
                Ceiling = 3
            };

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [experimental]
            [flags]
            enum ContentDisplayOrientations
            {
                None             = 0x0,
                Landscape        = 0x1,
                Portrait         = 0x2,
                LandscapeFlipped = 0x4,
                PortraitFlipped  = 0x8
            };

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            enum ContentLayoutDirection
            {
                LeftToRight = 0,
                RightToLeft = 1
            };

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            enum ContentSizePolicy
            {
                None                        = 0,
                ResizeContentToParentWindow = 1,
                ResizeParentWindowToContent = 2
            };

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.ChildContentLink)]
            [experimental]
            [uuid(DBD49E4A-B298-58F3-BBBF-BF7ED321E464)]
            interface IChildContentLink : IInspectable
            {
                [propget] HRESULT SiteView([out] [retval] Microsoft.UI.Content.ContentSiteView** value);
                HRESULT Connect([in] Microsoft.UI.Content.ContentIsland* content);
                HRESULT SetIsInputPassThrough([in] boolean value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.ChildContentLink)]
            [experimental]
            [uuid(1037743D-B36D-5596-8302-04BA7A9FF38D)]
            interface IChildContentLinkStatics : IInspectable
            {
                [default_overload] [overload("Create")] HRESULT Create([in] Microsoft.UI.Content.ContentIsland* parent, [in] Microsoft.UI.Composition.ContainerVisual* placementVisual, [out] [retval] Microsoft.UI.Content.ChildContentLink** result);
                [overload("Create")] HRESULT CreateWithSystemContentIsland([in] Microsoft.UI.Content.ContentIsland* parent, [in] Windows.UI.Composition.ContainerVisual* placementVisual, [out] [retval] Microsoft.UI.Content.ChildContentLink** result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.ContentAppWindowBridge)]
            [experimental]
            [uuid(A17D6B39-5B52-5974-88E5-60CDE3967B5E)]
            interface IContentAppWindowBridge : IInspectable
            {
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.ContentAppWindowBridge)]
            [experimental]
            [uuid(84B9CD9C-E822-5F12-B21D-31A409B804F5)]
            interface IContentAppWindowBridgeStatics : IInspectable
            {
                HRESULT GetForWindowId([in] Microsoft.UI.WindowId childWindowId, [out] [retval] Microsoft.UI.Content.ContentAppWindowBridge** result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.ContentCoordinateConverter)]
            [uuid(10A11230-5EB4-5840-A346-570F4A49040F)]
            interface IContentCoordinateConverter : IInspectable
            {
                [default_overload] [overload("ConvertLocalToScreen")] HRESULT ConvertLocalToScreenWithPoint([in] Windows.Foundation.Point localPoint, [out] [retval] Windows.Graphics.PointInt32* result);
                [overload("ConvertLocalToScreen")] HRESULT ConvertLocalToScreenWithPoints([in] UINT32 __localPointsSize, [in] [size_is(__localPointsSize)] Windows.Foundation.Point* localPoints, [out] UINT32* __resultSize, [out] [retval] [size_is(, *__resultSize)] Windows.Graphics.PointInt32** result);
                [overload("ConvertLocalToScreen")] HRESULT ConvertLocalToScreenWithPointsAndRoundingMode([in] UINT32 __localPointsSize, [in] [size_is(__localPointsSize)] Windows.Foundation.Point* localPoints, [in] Microsoft.UI.Content.ContentCoordinateRoundingMode roundingMode, [out] UINT32* __resultSize, [out] [retval] [size_is(, *__resultSize)] Windows.Graphics.PointInt32** result);
                [overload("ConvertLocalToScreen")] HRESULT ConvertLocalToScreenWithRect([in] Windows.Foundation.Rect localRect, [out] [retval] Windows.Graphics.RectInt32* result);
                [default_overload] [overload("ConvertScreenToLocal")] HRESULT ConvertScreenToLocalWithPoint([in] Windows.Graphics.PointInt32 screenPoint, [out] [retval] Windows.Foundation.Point* result);
                [overload("ConvertScreenToLocal")] HRESULT ConvertScreenToLocalWithPoints([in] UINT32 __screenPointsSize, [in] [size_is(__screenPointsSize)] Windows.Graphics.PointInt32* screenPoints, [out] UINT32* __resultSize, [out] [retval] [size_is(, *__resultSize)] Windows.Foundation.Point** result);
                [overload("ConvertScreenToLocal")] HRESULT ConvertScreenToLocalWithRect([in] Windows.Graphics.RectInt32 screenRect, [out] [retval] Windows.Foundation.Rect* result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.ContentCoordinateConverter)]
            [uuid(A4B216EE-0E26-56BD-9209-A75CF9D80F27)]
            interface IContentCoordinateConverterFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.ContentCoordinateConverter)]
            [uuid(F56374CE-B6DF-5B42-A58F-4E3BB039E3A9)]
            interface IContentCoordinateConverterStatics : IInspectable
            {
                HRESULT CreateForWindowId([in] Microsoft.UI.WindowId windowId, [out] [retval] Microsoft.UI.Content.ContentCoordinateConverter** result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.ContentDeferral)]
            [uuid(470529F5-CD93-599B-968E-F8A689BC3A07)]
            interface IContentDeferral : IInspectable
            {
                HRESULT Complete();
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs)]
            [uuid(76478051-FC80-5EEC-A3F3-62606ABE06B7)]
            interface IContentEnvironmentSettingChangedEventArgs : IInspectable
            {
                [propget] HRESULT SettingName([out] [retval] HSTRING* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs)]
            [uuid(8970FA4F-10BA-5F67-970B-8C72BC009B67)]
            interface IContentEnvironmentStateChangedEventArgs : IInspectable
            {
                [propget] HRESULT DidAppWindowIdChange([out] [retval] boolean* value);
                [propget] HRESULT DidDisplayIdChange([out] [retval] boolean* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs)]
            [experimental]
            [uuid(CEC0497D-76C7-544B-BF6E-816C9B16C99F)]
            interface IContentEnvironmentStateChangedEventArgs2 : IInspectable
            {
                [propget] HRESULT DidDisplayScaleChange([out] [retval] boolean* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.ContentExternalBackdropLink)]
            [experimental]
            [uuid(1054BF83-B35B-5FDE-8DD7-AC3BB3E6CE27)]
            interface IContentExternalBackdropLink : IInspectable
            {
                [propget] HRESULT DispatcherQueue([out] [retval] Microsoft.UI.Dispatching.DispatcherQueue** value);
                [propget] HRESULT ExternalBackdropBorderMode([out] [retval] Microsoft.UI.Composition.CompositionBorderMode* value);
                [propput] HRESULT ExternalBackdropBorderMode([in] Microsoft.UI.Composition.CompositionBorderMode value);
                [propget] HRESULT PlacementVisual([out] [retval] Microsoft.UI.Composition.Visual** value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.ContentExternalBackdropLink)]
            [experimental]
            [uuid(46CAC6FB-BB51-510A-958D-E0EB4160F678)]
            interface IContentExternalBackdropLinkStatics : IInspectable
            {
                HRESULT Create([in] Microsoft.UI.Composition.Compositor* compositor, [out] [retval] Microsoft.UI.Content.ContentExternalBackdropLink** result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.ContentExternalOutputLink)]
            [experimental]
            [uuid(3DAC8EC8-011F-5AD2-8DB7-B73C4452F755)]
            interface IContentExternalOutputLink : IInspectable
            {
                [propget] HRESULT BackgroundColor([out] [retval] Windows.UI.Color* value);
                [propput] HRESULT BackgroundColor([in] Windows.UI.Color value);
                [propget] HRESULT DispatcherQueue([out] [retval] Microsoft.UI.Dispatching.DispatcherQueue** value);
                [propget] HRESULT ExternalOutputBorderMode([out] [retval] Microsoft.UI.Composition.CompositionBorderMode* value);
                [propput] HRESULT ExternalOutputBorderMode([in] Microsoft.UI.Composition.CompositionBorderMode value);
                [propget] HRESULT IsAboveContent([out] [retval] boolean* value);
                [propput] HRESULT IsAboveContent([in] boolean value);
                [propget] HRESULT PlacementVisual([out] [retval] Microsoft.UI.Composition.Visual** value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.ContentExternalOutputLink)]
            [experimental]
            [uuid(B758F401-833E-587D-B0CD-A3934EBA3721)]
            interface IContentExternalOutputLinkStatics : IInspectable
            {
                HRESULT Create([in] Microsoft.UI.Composition.Compositor* compositor, [out] [retval] Microsoft.UI.Content.ContentExternalOutputLink** result);
                HRESULT IsSupported([out] [retval] boolean* result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.ContentIsland)]
            [uuid(5B2504BA-361C-50AA-BD6E-4122C6D93889)]
            interface IContentIsland : IInspectable
            {
                [propget] HRESULT ActualSize([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propget] HRESULT AppData([out] [retval] IInspectable** value);
                [propput] HRESULT AppData([in] IInspectable* value);
                [propget] HRESULT CoordinateConverter([out] [retval] Microsoft.UI.Content.ContentCoordinateConverter** value);
                [propget] HRESULT CustomProperties([out] [retval] Windows.Foundation.Collections.IPropertySet** value);
                [propget] HRESULT DispatcherQueue([out] [retval] Microsoft.UI.Dispatching.DispatcherQueue** value);
                [propget] HRESULT Environment([out] [retval] Microsoft.UI.Content.ContentIslandEnvironment** value);
                [propget] HRESULT Id([out] [retval] UINT64* value);
                [propget] HRESULT IsConnected([out] [retval] boolean* value);
                [propget] HRESULT IsHitTestVisibleWhenTransparent([out] [retval] boolean* value);
                [propput] HRESULT IsHitTestVisibleWhenTransparent([in] boolean value);
                [propget] HRESULT IsIslandEnabled([out] [retval] boolean* value);
                [propput] HRESULT IsIslandEnabled([in] boolean value);
                [propget] HRESULT IsIslandVisible([out] [retval] boolean* value);
                [propput] HRESULT IsIslandVisible([in] boolean value);
                [propget] HRESULT IsSiteEnabled([out] [retval] boolean* value);
                [propget] HRESULT IsSiteVisible([out] [retval] boolean* value);
                [propget] HRESULT LayoutDirection([out] [retval] Microsoft.UI.Content.ContentLayoutDirection* value);
                [propget] HRESULT RasterizationScale([out] [retval] FLOAT* value);
                HRESULT GetAutomationHostProvider([out] [retval] IInspectable** result);
                HRESULT GetStateChangeDeferral([out] [retval] Microsoft.UI.Content.ContentDeferral** result);
                HRESULT RequestSize([in] Windows.Foundation.Numerics.Vector2 size);
                [eventadd] HRESULT AutomationProviderRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Content.ContentIsland*, Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT AutomationProviderRequested([in] EventRegistrationToken token);
                [eventadd] HRESULT StateChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Content.ContentIsland*, Microsoft.UI.Content.ContentIslandStateChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT StateChanged([in] EventRegistrationToken token);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.ContentIsland)]
            [experimental]
            [uuid(7891E8A0-4F21-555F-BE28-0120D5EDC031)]
            interface IContentIsland2 : IInspectable
            {
                [propget] HRESULT Compositor([out] [retval] Microsoft.UI.Composition.Compositor** value);
                [propget] HRESULT Root([out] [retval] Microsoft.UI.Composition.Visual** value);
                [propput] HRESULT Root([in] Microsoft.UI.Composition.Visual* value);
                [eventadd] HRESULT Connected([in] Windows.Foundation.EventHandler<Microsoft.UI.Content.ContentIsland*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT Connected([in] EventRegistrationToken token);
                [eventadd] HRESULT Disconnected([in] Windows.Foundation.EventHandler<Microsoft.UI.Content.ContentIsland*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT Disconnected([in] EventRegistrationToken token);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.ContentIsland)]
            [experimental]
            [uuid(260F6BBC-58F7-5EFC-BC8D-0DEBF83C10E6)]
            interface IContentIsland3 : IInspectable
            {
                [propget] HRESULT Children([out] [retval] Windows.Foundation.Collections.IIterable<Microsoft.UI.Content.ChildContentLink*>** value);
                [propget] HRESULT TransformMatrix([out] [retval] Windows.Foundation.Numerics.Matrix3x2* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.ContentIsland)]
            [experimental]
            [uuid(A56B1A98-3018-5679-9457-1EFF8F12D556)]
            interface IContentIslandAutomation : IInspectable
            {
                [propget] HRESULT FragmentRootAutomationProvider([out] [retval] IInspectable** value);
                [propget] HRESULT NextSiblingAutomationProvider([out] [retval] IInspectable** value);
                [propget] HRESULT ParentAutomationProvider([out] [retval] IInspectable** value);
                [propget] HRESULT PreviousSiblingAutomationProvider([out] [retval] IInspectable** value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.ContentIslandAutomationProviderRequestedEventArgs)]
            [uuid(9FE24BED-2B9C-5137-887F-403C94841824)]
            interface IContentIslandAutomationProviderRequestedEventArgs : IInspectable
            {
                [propget] HRESULT AutomationProvider([out] [retval] IInspectable** value);
                [propput] HRESULT AutomationProvider([in] IInspectable* value);
                [propget] HRESULT Handled([out] [retval] boolean* value);
                [propput] HRESULT Handled([in] boolean value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [experimental]
            [uuid(7C5D833B-70B8-5448-8472-9406E58E0DB4)]
            interface IContentIslandEndpointConnectionPrivate : IInspectable
            {
                [propget] HRESULT ConnectionInfo([out] [retval] HSTRING* value);
                [propget] HRESULT IsRemoteEndpointConnected([out] [retval] boolean* value);
                HRESULT ConnectRemoteEndpoint([in] HSTRING siteConnectionInfo);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.ContentIslandEnvironment)]
            [uuid(C334236D-DA88-566D-811D-74AEF2EBA978)]
            interface IContentIslandEnvironment : IInspectable
            {
                [propget] HRESULT AppWindowId([out] [retval] Microsoft.UI.WindowId* value);
                [propget] HRESULT DisplayId([out] [retval] Microsoft.UI.DisplayId* value);
                [eventadd] HRESULT SettingChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Content.ContentIslandEnvironment*, Microsoft.UI.Content.ContentEnvironmentSettingChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT SettingChanged([in] EventRegistrationToken token);
                [eventadd] HRESULT StateChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Content.ContentIslandEnvironment*, Microsoft.UI.Content.ContentEnvironmentStateChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT StateChanged([in] EventRegistrationToken token);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.ContentIslandEnvironment)]
            [experimental]
            [uuid(0DE23993-CFFB-5677-9442-31ADB1F555BF)]
            interface IContentIslandEnvironment2 : IInspectable
            {
                [propget] HRESULT CurrentOrientation([out] [retval] Microsoft.UI.Content.ContentDisplayOrientations* value);
                [propget] HRESULT DisplayScale([out] [retval] FLOAT* value);
                [propget] HRESULT NativeOrientation([out] [retval] Microsoft.UI.Content.ContentDisplayOrientations* value);
                [eventadd] HRESULT ThemeChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Content.ContentIslandEnvironment*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT ThemeChanged([in] EventRegistrationToken token);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.ContentIslandEnvironment)]
            [experimental]
            [uuid(75C7FF43-5870-59CD-8C85-50B761A223A9)]
            interface IContentIslandEnvironment3 : IInspectable
            {
                [propget] HRESULT AutomationOption([out] [retval] Microsoft.UI.Content.AutomationOptions* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.ContentIslandEnvironment)]
            [uuid(47A782D6-B177-5C1E-BF87-90437DD809D0)]
            interface IContentIslandEnvironmentFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.ContentIsland)]
            [uuid(82383F52-E81A-5EC9-A954-BAC8A931BA7D)]
            interface IContentIslandFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.ContentIslandStateChangedEventArgs)]
            [uuid(C828EEB2-0C62-5B40-9D48-77C06083C278)]
            interface IContentIslandStateChangedEventArgs : IInspectable
            {
                [propget] HRESULT DidActualSizeChange([out] [retval] boolean* value);
                [propget] HRESULT DidSiteEnabledChange([out] [retval] boolean* value);
                [propget] HRESULT DidSiteVisibleChange([out] [retval] boolean* value);
                [propget] HRESULT DidLayoutDirectionChange([out] [retval] boolean* value);
                [propget] HRESULT DidRasterizationScaleChange([out] [retval] boolean* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.ContentIsland)]
            [uuid(7B9EB7CC-8C43-5E0A-AB23-AB48628FD223)]
            interface IContentIslandStatics : IInspectable
            {
                HRESULT Create([in] Microsoft.UI.Composition.Visual* Root, [out] [retval] Microsoft.UI.Content.ContentIsland** result);
                HRESULT FindAllForCompositor([in] Microsoft.UI.Composition.Compositor* compositor, [out] UINT32* __resultSize, [out] [retval] [size_is(, *__resultSize)] Microsoft.UI.Content.ContentIsland*** result);
                HRESULT FindAllForCurrentThread([out] UINT32* __resultSize, [out] [retval] [size_is(, *__resultSize)] Microsoft.UI.Content.ContentIsland*** result);
                HRESULT GetByVisual([in] Microsoft.UI.Composition.Visual* child, [out] [retval] Microsoft.UI.Content.ContentIsland** result);
                HRESULT GetFromId([in] UINT64 id, [out] [retval] Microsoft.UI.Content.ContentIsland** result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.ContentIsland)]
            [experimental]
            [uuid(2A109CD2-3665-5868-8903-29A355FD4229)]
            interface IContentIslandStatics2 : IInspectable
            {
                [overload("Create")] HRESULT CreateSystemContentIsland([in] Microsoft.UI.Composition.Compositor* compositor, [in] Windows.UI.Composition.Visual* root, [out] [retval] Microsoft.UI.Content.ContentIsland** result);
                [overload("FindAllForCompositor")] HRESULT FindAllForSystemCompositor([in] Windows.UI.Composition.Compositor* compositor, [out] UINT32* __resultSize, [out] [retval] [size_is(, *__resultSize)] Microsoft.UI.Content.ContentIsland*** result);
                [overload("GetByVisual")] HRESULT GetBySystemVisual([in] Windows.UI.Composition.Visual* child, [out] [retval] Microsoft.UI.Content.ContentIsland** result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [experimental]
            [uuid(C7FF2539-32D6-592A-8178-687F6362C580)]
            interface IContentLink : IInspectable
            {
                [propget] HRESULT Parent([out] [retval] Microsoft.UI.Content.ContentIsland** value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [experimental]
            [uuid(2251C304-449D-4456-B008-FE7163403D7E)]
            interface IContentNodeOwner : IInspectable
            {
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.ContentSite)]
            [uuid(996C60C4-02B2-5EEF-93B0-DD6B1EC2FD7B)]
            interface IContentSite : IInspectable
            {
                [propget] HRESULT ActualSize([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT ActualSize([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT ClientSize([out] [retval] Windows.Graphics.SizeInt32* value);
                [propput] HRESULT ClientSize([in] Windows.Graphics.SizeInt32 value);
                [propget] HRESULT CoordinateConverter([out] [retval] Microsoft.UI.Content.ContentCoordinateConverter** value);
                [propget] HRESULT DispatcherQueue([out] [retval] Microsoft.UI.Dispatching.DispatcherQueue** value);
                [propget] HRESULT Environment([out] [retval] Microsoft.UI.Content.ContentSiteEnvironment** value);
                [propget] HRESULT IsConnected([out] [retval] boolean* value);
                [propget] HRESULT IsSiteEnabled([out] [retval] boolean* value);
                [propput] HRESULT IsSiteEnabled([in] boolean value);
                [propget] HRESULT IsSiteVisible([out] [retval] boolean* value);
                [propput] HRESULT IsSiteVisible([in] boolean value);
                [propget] HRESULT LayoutDirection([out] [retval] Microsoft.UI.Content.ContentLayoutDirection* value);
                [propput] HRESULT LayoutDirection([in] Microsoft.UI.Content.ContentLayoutDirection value);
                [propget] HRESULT OverrideScale([out] [retval] FLOAT* value);
                [propput] HRESULT OverrideScale([in] FLOAT value);
                [propget] HRESULT ParentScale([out] [retval] FLOAT* value);
                [propput] HRESULT ParentScale([in] FLOAT value);
                [propget] HRESULT RasterizationScale([out] [retval] FLOAT* value);
                [propget] HRESULT RequestedSize([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propget] HRESULT ShouldApplyRasterizationScale([out] [retval] boolean* value);
                [propput] HRESULT ShouldApplyRasterizationScale([in] boolean value);
                [propget] HRESULT View([out] [retval] Microsoft.UI.Content.ContentSiteView** value);
                HRESULT GetIslandStateChangeDeferral([out] [retval] Microsoft.UI.Content.ContentDeferral** result);
                [eventadd] HRESULT RequestedStateChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Content.ContentSite*, Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT RequestedStateChanged([in] EventRegistrationToken token);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.ContentSite)]
            [experimental]
            [uuid(ADE88C54-1DA3-5520-9449-0AC7A3C01DD1)]
            interface IContentSite2 : IInspectable
            {
                [propget] HRESULT Compositor([out] [retval] Microsoft.UI.Composition.Compositor** value);
                [propget] HRESULT SiteVisual([out] [retval] Microsoft.UI.Composition.Visual** value);
                HRESULT SetContentNodeParent([in] Microsoft.UI.Content.IContentNodeOwner* value);
                HRESULT TryGetAutomationProvider([out] IInspectable** provider, [out] [retval] boolean* result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.ContentSite)]
            [experimental]
            [uuid(B628A15C-986D-5E67-8767-33DDEC3A62EA)]
            interface IContentSite3 : IInspectable
            {
                [propget] HRESULT TransformMatrix([out] [retval] Windows.Foundation.Numerics.Matrix3x2* value);
                [propput] HRESULT TransformMatrix([in] Windows.Foundation.Numerics.Matrix3x2 value);
                HRESULT SetIsInputPassThrough([in] boolean value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs)]
            [experimental]
            [uuid(73A093B9-55D4-5598-B70E-6250B732F821)]
            interface IContentSiteAutomationProviderRequestedEventArgs : IInspectable
            {
                [propget] HRESULT AutomationProvider([out] [retval] IInspectable** value);
                [propput] HRESULT AutomationProvider([in] IInspectable* value);
                [propget] HRESULT Handled([out] [retval] boolean* value);
                [propput] HRESULT Handled([in] boolean value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [uuid(FAAAB99E-A42B-549C-92DF-3B6D6E1E368B)]
            interface IContentSiteBridge : IInspectable
                requires
                    Windows.Foundation.IClosable
            {
                [propget] HRESULT DispatcherQueue([out] [retval] Microsoft.UI.Dispatching.DispatcherQueue** value);
                [propget] HRESULT LayoutDirectionOverride([out] [retval] Windows.Foundation.IReference<Microsoft.UI.Content.ContentLayoutDirection>** value);
                [propput] HRESULT LayoutDirectionOverride([in] Windows.Foundation.IReference<Microsoft.UI.Content.ContentLayoutDirection>* value);
                [propget] HRESULT OverrideScale([out] [retval] FLOAT* value);
                [propput] HRESULT OverrideScale([in] FLOAT value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [experimental]
            [uuid(4367E9DC-85EF-538D-9CAE-377500781C35)]
            interface IContentSiteBridge2 : IInspectable
                requires
                    Windows.Foundation.IClosable
            {
                [propget] HRESULT ActualSize([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT ActualSize([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT DispatcherQueue([out] [retval] Microsoft.UI.Dispatching.DispatcherQueue** value);
                [propget] HRESULT TransformMatrix([out] [retval] Windows.Foundation.Numerics.Matrix3x2* value);
                [propput] HRESULT TransformMatrix([in] Windows.Foundation.Numerics.Matrix3x2 value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [experimental]
            [uuid(ECDCCFB7-6490-5A79-9379-14F348A98D68)]
            interface IContentSiteBridgeAutomation : IInspectable
            {
                [propget] HRESULT AutomationOption([out] [retval] Microsoft.UI.Content.AutomationOptions* value);
                [propput] HRESULT AutomationOption([in] Microsoft.UI.Content.AutomationOptions value);
                [propget] HRESULT AutomationProvider([out] [retval] IInspectable** value);
                [eventadd] HRESULT FragmentRootAutomationProviderRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Content.IContentSiteBridgeAutomation*, Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT FragmentRootAutomationProviderRequested([in] EventRegistrationToken token);
                [eventadd] HRESULT NextSiblingAutomationProviderRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Content.IContentSiteBridgeAutomation*, Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT NextSiblingAutomationProviderRequested([in] EventRegistrationToken token);
                [eventadd] HRESULT ParentAutomationProviderRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Content.IContentSiteBridgeAutomation*, Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT ParentAutomationProviderRequested([in] EventRegistrationToken token);
                [eventadd] HRESULT PreviousSiblingAutomationProviderRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Content.IContentSiteBridgeAutomation*, Microsoft.UI.Content.ContentSiteAutomationProviderRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT PreviousSiblingAutomationProviderRequested([in] EventRegistrationToken token);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [experimental]
            [uuid(84D1A059-692B-577D-A791-6AD4FAFBEB1F)]
            interface IContentSiteBridgeEndpointConnectionPrivate : IInspectable
            {
                [propget] HRESULT ConnectionInfo([out] [retval] HSTRING* value);
                [propget] HRESULT IsRemoteEndpointConnected([out] [retval] boolean* value);
                HRESULT AcceptRemoteEndpoint([in] HSTRING islandConnectionInfo);
                [eventadd] HRESULT RemoteEndpointConnecting([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate*, Microsoft.UI.Content.EndpointConnectionEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT RemoteEndpointConnecting([in] EventRegistrationToken token);
                [eventadd] HRESULT RemoteEndpointDisconnected([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate*, Microsoft.UI.Content.EndpointConnectionEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT RemoteEndpointDisconnected([in] EventRegistrationToken token);
                [eventadd] HRESULT RemoteEndpointRequestedStateChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate*, Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT RemoteEndpointRequestedStateChanged([in] EventRegistrationToken token);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.ContentSiteEnvironment)]
            [uuid(685D085D-BE53-55D1-AEC4-BA2273D5468B)]
            interface IContentSiteEnvironment : IInspectable
            {
                [propget] HRESULT AppWindowId([out] [retval] Microsoft.UI.WindowId* value);
                [propput] HRESULT AppWindowId([in] Microsoft.UI.WindowId value);
                [propget] HRESULT DisplayId([out] [retval] Microsoft.UI.DisplayId* value);
                [propput] HRESULT DisplayId([in] Microsoft.UI.DisplayId value);
                [propget] HRESULT View([out] [retval] Microsoft.UI.Content.ContentSiteEnvironmentView** value);
                HRESULT NotifySettingChanged([in] HSTRING setting);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.ContentSiteEnvironment)]
            [experimental]
            [uuid(727FDE51-6960-54E4-A957-D83E17171B75)]
            interface IContentSiteEnvironment2 : IInspectable
            {
                [propget] HRESULT CurrentOrientation([out] [retval] Microsoft.UI.Content.ContentDisplayOrientations* value);
                [propput] HRESULT CurrentOrientation([in] Microsoft.UI.Content.ContentDisplayOrientations value);
                [propget] HRESULT DisplayScale([out] [retval] FLOAT* value);
                [propput] HRESULT DisplayScale([in] FLOAT value);
                [propget] HRESULT NativeOrientation([out] [retval] Microsoft.UI.Content.ContentDisplayOrientations* value);
                [propput] HRESULT NativeOrientation([in] Microsoft.UI.Content.ContentDisplayOrientations value);
                HRESULT NotifyThemeChanged();
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.ContentSiteEnvironment)]
            [uuid(0BEFA998-CB15-5F16-A4A5-C0ED1674E186)]
            interface IContentSiteEnvironmentFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.ContentSiteEnvironmentView)]
            [uuid(5B6FE420-0BB3-54DD-8589-786CF02E38F1)]
            interface IContentSiteEnvironmentView : IInspectable
            {
                [propget] HRESULT AppWindowId([out] [retval] Microsoft.UI.WindowId* value);
                [propget] HRESULT DisplayId([out] [retval] Microsoft.UI.DisplayId* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.ContentSiteEnvironmentView)]
            [uuid(C901EDF2-F184-5A64-8D58-8CF8EFA8B678)]
            interface IContentSiteEnvironmentViewFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.ContentSite)]
            [uuid(72FB98D5-B28A-57F1-91FA-24C014A342C1)]
            interface IContentSiteFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.ContentSiteRequestedStateChangedEventArgs)]
            [uuid(1B55FD1D-7292-562B-B4A1-D4DE7972E684)]
            interface IContentSiteRequestedStateChangedEventArgs : IInspectable
            {
                [propget] HRESULT DidRequestedSizeChange([out] [retval] boolean* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.ContentSiteView)]
            [uuid(2D5D8DD5-358E-5B05-993B-B2666D1786B3)]
            interface IContentSiteView : IInspectable
            {
                [propget] HRESULT ActualSize([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propget] HRESULT ClientSize([out] [retval] Windows.Graphics.SizeInt32* value);
                [propget] HRESULT CoordinateConverter([out] [retval] Microsoft.UI.Content.ContentCoordinateConverter** value);
                [propget] HRESULT DispatcherQueue([out] [retval] Microsoft.UI.Dispatching.DispatcherQueue** value);
                [propget] HRESULT EnvironmentView([out] [retval] Microsoft.UI.Content.ContentSiteEnvironmentView** value);
                [propget] HRESULT IsConnected([out] [retval] boolean* value);
                [propget] HRESULT IsSiteEnabled([out] [retval] boolean* value);
                [propget] HRESULT IsSiteVisible([out] [retval] boolean* value);
                [propget] HRESULT LayoutDirection([out] [retval] Microsoft.UI.Content.ContentLayoutDirection* value);
                [propget] HRESULT OverrideScale([out] [retval] FLOAT* value);
                [propget] HRESULT ParentScale([out] [retval] FLOAT* value);
                [propget] HRESULT RasterizationScale([out] [retval] FLOAT* value);
                [propget] HRESULT RequestedSize([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propget] HRESULT ShouldApplyRasterizationScale([out] [retval] boolean* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.ContentSiteView)]
            [experimental]
            [uuid(F1D3AA18-2B4E-58C8-A523-D36BC4E25961)]
            interface IContentSiteView2 : IInspectable
            {
                [propget] HRESULT TransformMatrix([out] [retval] Windows.Foundation.Numerics.Matrix3x2* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.ContentSiteView)]
            [uuid(9EFD72F0-63EF-5B6A-A50C-5685BD8100F1)]
            interface IContentSiteViewFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.CoreWindowSiteBridge)]
            [experimental]
            [uuid(03E1C02E-E5E3-526A-8492-939E26EE09D5)]
            interface ICoreWindowSiteBridge : IInspectable
            {
                HRESULT Connect([in] Microsoft.UI.Content.ContentIsland* content);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.CoreWindowSiteBridge)]
            [experimental]
            [uuid(FBC56793-11F2-5754-AD70-30E82C07FA35)]
            interface ICoreWindowSiteBridgeStatics : IInspectable
            {
                HRESULT Create([in] Microsoft.UI.Composition.Compositor* compositor, [in] Windows.UI.Core.CoreWindow* coreWindow, [out] [retval] Microsoft.UI.Content.CoreWindowSiteBridge** result);
                HRESULT IsSupported([out] [retval] boolean* result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.DesktopChildSiteBridge)]
            [uuid(B2F2FF7B-1825-51B0-B80B-7599889C569F)]
            interface IDesktopChildSiteBridge : IInspectable
            {
                [propget] HRESULT ResizePolicy([out] [retval] Microsoft.UI.Content.ContentSizePolicy* value);
                [propput] HRESULT ResizePolicy([in] Microsoft.UI.Content.ContentSizePolicy value);
                [propget] HRESULT SiteView([out] [retval] Microsoft.UI.Content.ContentSiteView** value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.DesktopChildSiteBridge)]
            [uuid(AB6B82DE-6A47-5DE3-A860-613C8DB679AB)]
            interface IDesktopChildSiteBridgeStatics : IInspectable
            {
                HRESULT Create([in] Microsoft.UI.Composition.Compositor* compositor, [in] Microsoft.UI.WindowId parentWindowId, [out] [retval] Microsoft.UI.Content.DesktopChildSiteBridge** result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.DesktopSiteBridge)]
            [uuid(F0AE8750-905C-50A2-8A12-4545C6245BB4)]
            interface IDesktopSiteBridge : IInspectable
            {
                [propget] HRESULT IsEnabled([out] [retval] boolean* value);
                [propget] HRESULT IsVisible([out] [retval] boolean* value);
                [propget] HRESULT WindowId([out] [retval] Microsoft.UI.WindowId* value);
                HRESULT Connect([in] Microsoft.UI.Content.ContentIsland* content);
                HRESULT Disable();
                HRESULT Enable();
                HRESULT Hide();
                HRESULT MoveAndResize([in] Windows.Graphics.RectInt32 rect);
                HRESULT MoveInZOrderAtBottom();
                HRESULT MoveInZOrderAtTop();
                HRESULT MoveInZOrderBelow([in] Microsoft.UI.WindowId windowId);
                HRESULT Show();
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.DesktopSiteBridge)]
            [experimental]
            [uuid(1190C041-82FB-5F3B-9111-CA8F19A72B75)]
            interface IDesktopSiteBridge2 : IInspectable
            {
                HRESULT TryCreatePopupSiteBridge([out] [retval] Microsoft.UI.Content.PopupWindowSiteBridge** result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.DesktopSiteBridge)]
            [uuid(D94EE1FF-3AF1-54D0-9311-652B29C57C5B)]
            interface IDesktopSiteBridgeFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [exclusiveto(Microsoft.UI.Content.DesktopSiteBridge)]
            [uuid(E0B38DAF-9CD4-50C5-83EE-C76E3CF34EBA)]
            interface IDesktopSiteBridgeStatics : IInspectable
            {
                HRESULT IsSupported([out] [retval] boolean* result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.EndpointConnectionEventArgs)]
            [experimental]
            [uuid(94BF2A15-EDF0-5EB2-9CEC-9B93AC531413)]
            interface IEndpointConnectionEventArgs : IInspectable
            {
                [propget] HRESULT ConnectionInfo([out] [retval] HSTRING* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.EndpointRequestedStateChangedEventArgs)]
            [experimental]
            [uuid(513F95C6-4193-5388-90F8-8CF340815B1E)]
            interface IEndpointRequestedStateChangedEventArgs : IInspectable
            {
                [propget] HRESULT DidRequestedSizeChange([out] [retval] boolean* value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.PopupWindowSiteBridge)]
            [experimental]
            [uuid(044597A2-E6EE-5DAB-ABE0-1923EBE34C2E)]
            interface IPopupWindowSiteBridge : IInspectable
            {
                [propget] HRESULT Anchored([out] [retval] boolean* value);
                [propput] HRESULT Anchored([in] boolean value);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.ProcessStarter)]
            [experimental]
            [uuid(122D01BC-7753-5592-B62D-F659A30A2AC0)]
            interface IProcessStarter : IInspectable
            {
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.ProcessStarter)]
            [experimental]
            [uuid(A01418D1-4E8B-54B4-A5F2-520187A58B80)]
            interface IProcessStarterFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.ProcessStarter)]
            [experimental]
            [uuid(76F9D59D-8456-540F-BC74-0DCADF4581B8)]
            interface IProcessStarterStatics : IInspectable
            {
                HRESULT StartProcess([in] HSTRING executablePath, [in] HSTRING connectionInfo, [out] UINT32* processId);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.ReadOnlyDesktopSiteBridge)]
            [experimental]
            [uuid(99A52365-9672-52B0-AF02-BA50F2CF17E0)]
            interface IReadOnlyDesktopSiteBridge : IInspectable
            {
                [propget] HRESULT SiteView([out] [retval] Microsoft.UI.Content.ContentSiteView** value);
                [propget] HRESULT WindowId([out] [retval] Microsoft.UI.WindowId* value);
                HRESULT Connect([in] Microsoft.UI.Content.ContentIsland* content);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.ReadOnlyDesktopSiteBridge)]
            [experimental]
            [uuid(D3041551-3190-5321-8144-19E002246BE6)]
            interface IReadOnlyDesktopSiteBridgeStatics : IInspectable
            {
                HRESULT Create([in] Microsoft.UI.Composition.Compositor* compositor, [in] Microsoft.UI.WindowId windowId, [out] [retval] Microsoft.UI.Content.ReadOnlyDesktopSiteBridge** result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.SystemVisualSiteBridge)]
            [experimental]
            [uuid(6EEDD227-3802-5772-B24E-1D8B736CFFA7)]
            interface ISystemVisualSiteBridge : IInspectable
            {
                [propget] HRESULT Site([out] [retval] Microsoft.UI.Content.ContentSite** value);
                HRESULT Connect([in] Microsoft.UI.Content.ContentIsland* content);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [exclusiveto(Microsoft.UI.Content.SystemVisualSiteBridge)]
            [experimental]
            [uuid(F37DDB4C-8B68-5EB6-BDEE-31256973F42D)]
            interface ISystemVisualSiteBridgeStatics : IInspectable
            {
                HRESULT Create([in] Microsoft.UI.Composition.Compositor* localCompositor, [in] Windows.UI.Composition.ContainerVisual* hostVisual, [in] Microsoft.UI.WindowId parentForInputWindowId, [out] [retval] Microsoft.UI.Content.SystemVisualSiteBridge** result);
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [experimental]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Content.IChildContentLinkStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [threading(both)]
            runtimeclass ChildContentLink
            {
                [default] [experimental] interface Microsoft.UI.Content.IChildContentLink;
                interface Windows.Foundation.IClosable;
                interface Microsoft.UI.IClosableNotifier;
                [experimental] interface Microsoft.UI.Content.IContentLink;
                [experimental] interface Microsoft.UI.Content.IContentSiteBridge2;
                [experimental] interface Microsoft.UI.Content.IContentSiteBridgeAutomation;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [experimental]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Content.IContentAppWindowBridgeStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [threading(both)]
            runtimeclass ContentAppWindowBridge
            {
                [default] [experimental] interface Microsoft.UI.Content.IContentAppWindowBridge;
                [experimental] interface Microsoft.UI.Content.IContentNodeOwner;
            }

            [composable(Microsoft.UI.Content.IContentCoordinateConverterFactory, public, Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Content.IContentCoordinateConverterStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [threading(both)]
            runtimeclass ContentCoordinateConverter
            {
                [default] interface Microsoft.UI.Content.IContentCoordinateConverter;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [marshaling_behavior(agile)]
            runtimeclass ContentDeferral
            {
                [default] interface Microsoft.UI.Content.IContentDeferral;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [marshaling_behavior(agile)]
            runtimeclass ContentEnvironmentSettingChangedEventArgs
            {
                [default] interface Microsoft.UI.Content.IContentEnvironmentSettingChangedEventArgs;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [marshaling_behavior(agile)]
            runtimeclass ContentEnvironmentStateChangedEventArgs
            {
                [default] interface Microsoft.UI.Content.IContentEnvironmentStateChangedEventArgs;
                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)] [experimental] interface Microsoft.UI.Content.IContentEnvironmentStateChangedEventArgs2;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [experimental]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Content.IContentExternalBackdropLinkStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [threading(both)]
            runtimeclass ContentExternalBackdropLink
            {
                [default] [experimental] interface Microsoft.UI.Content.IContentExternalBackdropLink;
                interface Windows.Foundation.IClosable;
                interface Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [experimental]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Content.IContentExternalOutputLinkStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [threading(both)]
            runtimeclass ContentExternalOutputLink
            {
                [default] [experimental] interface Microsoft.UI.Content.IContentExternalOutputLink;
                interface Windows.Foundation.IClosable;
            }

            [composable(Microsoft.UI.Content.IContentIslandFactory, public, Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Content.IContentIslandStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [static(Microsoft.UI.Content.IContentIslandStatics2, Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [threading(both)]
            runtimeclass ContentIsland
            {
                [default] interface Microsoft.UI.Content.IContentIsland;
                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)] [experimental] interface Microsoft.UI.Content.IContentIsland2;
                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)] [experimental] interface Microsoft.UI.Content.IContentIsland3;
                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)] [experimental] interface Microsoft.UI.Content.IContentIslandAutomation;
                interface Windows.Foundation.IClosable;
                interface Microsoft.UI.IClosableNotifier;
                interface Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop;
                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)] [experimental] interface Microsoft.UI.Content.IContentIslandEndpointConnectionPrivate;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [marshaling_behavior(agile)]
            runtimeclass ContentIslandAutomationProviderRequestedEventArgs
            {
                [default] interface Microsoft.UI.Content.IContentIslandAutomationProviderRequestedEventArgs;
            }

            [composable(Microsoft.UI.Content.IContentIslandEnvironmentFactory, public, Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ContentIslandEnvironment
            {
                [default] interface Microsoft.UI.Content.IContentIslandEnvironment;
                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)] [experimental] interface Microsoft.UI.Content.IContentIslandEnvironment2;
                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)] [experimental] interface Microsoft.UI.Content.IContentIslandEnvironment3;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [marshaling_behavior(agile)]
            runtimeclass ContentIslandStateChangedEventArgs
            {
                [default] interface Microsoft.UI.Content.IContentIslandStateChangedEventArgs;
            }

            [composable(Microsoft.UI.Content.IContentSiteFactory, public, Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ContentSite
            {
                [default] interface Microsoft.UI.Content.IContentSite;
                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)] [experimental] interface Microsoft.UI.Content.IContentSite2;
                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)] [experimental] interface Microsoft.UI.Content.IContentSite3;
                interface Windows.Foundation.IClosable;
                interface Microsoft.UI.IClosableNotifier;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [experimental]
            [marshaling_behavior(agile)]
            runtimeclass ContentSiteAutomationProviderRequestedEventArgs
            {
                [default] [experimental] interface Microsoft.UI.Content.IContentSiteAutomationProviderRequestedEventArgs;
            }

            [composable(Microsoft.UI.Content.IContentSiteEnvironmentFactory, public, Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ContentSiteEnvironment
            {
                [default] interface Microsoft.UI.Content.IContentSiteEnvironment;
                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)] [experimental] interface Microsoft.UI.Content.IContentSiteEnvironment2;
            }

            [composable(Microsoft.UI.Content.IContentSiteEnvironmentViewFactory, public, Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ContentSiteEnvironmentView
            {
                [default] interface Microsoft.UI.Content.IContentSiteEnvironmentView;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [marshaling_behavior(agile)]
            runtimeclass ContentSiteRequestedStateChangedEventArgs
            {
                [default] interface Microsoft.UI.Content.IContentSiteRequestedStateChangedEventArgs;
            }

            [composable(Microsoft.UI.Content.IContentSiteViewFactory, public, Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ContentSiteView
            {
                [default] interface Microsoft.UI.Content.IContentSiteView;
                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)] [experimental] interface Microsoft.UI.Content.IContentSiteView2;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [experimental]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Content.ICoreWindowSiteBridgeStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [threading(both)]
            runtimeclass CoreWindowSiteBridge
            {
                [default] [experimental] interface Microsoft.UI.Content.ICoreWindowSiteBridge;
                interface Microsoft.UI.Content.IContentSiteBridge;
                interface Windows.Foundation.IClosable;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [experimental]
            [marshaling_behavior(agile)]
            runtimeclass CoreWindowTopLevelWindowBridge
            {
                [default] [experimental] interface Microsoft.UI.Content.IContentNodeOwner;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Content.IDesktopChildSiteBridgeStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [threading(both)]
            runtimeclass DesktopChildSiteBridge : Microsoft.UI.Content.DesktopSiteBridge
            {
                [default] interface Microsoft.UI.Content.IDesktopChildSiteBridge;
                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)] [experimental] interface Microsoft.UI.Content.IContentSiteBridgeEndpointConnectionPrivate;
            }

            [composable(Microsoft.UI.Content.IDesktopSiteBridgeFactory, public, Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Content.IDesktopSiteBridgeStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
            [threading(both)]
            runtimeclass DesktopSiteBridge
            {
                [default] interface Microsoft.UI.Content.IDesktopSiteBridge;
                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)] [experimental] interface Microsoft.UI.Content.IDesktopSiteBridge2;
                interface Microsoft.UI.IClosableNotifier;
                interface Microsoft.UI.Content.IContentSiteBridge;
                interface Windows.Foundation.IClosable;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [experimental]
            [marshaling_behavior(agile)]
            runtimeclass EndpointConnectionEventArgs
            {
                [default] [experimental] interface Microsoft.UI.Content.IEndpointConnectionEventArgs;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [experimental]
            [marshaling_behavior(agile)]
            runtimeclass EndpointRequestedStateChangedEventArgs
            {
                [default] [experimental] interface Microsoft.UI.Content.IEndpointRequestedStateChangedEventArgs;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [experimental]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass PopupWindowSiteBridge : Microsoft.UI.Content.DesktopSiteBridge
            {
                [default] [experimental] interface Microsoft.UI.Content.IPopupWindowSiteBridge;
            }

            [composable(Microsoft.UI.Content.IProcessStarterFactory, public, Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [experimental]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Content.IProcessStarterStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [threading(both)]
            runtimeclass ProcessStarter
            {
                [default] [experimental] interface Microsoft.UI.Content.IProcessStarter;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [experimental]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Content.IReadOnlyDesktopSiteBridgeStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [threading(both)]
            runtimeclass ReadOnlyDesktopSiteBridge
            {
                [default] [experimental] interface Microsoft.UI.Content.IReadOnlyDesktopSiteBridge;
                interface Microsoft.UI.IClosableNotifier;
                interface Microsoft.UI.Content.IContentSiteBridge;
                interface Windows.Foundation.IClosable;
            }

            [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [experimental]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Content.ISystemVisualSiteBridgeStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.6)]
            [threading(both)]
            runtimeclass SystemVisualSiteBridge
            {
                [default] [experimental] interface Microsoft.UI.Content.ISystemVisualSiteBridge;
                interface Microsoft.UI.IClosableNotifier;
                interface Microsoft.UI.Content.IContentSiteBridge;
                interface Windows.Foundation.IClosable;
            }
        }
    }
}
