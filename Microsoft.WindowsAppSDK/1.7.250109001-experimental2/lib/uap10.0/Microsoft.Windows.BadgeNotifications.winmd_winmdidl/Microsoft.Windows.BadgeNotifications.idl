//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";

// Forward Declare
namespace Windows
{
    namespace Foundation
    {
        typedef struct DateTime DateTime;
    }
}
namespace Microsoft
{
    namespace Windows
    {
        namespace BadgeNotifications
        {
            apicontract BadgeNotificationsContract;

            typedef enum BadgeNotificationGlyph BadgeNotificationGlyph;

            interface IBadgeNotificationManager;

            interface IBadgeNotificationManagerStatics;

            runtimeclass BadgeNotificationManager;
        }
    }
}

// Generic instantiations

// Type definition
namespace Microsoft
{
    namespace Windows
    {
        namespace BadgeNotifications
        {
            [contractversion(1.0)]
            apicontract BadgeNotificationsContract
            {
            }

            [contract(Microsoft.Windows.BadgeNotifications.BadgeNotificationsContract, 1.0)]
            [experimental]
            enum BadgeNotificationGlyph
            {
                None        = 0,
                Activity    = 1,
                Alarm       = 2,
                Alert       = 3,
                Attention   = 4,
                Available   = 5,
                Away        = 6,
                Busy        = 7,
                Error       = 8,
                NewMessage  = 9,
                Paused      = 10,
                Playing     = 11,
                Unavailable = 12
            };

            [contract(Microsoft.Windows.BadgeNotifications.BadgeNotificationsContract, 1.0)]
            [exclusiveto(Microsoft.Windows.BadgeNotifications.BadgeNotificationManager)]
            [experimental]
            [uuid(548DB050-890A-58CD-A344-FF4674B6D07B)]
            interface IBadgeNotificationManager : IInspectable
            {
                [overload("SetBadgeAsCount")] HRESULT SetBadgeAsCount([in] UINT32 notificationCount);
                [overload("SetBadgeAsCount")] HRESULT SetBadgeAsCount2([in] UINT32 notificationCount, [in] Windows.Foundation.DateTime expiration);
                [overload("SetBadgeAsGlyph")] HRESULT SetBadgeAsGlyph([in] Microsoft.Windows.BadgeNotifications.BadgeNotificationGlyph glyphValue);
                [overload("SetBadgeAsGlyph")] HRESULT SetBadgeAsGlyph2([in] Microsoft.Windows.BadgeNotifications.BadgeNotificationGlyph glyphValue, [in] Windows.Foundation.DateTime expiration);
                HRESULT ClearBadge();
            }

            [contract(Microsoft.Windows.BadgeNotifications.BadgeNotificationsContract, 1.0)]
            [exclusiveto(Microsoft.Windows.BadgeNotifications.BadgeNotificationManager)]
            [experimental]
            [uuid(A6E71616-7C9F-5D22-AD1C-F4AB874087B5)]
            interface IBadgeNotificationManagerStatics : IInspectable
            {
                [propget] HRESULT Current([out] [retval] Microsoft.Windows.BadgeNotifications.BadgeNotificationManager** value);
            }

            [contract(Microsoft.Windows.BadgeNotifications.BadgeNotificationsContract, 1.0)]
            [experimental]
            [marshaling_behavior(agile)]
            [static(Microsoft.Windows.BadgeNotifications.IBadgeNotificationManagerStatics, Microsoft.Windows.BadgeNotifications.BadgeNotificationsContract, 1.0)]
            [threading(both)]
            runtimeclass BadgeNotificationManager
            {
                [default] [experimental] interface Microsoft.Windows.BadgeNotifications.IBadgeNotificationManager;
            }
        }
    }
}
