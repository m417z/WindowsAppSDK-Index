//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Microsoft.Foundation.idl";
import "Microsoft.UI.Content.idl";
import "Microsoft.UI.Input.idl";
import "Windows.ApplicationModel.DataTransfer.idl";
import "Windows.Graphics.Imaging.idl";

// Forward Declare
namespace Microsoft
{
    namespace Foundation
    {
        apicontract WindowsAppSDKContract;
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Content
        {
            runtimeclass ContentIsland;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Input
        {
            runtimeclass PointerPoint;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Input
        {
            namespace DragDrop
            {
                typedef enum DragDropModifiers DragDropModifiers;

                typedef enum DragUIContentMode DragUIContentMode;

                interface IDragDropManager;

                interface IDragDropManagerStatics;

                interface IDragInfo;

                interface IDragOperation;

                interface IDragUIOverride;

                interface IDropOperationTarget;

                interface IDropOperationTargetRequestedEventArgs;

                runtimeclass DragDropManager;

                runtimeclass DragInfo;

                runtimeclass DragOperation;

                runtimeclass DragUIOverride;

                runtimeclass DropOperationTargetRequestedEventArgs;
            }
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace UI
    {
        namespace Input
        {
            namespace DragDrop
            {
                declare
                {
                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.DragDrop.DragDropManager*, Microsoft.UI.Input.DragDrop.DropOperationTargetRequestedEventArgs*>;
                }
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace UI
    {
        namespace Input
        {
            namespace DragDrop
            {
                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
                [experimental]
                [flags]
                enum DragDropModifiers
                {
                    None         = 0x0,
                    Shift        = 0x1,
                    Control      = 0x2,
                    Alt          = 0x4,
                    LeftButton   = 0x8,
                    MiddleButton = 0x10,
                    RightButton  = 0x20
                };

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
                [experimental]
                enum DragUIContentMode
                {
                    Auto     = 0,
                    Deferred = 1
                };

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
                [exclusiveto(Microsoft.UI.Input.DragDrop.DragDropManager)]
                [experimental]
                [uuid(4FEA9EFC-B073-5FBE-9C95-A4113EF6393F)]
                interface IDragDropManager : IInspectable
                {
                    [propget] HRESULT AreConcurrentOperationsEnabled([out] [retval] boolean* value);
                    [propput] HRESULT AreConcurrentOperationsEnabled([in] boolean value);
                    [eventadd] HRESULT TargetRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Input.DragDrop.DragDropManager*, Microsoft.UI.Input.DragDrop.DropOperationTargetRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TargetRequested([in] EventRegistrationToken token);
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
                [exclusiveto(Microsoft.UI.Input.DragDrop.DragDropManager)]
                [experimental]
                [uuid(5587C863-57D7-5D0F-8EA9-E5DCF06A0F83)]
                interface IDragDropManagerStatics : IInspectable
                {
                    HRESULT GetForIsland([in] Microsoft.UI.Content.ContentIsland* content, [out] [retval] Microsoft.UI.Input.DragDrop.DragDropManager** result);
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
                [exclusiveto(Microsoft.UI.Input.DragDrop.DragInfo)]
                [experimental]
                [uuid(7507D891-62A8-5A79-A880-AC7353D001EC)]
                interface IDragInfo : IInspectable
                {
                    [propget] HRESULT AllowedOperations([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackageOperation* value);
                    [propget] HRESULT Data([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackageView** value);
                    [propget] HRESULT Modifiers([out] [retval] Microsoft.UI.Input.DragDrop.DragDropModifiers* value);
                    [propget] HRESULT Position([out] [retval] Windows.Foundation.Point* value);
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
                [exclusiveto(Microsoft.UI.Input.DragDrop.DragOperation)]
                [experimental]
                [uuid(EF122288-7984-53D3-8488-133DCD3DE793)]
                interface IDragOperation : IInspectable
                {
                    [propget] HRESULT AllowedOperations([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackageOperation* value);
                    [propput] HRESULT AllowedOperations([in] Windows.ApplicationModel.DataTransfer.DataPackageOperation value);
                    [propget] HRESULT Data([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackage** value);
                    [propget] HRESULT DragUIContentMode([out] [retval] Microsoft.UI.Input.DragDrop.DragUIContentMode* value);
                    [propput] HRESULT DragUIContentMode([in] Microsoft.UI.Input.DragDrop.DragUIContentMode value);
                    [overload("SetDragUIContentFromSoftwareBitmap")] HRESULT SetDragUIContentFromSoftwareBitmap([in] Windows.Graphics.Imaging.SoftwareBitmap* bitmap);
                    [overload("SetDragUIContentFromSoftwareBitmap")] HRESULT SetDragUIContentFromSoftwareBitmap2([in] Windows.Graphics.Imaging.SoftwareBitmap* bitmap, [in] Windows.Foundation.Point anchorPoint);
                    HRESULT StartAsync([in] Microsoft.UI.Input.DragDrop.DragDropManager* initialTarget, [in] Microsoft.UI.Input.PointerPoint* initialPointerPoint, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.DataTransfer.DataPackageOperation>** operation);
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
                [exclusiveto(Microsoft.UI.Input.DragDrop.DragUIOverride)]
                [experimental]
                [uuid(8432FBAC-A17F-5A95-8F56-FB432280B54D)]
                interface IDragUIOverride : IInspectable
                {
                    [propget] HRESULT Caption([out] [retval] HSTRING* value);
                    [propput] HRESULT Caption([in] HSTRING value);
                    [propget] HRESULT IsCaptionVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsCaptionVisible([in] boolean value);
                    [propget] HRESULT IsContentVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsContentVisible([in] boolean value);
                    [propget] HRESULT IsGlyphVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsGlyphVisible([in] boolean value);
                    HRESULT Clear();
                    [overload("SetContentFromSoftwareBitmap")] HRESULT SetContentFromSoftwareBitmap([in] Windows.Graphics.Imaging.SoftwareBitmap* bitmap);
                    [overload("SetContentFromSoftwareBitmap")] HRESULT SetContentFromSoftwareBitmap2([in] Windows.Graphics.Imaging.SoftwareBitmap* bitmap, [in] Windows.Foundation.Point anchorPoint);
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
                [experimental]
                [uuid(1C2707D9-0065-53C7-BBFB-50850378CAF3)]
                interface IDropOperationTarget : IInspectable
                {
                    HRESULT DropAsync([in] Microsoft.UI.Input.DragDrop.DragInfo* dragInfo, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.DataTransfer.DataPackageOperation>** operation);
                    HRESULT EnterAsync([in] Microsoft.UI.Input.DragDrop.DragInfo* dragInfo, [in] Microsoft.UI.Input.DragDrop.DragUIOverride* dragUIOverride, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.DataTransfer.DataPackageOperation>** operation);
                    HRESULT LeaveAsync([in] Microsoft.UI.Input.DragDrop.DragInfo* dragInfo, [out] [retval] Windows.Foundation.IAsyncAction** operation);
                    HRESULT OverAsync([in] Microsoft.UI.Input.DragDrop.DragInfo* dragInfo, [in] Microsoft.UI.Input.DragDrop.DragUIOverride* dragUIOverride, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.DataTransfer.DataPackageOperation>** operation);
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
                [exclusiveto(Microsoft.UI.Input.DragDrop.DropOperationTargetRequestedEventArgs)]
                [experimental]
                [uuid(F61C5B62-720E-59FF-AD0B-E77FC5B8A4A3)]
                interface IDropOperationTargetRequestedEventArgs : IInspectable
                {
                    HRESULT SetTarget([in] Microsoft.UI.Input.DragDrop.IDropOperationTarget* target);
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
                [experimental]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Input.DragDrop.IDragDropManagerStatics, Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
                [threading(both)]
                runtimeclass DragDropManager
                {
                    [default] [experimental] interface Microsoft.UI.Input.DragDrop.IDragDropManager;
                    interface Windows.Foundation.IClosable;
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
                [experimental]
                [marshaling_behavior(agile)]
                runtimeclass DragInfo
                {
                    [default] [experimental] interface Microsoft.UI.Input.DragDrop.IDragInfo;
                }

                [activatable(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
                [experimental]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass DragOperation
                {
                    [default] [experimental] interface Microsoft.UI.Input.DragDrop.IDragOperation;
                    interface Windows.Foundation.IClosable;
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
                [experimental]
                [marshaling_behavior(agile)]
                runtimeclass DragUIOverride
                {
                    [default] [experimental] interface Microsoft.UI.Input.DragDrop.IDragUIOverride;
                }

                [contract(Microsoft.Foundation.WindowsAppSDKContract, 1.4)]
                [experimental]
                [marshaling_behavior(agile)]
                runtimeclass DropOperationTargetRequestedEventArgs
                {
                    [default] [experimental] interface Microsoft.UI.Input.DragDrop.IDropOperationTargetRequestedEventArgs;
                }
            }
        }
    }
}
