//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Windows.Security.Cryptography.Certificates.idl";
import "Windows.Storage.Streams.idl";
import "Windows.UI.idl";
import "Windows.UI.Core.idl";

// Forward Declare
namespace Microsoft
{
    namespace Web
    {
        namespace WebView2
        {
            namespace Core
            {
                typedef enum CoreWebView2BoundsMode CoreWebView2BoundsMode;

                typedef enum CoreWebView2BrowserProcessExitKind CoreWebView2BrowserProcessExitKind;

                typedef enum CoreWebView2CapturePreviewImageFormat CoreWebView2CapturePreviewImageFormat;

                typedef enum CoreWebView2ClientCertificateKind CoreWebView2ClientCertificateKind;

                typedef enum CoreWebView2CookieSameSiteKind CoreWebView2CookieSameSiteKind;

                typedef enum CoreWebView2DownloadInterruptReason CoreWebView2DownloadInterruptReason;

                typedef enum CoreWebView2DownloadState CoreWebView2DownloadState;

                typedef enum CoreWebView2HostResourceAccessKind CoreWebView2HostResourceAccessKind;

                typedef enum CoreWebView2KeyEventKind CoreWebView2KeyEventKind;

                typedef enum CoreWebView2MouseEventKind CoreWebView2MouseEventKind;

                typedef enum CoreWebView2MouseEventVirtualKeys CoreWebView2MouseEventVirtualKeys;

                typedef enum CoreWebView2MoveFocusReason CoreWebView2MoveFocusReason;

                typedef enum CoreWebView2PermissionKind CoreWebView2PermissionKind;

                typedef enum CoreWebView2PermissionState CoreWebView2PermissionState;

                typedef enum CoreWebView2PointerEventKind CoreWebView2PointerEventKind;

                typedef enum CoreWebView2PrintOrientation CoreWebView2PrintOrientation;

                typedef enum CoreWebView2ProcessFailedKind CoreWebView2ProcessFailedKind;

                typedef enum CoreWebView2ProcessFailedReason CoreWebView2ProcessFailedReason;

                typedef enum CoreWebView2ScriptDialogKind CoreWebView2ScriptDialogKind;

                typedef enum CoreWebView2WebErrorStatus CoreWebView2WebErrorStatus;

                typedef enum CoreWebView2WebResourceContext CoreWebView2WebResourceContext;

                typedef struct CoreWebView2PhysicalKeyStatus CoreWebView2PhysicalKeyStatus;

                interface CoreWebView2ClientCertificate_Manual;

                interface ICoreWebView2;

                interface ICoreWebView2AcceleratorKeyPressedEventArgs;

                interface ICoreWebView2BrowserProcessExitedEventArgs;

                interface ICoreWebView2ClientCertificate;

                interface ICoreWebView2ClientCertificateRequestedEventArgs;

                interface ICoreWebView2CompositionController;

                interface ICoreWebView2CompositionController2;

                interface ICoreWebView2CompositionControllerStatics;

                interface ICoreWebView2ContentLoadingEventArgs;

                interface ICoreWebView2Controller;

                interface ICoreWebView2Controller2;

                interface ICoreWebView2Controller3;

                interface ICoreWebView2ControllerFactory;

                interface ICoreWebView2ControllerWindowReference;

                interface ICoreWebView2ControllerWindowReferenceStatics;

                interface ICoreWebView2Cookie;

                interface ICoreWebView2CookieManager;

                interface ICoreWebView2DOMContentLoadedEventArgs;

                interface ICoreWebView2DevToolsProtocolEventReceivedEventArgs;

                interface ICoreWebView2DevToolsProtocolEventReceiver;

                interface ICoreWebView2DispatchAdapter;

                interface ICoreWebView2DownloadOperation;

                interface ICoreWebView2DownloadStartingEventArgs;

                interface ICoreWebView2Environment;

                interface ICoreWebView2Environment2;

                interface ICoreWebView2Environment3;

                interface ICoreWebView2Environment4;

                interface ICoreWebView2Environment5;

                interface ICoreWebView2Environment6;

                interface ICoreWebView2EnvironmentOptions;

                interface ICoreWebView2EnvironmentOptions_Manual;

                interface ICoreWebView2EnvironmentStatics;

                interface ICoreWebView2Frame;

                interface ICoreWebView2FrameCreatedEventArgs;

                interface ICoreWebView2FrameInfo;

                interface ICoreWebView2HttpHeadersCollectionIterator;

                interface ICoreWebView2HttpRequestHeaders;

                interface ICoreWebView2HttpResponseHeaders;

                interface ICoreWebView2MoveFocusRequestedEventArgs;

                interface ICoreWebView2NavigationCompletedEventArgs;

                interface ICoreWebView2NavigationStartingEventArgs;

                interface ICoreWebView2NewWindowRequestedEventArgs;

                interface ICoreWebView2NewWindowRequestedEventArgs2;

                interface ICoreWebView2PermissionRequestedEventArgs;

                interface ICoreWebView2PointerInfo;

                interface ICoreWebView2PrintSettings;

                interface ICoreWebView2ProcessFailedEventArgs;

                interface ICoreWebView2ProcessFailedEventArgs2;

                interface ICoreWebView2ScriptDialogOpeningEventArgs;

                interface ICoreWebView2Settings;

                interface ICoreWebView2Settings2;

                interface ICoreWebView2Settings3;

                interface ICoreWebView2Settings4;

                interface ICoreWebView2Settings5;

                interface ICoreWebView2Settings6;

                interface ICoreWebView2Settings_Manual;

                interface ICoreWebView2SourceChangedEventArgs;

                interface ICoreWebView2WebMessageReceivedEventArgs;

                interface ICoreWebView2WebResourceRequest;

                interface ICoreWebView2WebResourceRequestedEventArgs;

                interface ICoreWebView2WebResourceResponse;

                interface ICoreWebView2WebResourceResponseReceivedEventArgs;

                interface ICoreWebView2WebResourceResponseView;

                interface ICoreWebView2WindowFeatures;

                interface ICoreWebView2_2;

                interface ICoreWebView2_3;

                interface ICoreWebView2_4;

                interface ICoreWebView2_5;

                interface ICoreWebView2_6;

                interface ICoreWebView2_7;

                runtimeclass CoreWebView2;

                runtimeclass CoreWebView2AcceleratorKeyPressedEventArgs;

                runtimeclass CoreWebView2BrowserProcessExitedEventArgs;

                runtimeclass CoreWebView2ClientCertificate;

                runtimeclass CoreWebView2ClientCertificateRequestedEventArgs;

                runtimeclass CoreWebView2CompositionController;

                runtimeclass CoreWebView2ContentLoadingEventArgs;

                runtimeclass CoreWebView2Controller;

                runtimeclass CoreWebView2ControllerWindowReference;

                runtimeclass CoreWebView2Cookie;

                runtimeclass CoreWebView2CookieManager;

                runtimeclass CoreWebView2DOMContentLoadedEventArgs;

                runtimeclass CoreWebView2DevToolsProtocolEventReceivedEventArgs;

                runtimeclass CoreWebView2DevToolsProtocolEventReceiver;

                runtimeclass CoreWebView2DownloadOperation;

                runtimeclass CoreWebView2DownloadStartingEventArgs;

                runtimeclass CoreWebView2Environment;

                runtimeclass CoreWebView2EnvironmentOptions;

                runtimeclass CoreWebView2Frame;

                runtimeclass CoreWebView2FrameCreatedEventArgs;

                runtimeclass CoreWebView2FrameInfo;

                runtimeclass CoreWebView2HttpHeadersCollectionIterator;

                runtimeclass CoreWebView2HttpRequestHeaders;

                runtimeclass CoreWebView2HttpResponseHeaders;

                runtimeclass CoreWebView2MoveFocusRequestedEventArgs;

                runtimeclass CoreWebView2NavigationCompletedEventArgs;

                runtimeclass CoreWebView2NavigationStartingEventArgs;

                runtimeclass CoreWebView2NewWindowRequestedEventArgs;

                runtimeclass CoreWebView2PermissionRequestedEventArgs;

                runtimeclass CoreWebView2PointerInfo;

                runtimeclass CoreWebView2PrintSettings;

                runtimeclass CoreWebView2ProcessFailedEventArgs;

                runtimeclass CoreWebView2ScriptDialogOpeningEventArgs;

                runtimeclass CoreWebView2Settings;

                runtimeclass CoreWebView2SourceChangedEventArgs;

                runtimeclass CoreWebView2WebMessageReceivedEventArgs;

                runtimeclass CoreWebView2WebResourceRequest;

                runtimeclass CoreWebView2WebResourceRequestedEventArgs;

                runtimeclass CoreWebView2WebResourceResponse;

                runtimeclass CoreWebView2WebResourceResponseReceivedEventArgs;

                runtimeclass CoreWebView2WebResourceResponseView;

                runtimeclass CoreWebView2WindowFeatures;
            }
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace Web
    {
        namespace WebView2
        {
            namespace Core
            {
                declare
                {
                    interface Windows.Foundation.Collections.IIterable<Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate*>;

                    interface Windows.Foundation.Collections.IIterable<Microsoft.Web.WebView2.Core.CoreWebView2FrameInfo*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.Web.WebView2.Core.CoreWebView2FrameInfo*>;

                    interface Windows.Foundation.Collections.IVectorView<Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate*>;

                    interface Windows.Foundation.Collections.IVectorView<Microsoft.Web.WebView2.Core.CoreWebView2FrameInfo*>;

                    interface Windows.Foundation.IAsyncOperation<Microsoft.Web.WebView2.Core.CoreWebView2CompositionController*>;

                    interface Windows.Foundation.IAsyncOperation<Microsoft.Web.WebView2.Core.CoreWebView2Controller*>;

                    interface Windows.Foundation.IAsyncOperation<Microsoft.Web.WebView2.Core.CoreWebView2Environment*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2CompositionController*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Controller*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Controller*, Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Controller*, Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Environment*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Environment*, Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Frame*, IInspectable*>;
                }
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace Web
    {
        namespace WebView2
        {
            namespace Core
            {
                [version(0x00000001)]
                enum CoreWebView2BoundsMode
                {
                    UseRawPixels          = 0,
                    UseRasterizationScale = 1
                };

                [version(0x00000001)]
                enum CoreWebView2BrowserProcessExitKind
                {
                    Normal = 0,
                    Failed = 1
                };

                [version(0x00000001)]
                enum CoreWebView2CapturePreviewImageFormat
                {
                    Png  = 0,
                    Jpeg = 1
                };

                [version(0x00000001)]
                enum CoreWebView2ClientCertificateKind
                {
                    SmartCard = 0,
                    Pin       = 1,
                    Other     = 2
                };

                [version(0x00000001)]
                enum CoreWebView2CookieSameSiteKind
                {
                    None   = 0,
                    Lax    = 1,
                    Strict = 2
                };

                [version(0x00000001)]
                enum CoreWebView2DownloadInterruptReason
                {
                    None                        = 0,
                    FileFailed                  = 1,
                    FileAccessDenied            = 2,
                    FileNoSpace                 = 3,
                    FileNameTooLong             = 4,
                    FileTooLarge                = 5,
                    FileMalicious               = 6,
                    FileTransientError          = 7,
                    FileBlockedByPolicy         = 8,
                    FileSecurityCheckFailed     = 9,
                    FileTooShort                = 10,
                    FileHashMismatch            = 11,
                    NetworkFailed               = 12,
                    NetworkTimeout              = 13,
                    NetworkDisconnected         = 14,
                    NetworkServerDown           = 15,
                    NetworkInvalidRequest       = 16,
                    ServerFailed                = 17,
                    ServerNoRange               = 18,
                    ServerBadContent            = 19,
                    ServerUnauthorized          = 20,
                    ServerCertificateProblem    = 21,
                    ServerForbidden             = 22,
                    ServerUnexpectedResponse    = 23,
                    ServerContentLengthMismatch = 24,
                    ServerCrossOriginRedirect   = 25,
                    UserCanceled                = 26,
                    UserShutdown                = 27,
                    UserPaused                  = 28,
                    DownloadProcessCrashed      = 29
                };

                [version(0x00000001)]
                enum CoreWebView2DownloadState
                {
                    InProgress  = 0,
                    Interrupted = 1,
                    Completed   = 2
                };

                [version(0x00000001)]
                enum CoreWebView2HostResourceAccessKind
                {
                    Deny     = 0,
                    Allow    = 1,
                    DenyCors = 2
                };

                [version(0x00000001)]
                enum CoreWebView2KeyEventKind
                {
                    KeyDown       = 0,
                    KeyUp         = 1,
                    SystemKeyDown = 2,
                    SystemKeyUp   = 3
                };

                [version(0x00000001)]
                enum CoreWebView2MouseEventKind
                {
                    HorizontalWheel         = 526,
                    LeftButtonDoubleClick   = 515,
                    LeftButtonDown          = 513,
                    LeftButtonUp            = 514,
                    Leave                   = 675,
                    MiddleButtonDoubleClick = 521,
                    MiddleButtonDown        = 519,
                    MiddleButtonUp          = 520,
                    Move                    = 512,
                    RightButtonDoubleClick  = 518,
                    RightButtonDown         = 516,
                    RightButtonUp           = 517,
                    Wheel                   = 522,
                    XButtonDoubleClick      = 525,
                    XButtonDown             = 523,
                    XButtonUp               = 524
                };

                [flags]
                [version(0x00000001)]
                enum CoreWebView2MouseEventVirtualKeys
                {
                    None         = 0x0,
                    LeftButton   = 0x1,
                    RightButton  = 0x2,
                    Shift        = 0x4,
                    Control      = 0x8,
                    MiddleButton = 0x10,
                    XButton1     = 0x20,
                    XButton2     = 0x40
                };

                [version(0x00000001)]
                enum CoreWebView2MoveFocusReason
                {
                    Programmatic = 0,
                    Next         = 1,
                    Previous     = 2
                };

                [version(0x00000001)]
                enum CoreWebView2PermissionKind
                {
                    UnknownPermission = 0,
                    Microphone        = 1,
                    Camera            = 2,
                    Geolocation       = 3,
                    Notifications     = 4,
                    OtherSensors      = 5,
                    ClipboardRead     = 6
                };

                [version(0x00000001)]
                enum CoreWebView2PermissionState
                {
                    Default = 0,
                    Allow   = 1,
                    Deny    = 2
                };

                [version(0x00000001)]
                enum CoreWebView2PointerEventKind
                {
                    Activate = 587,
                    Down     = 582,
                    Enter    = 585,
                    Leave    = 586,
                    Up       = 583,
                    Update   = 581
                };

                [version(0x00000001)]
                enum CoreWebView2PrintOrientation
                {
                    Portrait  = 0,
                    Landscape = 1
                };

                [version(0x00000001)]
                enum CoreWebView2ProcessFailedKind
                {
                    BrowserProcessExited       = 0,
                    RenderProcessExited        = 1,
                    RenderProcessUnresponsive  = 2,
                    FrameRenderProcessExited   = 3,
                    UtilityProcessExited       = 4,
                    SandboxHelperProcessExited = 5,
                    GpuProcessExited           = 6,
                    PpapiPluginProcessExited   = 7,
                    PpapiBrokerProcessExited   = 8,
                    UnknownProcessExited       = 9
                };

                [version(0x00000001)]
                enum CoreWebView2ProcessFailedReason
                {
                    Unexpected   = 0,
                    Unresponsive = 1,
                    Terminated   = 2,
                    Crashed      = 3,
                    LaunchFailed = 4,
                    OutOfMemory  = 5
                };

                [version(0x00000001)]
                enum CoreWebView2ScriptDialogKind
                {
                    Alert        = 0,
                    Confirm      = 1,
                    Prompt       = 2,
                    Beforeunload = 3
                };

                [version(0x00000001)]
                enum CoreWebView2WebErrorStatus
                {
                    Unknown                          = 0,
                    CertificateCommonNameIsIncorrect = 1,
                    CertificateExpired               = 2,
                    ClientCertificateContainsErrors  = 3,
                    CertificateRevoked               = 4,
                    CertificateIsInvalid             = 5,
                    ServerUnreachable                = 6,
                    Timeout                          = 7,
                    ErrorHttpInvalidServerResponse   = 8,
                    ConnectionAborted                = 9,
                    ConnectionReset                  = 10,
                    Disconnected                     = 11,
                    CannotConnect                    = 12,
                    HostNameNotResolved              = 13,
                    OperationCanceled                = 14,
                    RedirectFailed                   = 15,
                    UnexpectedError                  = 16
                };

                [version(0x00000001)]
                enum CoreWebView2WebResourceContext
                {
                    All                = 0,
                    Document           = 1,
                    Stylesheet         = 2,
                    Image              = 3,
                    Media              = 4,
                    Font               = 5,
                    Script             = 6,
                    XmlHttpRequest     = 7,
                    Fetch              = 8,
                    TextTrack          = 9,
                    EventSource        = 10,
                    Websocket          = 11,
                    Manifest           = 12,
                    SignedExchange     = 13,
                    Ping               = 14,
                    CspViolationReport = 15,
                    Other              = 16
                };

                [version(0x00000001)]
                struct CoreWebView2PhysicalKeyStatus
                {
                    UINT32 RepeatCount;
                    UINT32 ScanCode;
                    INT32 IsExtendedKey;
                    INT32 IsMenuKeyDown;
                    INT32 WasKeyDown;
                    INT32 IsKeyReleased;
                };

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate)]
                [uuid(FAEFEFC2-20C3-5D86-8A74-F6D87D6FF8FA)]
                [version(0x00000001)]
                interface CoreWebView2ClientCertificate_Manual : IInspectable
                {
                    HRESULT ToCertificate([out] [retval] Windows.Security.Cryptography.Certificates.Certificate** result);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2)]
                [uuid(3A3F559A-E5E9-5338-BB67-4EB0504A4F14)]
                [version(0x00000001)]
                interface ICoreWebView2 : IInspectable
                {
                    [propget] HRESULT Settings([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2Settings** value);
                    [propget] HRESULT Source([out] [retval] HSTRING* value);
                    [propget] HRESULT BrowserProcessId([out] [retval] UINT32* value);
                    [propget] HRESULT CanGoBack([out] [retval] boolean* value);
                    [propget] HRESULT CanGoForward([out] [retval] boolean* value);
                    [propget] HRESULT DocumentTitle([out] [retval] HSTRING* value);
                    [propget] HRESULT ContainsFullScreenElement([out] [retval] boolean* value);
                    [eventadd] HRESULT NavigationStarting([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT NavigationStarting([in] EventRegistrationToken token);
                    [eventadd] HRESULT ContentLoading([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ContentLoading([in] EventRegistrationToken token);
                    [eventadd] HRESULT SourceChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SourceChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT HistoryChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT HistoryChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT NavigationCompleted([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT NavigationCompleted([in] EventRegistrationToken token);
                    [eventadd] HRESULT FrameNavigationStarting([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT FrameNavigationStarting([in] EventRegistrationToken token);
                    [eventadd] HRESULT FrameNavigationCompleted([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT FrameNavigationCompleted([in] EventRegistrationToken token);
                    [eventadd] HRESULT ScriptDialogOpening([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ScriptDialogOpening([in] EventRegistrationToken token);
                    [eventadd] HRESULT PermissionRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PermissionRequested([in] EventRegistrationToken token);
                    [eventadd] HRESULT ProcessFailed([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ProcessFailed([in] EventRegistrationToken token);
                    [eventadd] HRESULT WebMessageReceived([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT WebMessageReceived([in] EventRegistrationToken token);
                    [eventadd] HRESULT NewWindowRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT NewWindowRequested([in] EventRegistrationToken token);
                    [eventadd] HRESULT DocumentTitleChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DocumentTitleChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT ContainsFullScreenElementChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ContainsFullScreenElementChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT WebResourceRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT WebResourceRequested([in] EventRegistrationToken token);
                    [eventadd] HRESULT WindowCloseRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT WindowCloseRequested([in] EventRegistrationToken token);
                    HRESULT Navigate([in] HSTRING uri);
                    HRESULT NavigateToString([in] HSTRING htmlContent);
                    HRESULT AddScriptToExecuteOnDocumentCreatedAsync([in] HSTRING javaScript, [out] [retval] Windows.Foundation.IAsyncOperation<HSTRING>** operation);
                    HRESULT RemoveScriptToExecuteOnDocumentCreated([in] HSTRING id);
                    HRESULT ExecuteScriptAsync([in] HSTRING javaScript, [out] [retval] Windows.Foundation.IAsyncOperation<HSTRING>** operation);
                    HRESULT CapturePreviewAsync([in] Microsoft.Web.WebView2.Core.CoreWebView2CapturePreviewImageFormat imageFormat, [in] Windows.Storage.Streams.IRandomAccessStream* imageStream, [out] [retval] Windows.Foundation.IAsyncAction** operation);
                    HRESULT Reload();
                    HRESULT PostWebMessageAsJson([in] HSTRING webMessageAsJson);
                    HRESULT PostWebMessageAsString([in] HSTRING webMessageAsString);
                    HRESULT CallDevToolsProtocolMethodAsync([in] HSTRING methodName, [in] HSTRING parametersAsJson, [out] [retval] Windows.Foundation.IAsyncOperation<HSTRING>** operation);
                    HRESULT GoBack();
                    HRESULT GoForward();
                    HRESULT GetDevToolsProtocolEventReceiver([in] HSTRING eventName, [out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceiver** result);
                    HRESULT Stop();
                    HRESULT AddHostObjectToScript([in] HSTRING name, [in] IInspectable* rawObject);
                    HRESULT RemoveHostObjectFromScript([in] HSTRING name);
                    HRESULT OpenDevToolsWindow();
                    HRESULT AddWebResourceRequestedFilter([in] HSTRING uri, [in] Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext ResourceContext);
                    HRESULT RemoveWebResourceRequestedFilter([in] HSTRING uri, [in] Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext ResourceContext);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventArgs)]
                [uuid(41A56100-92A5-59D1-9E71-9222E33AE38B)]
                [version(0x00000001)]
                interface ICoreWebView2AcceleratorKeyPressedEventArgs : IInspectable
                {
                    [propget] HRESULT KeyEventKind([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2KeyEventKind* value);
                    [propget] HRESULT VirtualKey([out] [retval] UINT32* value);
                    [propget] HRESULT KeyEventLParam([out] [retval] INT32* value);
                    [propget] HRESULT PhysicalKeyStatus([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2PhysicalKeyStatus* value);
                    [propget] HRESULT Handled([out] [retval] boolean* value);
                    [propput] HRESULT Handled([in] boolean value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventArgs)]
                [uuid(79963F77-1484-5A46-B91F-DFC5C1A0CE14)]
                [version(0x00000001)]
                interface ICoreWebView2BrowserProcessExitedEventArgs : IInspectable
                {
                    [propget] HRESULT BrowserProcessExitKind([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitKind* value);
                    [propget] HRESULT BrowserProcessId([out] [retval] UINT32* value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate)]
                [uuid(091B39F2-68DF-52B4-8FB0-FD3561AF41F2)]
                [version(0x00000001)]
                interface ICoreWebView2ClientCertificate : IInspectable
                {
                    [propget] HRESULT Subject([out] [retval] HSTRING* value);
                    [propget] HRESULT Issuer([out] [retval] HSTRING* value);
                    [propget] HRESULT ValidFrom([out] [retval] DOUBLE* value);
                    [propget] HRESULT ValidTo([out] [retval] DOUBLE* value);
                    [propget] HRESULT DerEncodedSerialNumber([out] [retval] HSTRING* value);
                    [propget] HRESULT DisplayName([out] [retval] HSTRING* value);
                    [propget] HRESULT PemEncodedIssuerCertificateChain([out] [retval] Windows.Foundation.Collections.IVectorView<HSTRING>** value);
                    [propget] HRESULT Kind([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateKind* value);
                    HRESULT ToPemEncoding([out] [retval] HSTRING* result);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventArgs)]
                [uuid(93287B55-31F9-55A0-B68B-D9841D7E1BF4)]
                [version(0x00000001)]
                interface ICoreWebView2ClientCertificateRequestedEventArgs : IInspectable
                {
                    [propget] HRESULT Host([out] [retval] HSTRING* value);
                    [propget] HRESULT Port([out] [retval] INT32* value);
                    [propget] HRESULT IsProxy([out] [retval] boolean* value);
                    [propget] HRESULT AllowedCertificateAuthorities([out] [retval] Windows.Foundation.Collections.IVectorView<HSTRING>** value);
                    [propget] HRESULT MutuallyTrustedCertificates([out] [retval] Windows.Foundation.Collections.IVectorView<Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate*>** value);
                    [propget] HRESULT SelectedCertificate([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate** value);
                    [propput] HRESULT SelectedCertificate([in] Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate* value);
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                    [propget] HRESULT Handled([out] [retval] boolean* value);
                    [propput] HRESULT Handled([in] boolean value);
                    HRESULT GetDeferral([out] [retval] Windows.Foundation.Deferral** result);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2CompositionController)]
                [uuid(4FB8B7B3-4A2E-5787-94B9-CC48C4D364D7)]
                [version(0x00000001)]
                interface ICoreWebView2CompositionController : IInspectable
                {
                    [propget] HRESULT RootVisualTarget([out] [retval] IInspectable** value);
                    [propput] HRESULT RootVisualTarget([in] IInspectable* value);
                    [eventadd] HRESULT CursorChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2CompositionController*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT CursorChanged([in] EventRegistrationToken token);
                    HRESULT SendMouseInput([in] Microsoft.Web.WebView2.Core.CoreWebView2MouseEventKind eventKind, [in] Microsoft.Web.WebView2.Core.CoreWebView2MouseEventVirtualKeys virtualKeys, [in] UINT32 mouseData, [in] Windows.Foundation.Point point);
                    HRESULT SendPointerInput([in] Microsoft.Web.WebView2.Core.CoreWebView2PointerEventKind eventKind, [in] Microsoft.Web.WebView2.Core.CoreWebView2PointerInfo* pointerInfo);
                    [propget] HRESULT Cursor([out] [retval] Windows.UI.Core.CoreCursor** value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2CompositionController)]
                [uuid(8CEF61B9-FA55-547D-AAE6-7BCAED4249A2)]
                [version(0x00000001)]
                interface ICoreWebView2CompositionController2 : IInspectable
                {
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2CompositionController)]
                [uuid(4DF0AB1F-7F2A-573B-B81A-B9B531224736)]
                [version(0x00000001)]
                interface ICoreWebView2CompositionControllerStatics : IInspectable
                {
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs)]
                [uuid(6CF95373-946C-5DAE-9B3E-0FE23D5AA29F)]
                [version(0x00000001)]
                interface ICoreWebView2ContentLoadingEventArgs : IInspectable
                {
                    [propget] HRESULT IsErrorPage([out] [retval] boolean* value);
                    [propget] HRESULT NavigationId([out] [retval] UINT64* value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2Controller)]
                [uuid(A588121C-53BF-590E-80E5-29D729CBD743)]
                [version(0x00000001)]
                interface ICoreWebView2Controller : IInspectable
                {
                    [propget] HRESULT IsVisible([out] [retval] boolean* value);
                    [propput] HRESULT IsVisible([in] boolean value);
                    [propget] HRESULT Bounds([out] [retval] Windows.Foundation.Rect* value);
                    [propput] HRESULT Bounds([in] Windows.Foundation.Rect value);
                    [propget] HRESULT ZoomFactor([out] [retval] DOUBLE* value);
                    [propput] HRESULT ZoomFactor([in] DOUBLE value);
                    [propget] HRESULT ParentWindow([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference** value);
                    [propput] HRESULT ParentWindow([in] Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference* value);
                    [propget] HRESULT CoreWebView2([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2** value);
                    [eventadd] HRESULT ZoomFactorChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Controller*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ZoomFactorChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT MoveFocusRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Controller*, Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT MoveFocusRequested([in] EventRegistrationToken token);
                    [eventadd] HRESULT GotFocus([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Controller*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT GotFocus([in] EventRegistrationToken token);
                    [eventadd] HRESULT LostFocus([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Controller*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT LostFocus([in] EventRegistrationToken token);
                    [eventadd] HRESULT AcceleratorKeyPressed([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Controller*, Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT AcceleratorKeyPressed([in] EventRegistrationToken token);
                    HRESULT SetBoundsAndZoomFactor([in] Windows.Foundation.Rect Bounds, [in] DOUBLE ZoomFactor);
                    HRESULT MoveFocus([in] Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusReason reason);
                    HRESULT NotifyParentWindowPositionChanged();
                    HRESULT Close();
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2Controller)]
                [uuid(0069C40B-2E8A-513F-9D9D-E0C2B64F7200)]
                [version(0x00000001)]
                interface ICoreWebView2Controller2 : IInspectable
                {
                    [propget] HRESULT DefaultBackgroundColor([out] [retval] Windows.UI.Color* value);
                    [propput] HRESULT DefaultBackgroundColor([in] Windows.UI.Color value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2Controller)]
                [uuid(E5BAE214-791A-5D13-9B76-A257D9FDA2AC)]
                [version(0x00000001)]
                interface ICoreWebView2Controller3 : IInspectable
                {
                    [propget] HRESULT RasterizationScale([out] [retval] DOUBLE* value);
                    [propput] HRESULT RasterizationScale([in] DOUBLE value);
                    [propget] HRESULT ShouldDetectMonitorScaleChanges([out] [retval] boolean* value);
                    [propput] HRESULT ShouldDetectMonitorScaleChanges([in] boolean value);
                    [propget] HRESULT BoundsMode([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2BoundsMode* value);
                    [propput] HRESULT BoundsMode([in] Microsoft.Web.WebView2.Core.CoreWebView2BoundsMode value);
                    [eventadd] HRESULT RasterizationScaleChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Controller*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT RasterizationScaleChanged([in] EventRegistrationToken token);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2Controller)]
                [uuid(270B2C5B-C3A9-53D8-A5CA-262EA9EA62E8)]
                [version(0x00000001)]
                interface ICoreWebView2ControllerFactory : IInspectable
                {
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference)]
                [uuid(0FEDDAD4-48A3-5CC4-9F61-E7ADFD1E9C76)]
                [version(0x00000001)]
                interface ICoreWebView2ControllerWindowReference : IInspectable
                {
                    [propget] HRESULT WindowHandle([out] [retval] UINT64* value);
                    [propget] HRESULT CoreWindow([out] [retval] Windows.UI.Core.CoreWindow** value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference)]
                [uuid(DDF6EBF1-EBC6-5A34-9008-661C3A2EB767)]
                [version(0x00000001)]
                interface ICoreWebView2ControllerWindowReferenceStatics : IInspectable
                {
                    HRESULT CreateFromWindowHandle([in] UINT64 windowHandle, [out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference** result);
                    HRESULT CreateFromCoreWindow([in] Windows.UI.Core.CoreWindow* coreWindow, [out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference** result);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2Cookie)]
                [uuid(52F670FE-8CA2-5AAD-AEDB-25F7903B7038)]
                [version(0x00000001)]
                interface ICoreWebView2Cookie : IInspectable
                {
                    [propget] HRESULT Name([out] [retval] HSTRING* value);
                    [propget] HRESULT Value([out] [retval] HSTRING* value);
                    [propput] HRESULT Value([in] HSTRING value);
                    [propget] HRESULT Domain([out] [retval] HSTRING* value);
                    [propget] HRESULT Path([out] [retval] HSTRING* value);
                    [propget] HRESULT Expires([out] [retval] DOUBLE* value);
                    [propput] HRESULT Expires([in] DOUBLE value);
                    [propget] HRESULT IsHttpOnly([out] [retval] boolean* value);
                    [propput] HRESULT IsHttpOnly([in] boolean value);
                    [propget] HRESULT SameSite([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2CookieSameSiteKind* value);
                    [propput] HRESULT SameSite([in] Microsoft.Web.WebView2.Core.CoreWebView2CookieSameSiteKind value);
                    [propget] HRESULT IsSecure([out] [retval] boolean* value);
                    [propput] HRESULT IsSecure([in] boolean value);
                    [propget] HRESULT IsSession([out] [retval] boolean* value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2CookieManager)]
                [uuid(4098F516-ADCA-5563-AAA5-D7AFFD847AA3)]
                [version(0x00000001)]
                interface ICoreWebView2CookieManager : IInspectable
                {
                    HRESULT CreateCookie([in] HSTRING name, [in] HSTRING value, [in] HSTRING Domain, [in] HSTRING Path, [out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2Cookie** result);
                    HRESULT CopyCookie([in] Microsoft.Web.WebView2.Core.CoreWebView2Cookie* cookieParam, [out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2Cookie** result);
                    HRESULT AddOrUpdateCookie([in] Microsoft.Web.WebView2.Core.CoreWebView2Cookie* cookie);
                    HRESULT DeleteCookie([in] Microsoft.Web.WebView2.Core.CoreWebView2Cookie* cookie);
                    HRESULT DeleteCookies([in] HSTRING name, [in] HSTRING uri);
                    HRESULT DeleteCookiesWithDomainAndPath([in] HSTRING name, [in] HSTRING Domain, [in] HSTRING Path);
                    HRESULT DeleteAllCookies();
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs)]
                [uuid(C474D0A3-24AC-59FC-B78B-DA7562A6A052)]
                [version(0x00000001)]
                interface ICoreWebView2DOMContentLoadedEventArgs : IInspectable
                {
                    [propget] HRESULT NavigationId([out] [retval] UINT64* value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventArgs)]
                [uuid(B6A4B41D-FD18-59FA-923A-C57555D960CE)]
                [version(0x00000001)]
                interface ICoreWebView2DevToolsProtocolEventReceivedEventArgs : IInspectable
                {
                    [propget] HRESULT ParameterObjectAsJson([out] [retval] HSTRING* value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceiver)]
                [uuid(B2A2BE79-65FC-5537-8715-3D92BF31090B)]
                [version(0x00000001)]
                interface ICoreWebView2DevToolsProtocolEventReceiver : IInspectable
                {
                    [eventadd] HRESULT DevToolsProtocolEventReceived([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DevToolsProtocolEventReceived([in] EventRegistrationToken token);
                }

                [uuid(7888A42D-18F3-5966-80CB-8CC25351BD0A)]
                [version(0x00000001)]
                interface ICoreWebView2DispatchAdapter : IInspectable
                {
                    HRESULT WrapNamedObject([in] HSTRING name, [in] Microsoft.Web.WebView2.Core.ICoreWebView2DispatchAdapter* adapter, [out] [retval] IInspectable** result);
                    HRESULT WrapObject([in] IInspectable* unwrapped, [in] Microsoft.Web.WebView2.Core.ICoreWebView2DispatchAdapter* adapter, [out] [retval] IInspectable** result);
                    HRESULT UnwrapObject([in] IInspectable* wrapped, [out] [retval] IInspectable** result);
                    HRESULT Clean();
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation)]
                [uuid(AFE73E6B-E760-5A06-9BF6-1E743C13CD2D)]
                [version(0x00000001)]
                interface ICoreWebView2DownloadOperation : IInspectable
                {
                    [propget] HRESULT Uri([out] [retval] HSTRING* value);
                    [propget] HRESULT ContentDisposition([out] [retval] HSTRING* value);
                    [propget] HRESULT MimeType([out] [retval] HSTRING* value);
                    [propget] HRESULT TotalBytesToReceive([out] [retval] INT64* value);
                    [propget] HRESULT BytesReceived([out] [retval] INT64* value);
                    [propget] HRESULT EstimatedEndTime([out] [retval] HSTRING* value);
                    [propget] HRESULT ResultFilePath([out] [retval] HSTRING* value);
                    [propget] HRESULT State([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2DownloadState* value);
                    [propget] HRESULT InterruptReason([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason* value);
                    [propget] HRESULT CanResume([out] [retval] boolean* value);
                    [eventadd] HRESULT BytesReceivedChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT BytesReceivedChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT EstimatedEndTimeChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT EstimatedEndTimeChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT StateChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT StateChanged([in] EventRegistrationToken token);
                    HRESULT Cancel();
                    HRESULT Pause();
                    HRESULT Resume();
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventArgs)]
                [uuid(45D982BA-9256-5B35-B023-26A438599110)]
                [version(0x00000001)]
                interface ICoreWebView2DownloadStartingEventArgs : IInspectable
                {
                    [propget] HRESULT DownloadOperation([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation** value);
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                    [propget] HRESULT ResultFilePath([out] [retval] HSTRING* value);
                    [propput] HRESULT ResultFilePath([in] HSTRING value);
                    [propget] HRESULT Handled([out] [retval] boolean* value);
                    [propput] HRESULT Handled([in] boolean value);
                    HRESULT GetDeferral([out] [retval] Windows.Foundation.Deferral** result);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2Environment)]
                [uuid(D8CC7831-B783-556B-B9CE-899C1E95D585)]
                [version(0x00000001)]
                interface ICoreWebView2Environment : IInspectable
                {
                    [propget] HRESULT BrowserVersionString([out] [retval] HSTRING* value);
                    [eventadd] HRESULT NewBrowserVersionAvailable([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Environment*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT NewBrowserVersionAvailable([in] EventRegistrationToken token);
                    HRESULT CreateCoreWebView2ControllerAsync([in] Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference* ParentWindow, [out] [retval] Windows.Foundation.IAsyncOperation<Microsoft.Web.WebView2.Core.CoreWebView2Controller*>** operation);
                    HRESULT CreateWebResourceResponse([in] Windows.Storage.Streams.IRandomAccessStream* Content, [in] INT32 StatusCode, [in] HSTRING ReasonPhrase, [in] HSTRING Headers, [out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponse** result);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2Environment)]
                [uuid(0B634668-1017-5FC7-9921-F1F51866A8C0)]
                [version(0x00000001)]
                interface ICoreWebView2Environment2 : IInspectable
                {
                    HRESULT CreateWebResourceRequest([in] HSTRING uri, [in] HSTRING Method, [in] Windows.Storage.Streams.IRandomAccessStream* postData, [in] HSTRING Headers, [out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest** result);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2Environment)]
                [uuid(5E33F46C-C0B9-5126-8840-17F9C11B3A8A)]
                [version(0x00000001)]
                interface ICoreWebView2Environment3 : IInspectable
                {
                    HRESULT CreateCoreWebView2CompositionControllerAsync([in] Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference* ParentWindow, [out] [retval] Windows.Foundation.IAsyncOperation<Microsoft.Web.WebView2.Core.CoreWebView2CompositionController*>** operation);
                    HRESULT CreateCoreWebView2PointerInfo([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2PointerInfo** result);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2Environment)]
                [uuid(6DB697DA-EEBD-5818-8790-1FE57EF319E2)]
                [version(0x00000001)]
                interface ICoreWebView2Environment4 : IInspectable
                {
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2Environment)]
                [uuid(F33399AF-E4D3-59DC-AC38-8397AADCEDB1)]
                [version(0x00000001)]
                interface ICoreWebView2Environment5 : IInspectable
                {
                    [eventadd] HRESULT BrowserProcessExited([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Environment*, Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT BrowserProcessExited([in] EventRegistrationToken token);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2Environment)]
                [uuid(965D538F-5958-5D98-8972-F622021DF402)]
                [version(0x00000001)]
                interface ICoreWebView2Environment6 : IInspectable
                {
                    HRESULT CreatePrintSettings([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2PrintSettings** result);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2EnvironmentOptions)]
                [uuid(25D6DC39-0062-5735-8B09-A6F535F19E97)]
                [version(0x00000001)]
                interface ICoreWebView2EnvironmentOptions : IInspectable
                {
                    [propget] HRESULT AdditionalBrowserArguments([out] [retval] HSTRING* value);
                    [propput] HRESULT AdditionalBrowserArguments([in] HSTRING value);
                    [propget] HRESULT Language([out] [retval] HSTRING* value);
                    [propput] HRESULT Language([in] HSTRING value);
                    [propget] HRESULT TargetCompatibleBrowserVersion([out] [retval] HSTRING* value);
                    [propput] HRESULT TargetCompatibleBrowserVersion([in] HSTRING value);
                    [propget] HRESULT AllowSingleSignOnUsingOSPrimaryAccount([out] [retval] boolean* value);
                    [propput] HRESULT AllowSingleSignOnUsingOSPrimaryAccount([in] boolean value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2EnvironmentOptions)]
                [uuid(1F104443-EA93-5A37-B791-34E6A31172ED)]
                [version(0x00000001)]
                interface ICoreWebView2EnvironmentOptions_Manual : IInspectable
                {
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2Environment)]
                [uuid(0E33F804-F20B-5635-8491-162AAA27517B)]
                [version(0x00000001)]
                interface ICoreWebView2EnvironmentStatics : IInspectable
                {
                    HRESULT CreateAsync([out] [retval] Windows.Foundation.IAsyncOperation<Microsoft.Web.WebView2.Core.CoreWebView2Environment*>** operation);
                    HRESULT CreateWithOptionsAsync([in] HSTRING browserExecutableFolder, [in] HSTRING userDataFolder, [in] Microsoft.Web.WebView2.Core.CoreWebView2EnvironmentOptions* options, [out] [retval] Windows.Foundation.IAsyncOperation<Microsoft.Web.WebView2.Core.CoreWebView2Environment*>** operation);
                    [overload("GetAvailableBrowserVersionString")] HRESULT GetAvailableBrowserVersionString([out] [retval] HSTRING* result);
                    [overload("GetAvailableBrowserVersionString")] HRESULT GetAvailableBrowserVersionString2([in] HSTRING browserExecutableFolder, [out] [retval] HSTRING* result);
                    HRESULT CompareBrowserVersionString([in] HSTRING browserVersionString1, [in] HSTRING browserVersionString2, [out] [retval] INT32* result);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2Frame)]
                [uuid(02FFCBF9-19E7-5BB8-8273-346420FB1503)]
                [version(0x00000001)]
                interface ICoreWebView2Frame : IInspectable
                {
                    [propget] HRESULT Name([out] [retval] HSTRING* value);
                    [eventadd] HRESULT NameChanged([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Frame*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT NameChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT Destroyed([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Frame*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Destroyed([in] EventRegistrationToken token);
                    HRESULT RemoveHostObjectFromScript([in] HSTRING name);
                    HRESULT IsDestroyed([out] [retval] INT32* result);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgs)]
                [uuid(527B01B8-FC6D-5543-8DCE-96CDFDB32C81)]
                [version(0x00000001)]
                interface ICoreWebView2FrameCreatedEventArgs : IInspectable
                {
                    [propget] HRESULT Frame([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2Frame** value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2FrameInfo)]
                [uuid(F9B82E06-73F3-513B-BC2C-445DDEDBA976)]
                [version(0x00000001)]
                interface ICoreWebView2FrameInfo : IInspectable
                {
                    [propget] HRESULT Name([out] [retval] HSTRING* value);
                    [propget] HRESULT Source([out] [retval] HSTRING* value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2HttpHeadersCollectionIterator)]
                [uuid(ADF264EE-D980-5F48-A60E-8705DE046608)]
                [version(0x00000001)]
                interface ICoreWebView2HttpHeadersCollectionIterator : IInspectable
                {
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2HttpRequestHeaders)]
                [uuid(DC2226C7-3515-55BB-BCB2-57B78F86B91D)]
                [version(0x00000001)]
                interface ICoreWebView2HttpRequestHeaders : IInspectable
                {
                    HRESULT GetHeader([in] HSTRING name, [out] [retval] HSTRING* result);
                    HRESULT GetHeaders([in] HSTRING name, [out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2HttpHeadersCollectionIterator** result);
                    HRESULT Contains([in] HSTRING name, [out] [retval] boolean* result);
                    HRESULT SetHeader([in] HSTRING name, [in] HSTRING value);
                    HRESULT RemoveHeader([in] HSTRING name);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2HttpResponseHeaders)]
                [uuid(F3D383E9-747F-5574-8662-9A6B920CECD4)]
                [version(0x00000001)]
                interface ICoreWebView2HttpResponseHeaders : IInspectable
                {
                    HRESULT AppendHeader([in] HSTRING name, [in] HSTRING value);
                    HRESULT Contains([in] HSTRING name, [out] [retval] boolean* result);
                    HRESULT GetHeader([in] HSTRING name, [out] [retval] HSTRING* result);
                    HRESULT GetHeaders([in] HSTRING name, [out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2HttpHeadersCollectionIterator** result);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventArgs)]
                [uuid(2E29103B-ECDD-5C1D-B288-3F066D608919)]
                [version(0x00000001)]
                interface ICoreWebView2MoveFocusRequestedEventArgs : IInspectable
                {
                    [propget] HRESULT Reason([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusReason* value);
                    [propget] HRESULT Handled([out] [retval] boolean* value);
                    [propput] HRESULT Handled([in] boolean value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs)]
                [uuid(4865E238-036A-5664-95A3-447EC44CF498)]
                [version(0x00000001)]
                interface ICoreWebView2NavigationCompletedEventArgs : IInspectable
                {
                    [propget] HRESULT IsSuccess([out] [retval] boolean* value);
                    [propget] HRESULT WebErrorStatus([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus* value);
                    [propget] HRESULT NavigationId([out] [retval] UINT64* value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs)]
                [uuid(548D23D3-FEA3-5616-BD05-AE08066C86D3)]
                [version(0x00000001)]
                interface ICoreWebView2NavigationStartingEventArgs : IInspectable
                {
                    [propget] HRESULT Uri([out] [retval] HSTRING* value);
                    [propget] HRESULT IsUserInitiated([out] [retval] boolean* value);
                    [propget] HRESULT IsRedirected([out] [retval] boolean* value);
                    [propget] HRESULT RequestHeaders([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2HttpRequestHeaders** value);
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                    [propget] HRESULT NavigationId([out] [retval] UINT64* value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs)]
                [uuid(E6E013BA-AEC8-532E-9AC9-1590AF7B25EC)]
                [version(0x00000001)]
                interface ICoreWebView2NewWindowRequestedEventArgs : IInspectable
                {
                    [propget] HRESULT Uri([out] [retval] HSTRING* value);
                    [propget] HRESULT NewWindow([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2** value);
                    [propput] HRESULT NewWindow([in] Microsoft.Web.WebView2.Core.CoreWebView2* value);
                    [propget] HRESULT Handled([out] [retval] boolean* value);
                    [propput] HRESULT Handled([in] boolean value);
                    [propget] HRESULT IsUserInitiated([out] [retval] boolean* value);
                    [propget] HRESULT WindowFeatures([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures** value);
                    HRESULT GetDeferral([out] [retval] Windows.Foundation.Deferral** result);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs)]
                [uuid(F4806259-E63A-5C0B-A02C-5F10E11094F4)]
                [version(0x00000001)]
                interface ICoreWebView2NewWindowRequestedEventArgs2 : IInspectable
                {
                    [propget] HRESULT Name([out] [retval] HSTRING* value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs)]
                [uuid(118BDD9B-CEF1-5910-929E-C1A321328239)]
                [version(0x00000001)]
                interface ICoreWebView2PermissionRequestedEventArgs : IInspectable
                {
                    [propget] HRESULT Uri([out] [retval] HSTRING* value);
                    [propget] HRESULT PermissionKind([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2PermissionKind* value);
                    [propget] HRESULT IsUserInitiated([out] [retval] boolean* value);
                    [propget] HRESULT State([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2PermissionState* value);
                    [propput] HRESULT State([in] Microsoft.Web.WebView2.Core.CoreWebView2PermissionState value);
                    HRESULT GetDeferral([out] [retval] Windows.Foundation.Deferral** result);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2PointerInfo)]
                [uuid(C3860E0D-C018-5A84-BC06-9F8F7B275DFF)]
                [version(0x00000001)]
                interface ICoreWebView2PointerInfo : IInspectable
                {
                    [propget] HRESULT PointerKind([out] [retval] UINT32* value);
                    [propput] HRESULT PointerKind([in] UINT32 value);
                    [propget] HRESULT PointerId([out] [retval] UINT32* value);
                    [propput] HRESULT PointerId([in] UINT32 value);
                    [propget] HRESULT FrameId([out] [retval] UINT32* value);
                    [propput] HRESULT FrameId([in] UINT32 value);
                    [propget] HRESULT PointerFlags([out] [retval] UINT32* value);
                    [propput] HRESULT PointerFlags([in] UINT32 value);
                    [propget] HRESULT PointerDeviceRect([out] [retval] Windows.Foundation.Rect* value);
                    [propput] HRESULT PointerDeviceRect([in] Windows.Foundation.Rect value);
                    [propget] HRESULT DisplayRect([out] [retval] Windows.Foundation.Rect* value);
                    [propput] HRESULT DisplayRect([in] Windows.Foundation.Rect value);
                    [propget] HRESULT PixelLocation([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT PixelLocation([in] Windows.Foundation.Point value);
                    [propget] HRESULT HimetricLocation([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT HimetricLocation([in] Windows.Foundation.Point value);
                    [propget] HRESULT PixelLocationRaw([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT PixelLocationRaw([in] Windows.Foundation.Point value);
                    [propget] HRESULT HimetricLocationRaw([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT HimetricLocationRaw([in] Windows.Foundation.Point value);
                    [propget] HRESULT Time([out] [retval] UINT32* value);
                    [propput] HRESULT Time([in] UINT32 value);
                    [propget] HRESULT HistoryCount([out] [retval] UINT32* value);
                    [propput] HRESULT HistoryCount([in] UINT32 value);
                    [propget] HRESULT InputData([out] [retval] INT32* value);
                    [propput] HRESULT InputData([in] INT32 value);
                    [propget] HRESULT KeyStates([out] [retval] UINT32* value);
                    [propput] HRESULT KeyStates([in] UINT32 value);
                    [propget] HRESULT PerformanceCount([out] [retval] UINT64* value);
                    [propput] HRESULT PerformanceCount([in] UINT64 value);
                    [propget] HRESULT ButtonChangeKind([out] [retval] INT32* value);
                    [propput] HRESULT ButtonChangeKind([in] INT32 value);
                    [propget] HRESULT PenFlags([out] [retval] UINT32* value);
                    [propput] HRESULT PenFlags([in] UINT32 value);
                    [propget] HRESULT PenMask([out] [retval] UINT32* value);
                    [propput] HRESULT PenMask([in] UINT32 value);
                    [propget] HRESULT PenPressure([out] [retval] UINT32* value);
                    [propput] HRESULT PenPressure([in] UINT32 value);
                    [propget] HRESULT PenRotation([out] [retval] UINT32* value);
                    [propput] HRESULT PenRotation([in] UINT32 value);
                    [propget] HRESULT PenTiltX([out] [retval] INT32* value);
                    [propput] HRESULT PenTiltX([in] INT32 value);
                    [propget] HRESULT PenTiltY([out] [retval] INT32* value);
                    [propput] HRESULT PenTiltY([in] INT32 value);
                    [propget] HRESULT TouchFlags([out] [retval] UINT32* value);
                    [propput] HRESULT TouchFlags([in] UINT32 value);
                    [propget] HRESULT TouchMask([out] [retval] UINT32* value);
                    [propput] HRESULT TouchMask([in] UINT32 value);
                    [propget] HRESULT TouchContact([out] [retval] Windows.Foundation.Rect* value);
                    [propput] HRESULT TouchContact([in] Windows.Foundation.Rect value);
                    [propget] HRESULT TouchContactRaw([out] [retval] Windows.Foundation.Rect* value);
                    [propput] HRESULT TouchContactRaw([in] Windows.Foundation.Rect value);
                    [propget] HRESULT TouchOrientation([out] [retval] UINT32* value);
                    [propput] HRESULT TouchOrientation([in] UINT32 value);
                    [propget] HRESULT TouchPressure([out] [retval] UINT32* value);
                    [propput] HRESULT TouchPressure([in] UINT32 value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2PrintSettings)]
                [uuid(9C75C8C0-EF3D-58A8-9A8C-18EED9FD0F16)]
                [version(0x00000001)]
                interface ICoreWebView2PrintSettings : IInspectable
                {
                    [propget] HRESULT Orientation([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2PrintOrientation* value);
                    [propput] HRESULT Orientation([in] Microsoft.Web.WebView2.Core.CoreWebView2PrintOrientation value);
                    [propget] HRESULT ScaleFactor([out] [retval] DOUBLE* value);
                    [propput] HRESULT ScaleFactor([in] DOUBLE value);
                    [propget] HRESULT PageWidth([out] [retval] DOUBLE* value);
                    [propput] HRESULT PageWidth([in] DOUBLE value);
                    [propget] HRESULT PageHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT PageHeight([in] DOUBLE value);
                    [propget] HRESULT MarginTop([out] [retval] DOUBLE* value);
                    [propput] HRESULT MarginTop([in] DOUBLE value);
                    [propget] HRESULT MarginBottom([out] [retval] DOUBLE* value);
                    [propput] HRESULT MarginBottom([in] DOUBLE value);
                    [propget] HRESULT MarginLeft([out] [retval] DOUBLE* value);
                    [propput] HRESULT MarginLeft([in] DOUBLE value);
                    [propget] HRESULT MarginRight([out] [retval] DOUBLE* value);
                    [propput] HRESULT MarginRight([in] DOUBLE value);
                    [propget] HRESULT ShouldPrintBackgrounds([out] [retval] boolean* value);
                    [propput] HRESULT ShouldPrintBackgrounds([in] boolean value);
                    [propget] HRESULT ShouldPrintSelectionOnly([out] [retval] boolean* value);
                    [propput] HRESULT ShouldPrintSelectionOnly([in] boolean value);
                    [propget] HRESULT ShouldPrintHeaderAndFooter([out] [retval] boolean* value);
                    [propput] HRESULT ShouldPrintHeaderAndFooter([in] boolean value);
                    [propget] HRESULT HeaderTitle([out] [retval] HSTRING* value);
                    [propput] HRESULT HeaderTitle([in] HSTRING value);
                    [propget] HRESULT FooterUri([out] [retval] HSTRING* value);
                    [propput] HRESULT FooterUri([in] HSTRING value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs)]
                [uuid(25A8F8C9-D944-539D-AFA3-24172B48EF47)]
                [version(0x00000001)]
                interface ICoreWebView2ProcessFailedEventArgs : IInspectable
                {
                    [propget] HRESULT ProcessFailedKind([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedKind* value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs)]
                [uuid(C5D9C952-B456-5DC7-9F76-FDE967484AF5)]
                [version(0x00000001)]
                interface ICoreWebView2ProcessFailedEventArgs2 : IInspectable
                {
                    [propget] HRESULT Reason([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedReason* value);
                    [propget] HRESULT ExitCode([out] [retval] INT32* value);
                    [propget] HRESULT ProcessDescription([out] [retval] HSTRING* value);
                    [propget] HRESULT FrameInfosForFailedProcess([out] [retval] Windows.Foundation.Collections.IVectorView<Microsoft.Web.WebView2.Core.CoreWebView2FrameInfo*>** value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventArgs)]
                [uuid(A4315212-C7EB-568A-86E4-C61E31BA6CDA)]
                [version(0x00000001)]
                interface ICoreWebView2ScriptDialogOpeningEventArgs : IInspectable
                {
                    [propget] HRESULT Uri([out] [retval] HSTRING* value);
                    [propget] HRESULT Kind([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogKind* value);
                    [propget] HRESULT Message([out] [retval] HSTRING* value);
                    [propget] HRESULT DefaultText([out] [retval] HSTRING* value);
                    [propget] HRESULT ResultText([out] [retval] HSTRING* value);
                    [propput] HRESULT ResultText([in] HSTRING value);
                    HRESULT Accept();
                    HRESULT GetDeferral([out] [retval] Windows.Foundation.Deferral** result);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2Settings)]
                [uuid(003B325E-74CD-52DD-8024-EBB8BE38E48E)]
                [version(0x00000001)]
                interface ICoreWebView2Settings : IInspectable
                {
                    [propget] HRESULT IsScriptEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsScriptEnabled([in] boolean value);
                    [propget] HRESULT IsWebMessageEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsWebMessageEnabled([in] boolean value);
                    [propget] HRESULT AreDefaultScriptDialogsEnabled([out] [retval] boolean* value);
                    [propput] HRESULT AreDefaultScriptDialogsEnabled([in] boolean value);
                    [propget] HRESULT IsStatusBarEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsStatusBarEnabled([in] boolean value);
                    [propget] HRESULT AreDevToolsEnabled([out] [retval] boolean* value);
                    [propput] HRESULT AreDevToolsEnabled([in] boolean value);
                    [propget] HRESULT AreDefaultContextMenusEnabled([out] [retval] boolean* value);
                    [propput] HRESULT AreDefaultContextMenusEnabled([in] boolean value);
                    [propget] HRESULT AreHostObjectsAllowed([out] [retval] boolean* value);
                    [propput] HRESULT AreHostObjectsAllowed([in] boolean value);
                    [propget] HRESULT IsZoomControlEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsZoomControlEnabled([in] boolean value);
                    [propget] HRESULT IsBuiltInErrorPageEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsBuiltInErrorPageEnabled([in] boolean value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2Settings)]
                [uuid(377D3480-FDB2-56E7-BADE-507D352887E9)]
                [version(0x00000001)]
                interface ICoreWebView2Settings2 : IInspectable
                {
                    [propget] HRESULT UserAgent([out] [retval] HSTRING* value);
                    [propput] HRESULT UserAgent([in] HSTRING value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2Settings)]
                [uuid(52200F01-5309-5B2E-A03C-3D2677591940)]
                [version(0x00000001)]
                interface ICoreWebView2Settings3 : IInspectable
                {
                    [propget] HRESULT AreBrowserAcceleratorKeysEnabled([out] [retval] boolean* value);
                    [propput] HRESULT AreBrowserAcceleratorKeysEnabled([in] boolean value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2Settings)]
                [uuid(D6A955F0-DAEF-5A6A-A6F6-C72F0EDE7620)]
                [version(0x00000001)]
                interface ICoreWebView2Settings4 : IInspectable
                {
                    [propget] HRESULT IsPasswordAutosaveEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsPasswordAutosaveEnabled([in] boolean value);
                    [propget] HRESULT IsGeneralAutofillEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsGeneralAutofillEnabled([in] boolean value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2Settings)]
                [uuid(AFC42B23-4839-5D73-ACF7-E0335631ABF5)]
                [version(0x00000001)]
                interface ICoreWebView2Settings5 : IInspectable
                {
                    [propget] HRESULT IsPinchZoomEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsPinchZoomEnabled([in] boolean value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2Settings)]
                [uuid(3FE4AE85-0540-5BF1-B4D9-99EC57AA64F5)]
                [version(0x00000001)]
                interface ICoreWebView2Settings6 : IInspectable
                {
                    [propget] HRESULT IsSwipeNavigationEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsSwipeNavigationEnabled([in] boolean value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2Settings)]
                [uuid(0A538C87-E000-511C-87CA-DED3413D03DA)]
                [version(0x00000001)]
                interface ICoreWebView2Settings_Manual : IInspectable
                {
                    [propget] HRESULT HostObjectDispatchAdapter([out] [retval] Microsoft.Web.WebView2.Core.ICoreWebView2DispatchAdapter** value);
                    [propput] HRESULT HostObjectDispatchAdapter([in] Microsoft.Web.WebView2.Core.ICoreWebView2DispatchAdapter* value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventArgs)]
                [uuid(CA437B2C-6A18-5552-B749-B198F8CC34D9)]
                [version(0x00000001)]
                interface ICoreWebView2SourceChangedEventArgs : IInspectable
                {
                    [propget] HRESULT IsNewDocument([out] [retval] boolean* value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs)]
                [uuid(EB066159-B725-5D5B-ADC8-F5D7B9290304)]
                [version(0x00000001)]
                interface ICoreWebView2WebMessageReceivedEventArgs : IInspectable
                {
                    [propget] HRESULT Source([out] [retval] HSTRING* value);
                    [propget] HRESULT WebMessageAsJson([out] [retval] HSTRING* value);
                    HRESULT TryGetWebMessageAsString([out] [retval] HSTRING* result);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest)]
                [uuid(5C742259-67D2-5DF2-8382-0F201B4D7197)]
                [version(0x00000001)]
                interface ICoreWebView2WebResourceRequest : IInspectable
                {
                    [propget] HRESULT Uri([out] [retval] HSTRING* value);
                    [propput] HRESULT Uri([in] HSTRING value);
                    [propget] HRESULT Method([out] [retval] HSTRING* value);
                    [propput] HRESULT Method([in] HSTRING value);
                    [propget] HRESULT Content([out] [retval] Windows.Storage.Streams.IRandomAccessStream** value);
                    [propput] HRESULT Content([in] Windows.Storage.Streams.IRandomAccessStream* value);
                    [propget] HRESULT Headers([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2HttpRequestHeaders** value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventArgs)]
                [uuid(577F1FC4-C943-54A9-9700-BD469B48BD41)]
                [version(0x00000001)]
                interface ICoreWebView2WebResourceRequestedEventArgs : IInspectable
                {
                    [propget] HRESULT Request([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest** value);
                    [propget] HRESULT Response([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponse** value);
                    [propput] HRESULT Response([in] Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponse* value);
                    [propget] HRESULT ResourceContext([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext* value);
                    HRESULT GetDeferral([out] [retval] Windows.Foundation.Deferral** result);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponse)]
                [uuid(14621923-E485-5F44-8F5D-BD4243BC398F)]
                [version(0x00000001)]
                interface ICoreWebView2WebResourceResponse : IInspectable
                {
                    [propget] HRESULT Content([out] [retval] Windows.Storage.Streams.IRandomAccessStream** value);
                    [propput] HRESULT Content([in] Windows.Storage.Streams.IRandomAccessStream* value);
                    [propget] HRESULT Headers([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2HttpResponseHeaders** value);
                    [propget] HRESULT StatusCode([out] [retval] INT32* value);
                    [propput] HRESULT StatusCode([in] INT32 value);
                    [propget] HRESULT ReasonPhrase([out] [retval] HSTRING* value);
                    [propput] HRESULT ReasonPhrase([in] HSTRING value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventArgs)]
                [uuid(12424671-9711-54F4-BCDF-5F307ADD6EC2)]
                [version(0x00000001)]
                interface ICoreWebView2WebResourceResponseReceivedEventArgs : IInspectable
                {
                    [propget] HRESULT Request([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest** value);
                    [propget] HRESULT Response([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseView** value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseView)]
                [uuid(33EE060B-B578-5698-B541-FEF87FE7FE72)]
                [version(0x00000001)]
                interface ICoreWebView2WebResourceResponseView : IInspectable
                {
                    [propget] HRESULT Headers([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2HttpResponseHeaders** value);
                    [propget] HRESULT StatusCode([out] [retval] INT32* value);
                    [propget] HRESULT ReasonPhrase([out] [retval] HSTRING* value);
                    HRESULT GetContentAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Storage.Streams.IRandomAccessStream*>** operation);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures)]
                [uuid(EE8686D6-056F-5E06-824F-4E2A24C1C1D6)]
                [version(0x00000001)]
                interface ICoreWebView2WindowFeatures : IInspectable
                {
                    [propget] HRESULT HasPosition([out] [retval] boolean* value);
                    [propget] HRESULT HasSize([out] [retval] boolean* value);
                    [propget] HRESULT Left([out] [retval] UINT32* value);
                    [propget] HRESULT Top([out] [retval] UINT32* value);
                    [propget] HRESULT Height([out] [retval] UINT32* value);
                    [propget] HRESULT Width([out] [retval] UINT32* value);
                    [propget] HRESULT ShouldDisplayMenuBar([out] [retval] boolean* value);
                    [propget] HRESULT ShouldDisplayStatus([out] [retval] boolean* value);
                    [propget] HRESULT ShouldDisplayToolbar([out] [retval] boolean* value);
                    [propget] HRESULT ShouldDisplayScrollBars([out] [retval] boolean* value);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2)]
                [uuid(578CB133-2873-5408-BD9E-389BBE9FA7FA)]
                [version(0x00000001)]
                interface ICoreWebView2_2 : IInspectable
                {
                    [propget] HRESULT CookieManager([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2CookieManager** value);
                    [propget] HRESULT Environment([out] [retval] Microsoft.Web.WebView2.Core.CoreWebView2Environment** value);
                    [eventadd] HRESULT WebResourceResponseReceived([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT WebResourceResponseReceived([in] EventRegistrationToken token);
                    [eventadd] HRESULT DOMContentLoaded([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DOMContentLoaded([in] EventRegistrationToken token);
                    HRESULT NavigateWithWebResourceRequest([in] Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest* Request);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2)]
                [uuid(A8C76AE7-6170-5DFE-8F00-79CD76A9B4D9)]
                [version(0x00000001)]
                interface ICoreWebView2_3 : IInspectable
                {
                    [propget] HRESULT IsSuspended([out] [retval] boolean* value);
                    HRESULT TrySuspendAsync([out] [retval] Windows.Foundation.IAsyncOperation<boolean>** operation);
                    HRESULT Resume();
                    HRESULT SetVirtualHostNameToFolderMapping([in] HSTRING hostName, [in] HSTRING folderPath, [in] Microsoft.Web.WebView2.Core.CoreWebView2HostResourceAccessKind accessKind);
                    HRESULT ClearVirtualHostNameToFolderMapping([in] HSTRING hostName);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2)]
                [uuid(4AC595CE-1502-5775-B2C8-22C11A369C25)]
                [version(0x00000001)]
                interface ICoreWebView2_4 : IInspectable
                {
                    [eventadd] HRESULT FrameCreated([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT FrameCreated([in] EventRegistrationToken token);
                    [eventadd] HRESULT DownloadStarting([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT DownloadStarting([in] EventRegistrationToken token);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2)]
                [uuid(DD6AF643-220C-5DC6-B0A8-22C41E472595)]
                [version(0x00000001)]
                interface ICoreWebView2_5 : IInspectable
                {
                    [eventadd] HRESULT ClientCertificateRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2*, Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ClientCertificateRequested([in] EventRegistrationToken token);
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2)]
                [uuid(92B34B96-853D-5BB6-AC52-30297CE805F1)]
                [version(0x00000001)]
                interface ICoreWebView2_6 : IInspectable
                {
                    HRESULT OpenTaskManagerWindow();
                }

                [exclusiveto(Microsoft.Web.WebView2.Core.CoreWebView2)]
                [uuid(F9B7107A-2E09-5596-A033-911BA12315F7)]
                [version(0x00000001)]
                interface ICoreWebView2_7 : IInspectable
                {
                    HRESULT PrintToPdfAsync([in] HSTRING ResultFilePath, [in] Microsoft.Web.WebView2.Core.CoreWebView2PrintSettings* printSettings, [out] [retval] Windows.Foundation.IAsyncOperation<boolean>** operation);
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2
                {
                    interface Microsoft.Web.WebView2.Core.ICoreWebView2_2;
                    interface Microsoft.Web.WebView2.Core.ICoreWebView2_3;
                    interface Microsoft.Web.WebView2.Core.ICoreWebView2_4;
                    interface Microsoft.Web.WebView2.Core.ICoreWebView2_5;
                    interface Microsoft.Web.WebView2.Core.ICoreWebView2_6;
                    interface Microsoft.Web.WebView2.Core.ICoreWebView2_7;
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2AcceleratorKeyPressedEventArgs
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2AcceleratorKeyPressedEventArgs;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2BrowserProcessExitedEventArgs
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2BrowserProcessExitedEventArgs;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2ClientCertificate
                {
                    interface Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate_Manual;
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificate;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2ClientCertificateRequestedEventArgs
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificateRequestedEventArgs;
                }

                [marshaling_behavior(agile)]
                [static(Microsoft.Web.WebView2.Core.ICoreWebView2CompositionControllerStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass CoreWebView2CompositionController : Microsoft.Web.WebView2.Core.CoreWebView2Controller
                {
                    interface Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController2;
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2ContentLoadingEventArgs
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2ContentLoadingEventArgs;
                }

                [composable(Microsoft.Web.WebView2.Core.ICoreWebView2ControllerFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass CoreWebView2Controller
                {
                    interface Microsoft.Web.WebView2.Core.ICoreWebView2Controller2;
                    interface Microsoft.Web.WebView2.Core.ICoreWebView2Controller3;
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2Controller;
                }

                [marshaling_behavior(agile)]
                [static(Microsoft.Web.WebView2.Core.ICoreWebView2ControllerWindowReferenceStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass CoreWebView2ControllerWindowReference
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2ControllerWindowReference;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2Cookie
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2Cookie;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2CookieManager
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2CookieManager;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2DOMContentLoadedEventArgs
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2DOMContentLoadedEventArgs;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2DevToolsProtocolEventReceivedEventArgs
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2DevToolsProtocolEventReceivedEventArgs;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2DevToolsProtocolEventReceiver
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2DevToolsProtocolEventReceiver;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2DownloadOperation
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperation;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2DownloadStartingEventArgs
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2DownloadStartingEventArgs;
                }

                [marshaling_behavior(agile)]
                [static(Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass CoreWebView2Environment
                {
                    interface Microsoft.Web.WebView2.Core.ICoreWebView2Environment2;
                    interface Microsoft.Web.WebView2.Core.ICoreWebView2Environment3;
                    interface Microsoft.Web.WebView2.Core.ICoreWebView2Environment4;
                    interface Microsoft.Web.WebView2.Core.ICoreWebView2Environment5;
                    interface Microsoft.Web.WebView2.Core.ICoreWebView2Environment6;
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2Environment;
                }

                [activatable(0x00000001)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass CoreWebView2EnvironmentOptions
                {
                    interface Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions_Manual;
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2Frame
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2Frame;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2FrameCreatedEventArgs
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2FrameCreatedEventArgs;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2FrameInfo
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2FrameInfo;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2HttpHeadersCollectionIterator
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2HttpHeadersCollectionIterator;
                    interface Windows.Foundation.Collections.IIterator<Windows.Foundation.Collections.IKeyValuePair<HSTRING, HSTRING>*>;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2HttpRequestHeaders
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2HttpRequestHeaders;
                    interface Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<HSTRING, HSTRING>*>;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2HttpResponseHeaders
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2HttpResponseHeaders;
                    interface Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<HSTRING, HSTRING>*>;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2MoveFocusRequestedEventArgs
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2MoveFocusRequestedEventArgs;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2NavigationCompletedEventArgs
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2NavigationCompletedEventArgs;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2NavigationStartingEventArgs
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgs;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2NewWindowRequestedEventArgs
                {
                    interface Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs2;
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2PermissionRequestedEventArgs
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2PermissionRequestedEventArgs;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2PointerInfo
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2PrintSettings
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2ProcessFailedEventArgs
                {
                    interface Microsoft.Web.WebView2.Core.ICoreWebView2ProcessFailedEventArgs2;
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2ProcessFailedEventArgs;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2ScriptDialogOpeningEventArgs
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2ScriptDialogOpeningEventArgs;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2Settings
                {
                    interface Microsoft.Web.WebView2.Core.ICoreWebView2Settings2;
                    interface Microsoft.Web.WebView2.Core.ICoreWebView2Settings3;
                    interface Microsoft.Web.WebView2.Core.ICoreWebView2Settings4;
                    interface Microsoft.Web.WebView2.Core.ICoreWebView2Settings5;
                    interface Microsoft.Web.WebView2.Core.ICoreWebView2Settings6;
                    interface Microsoft.Web.WebView2.Core.ICoreWebView2Settings_Manual;
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2Settings;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2SourceChangedEventArgs
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2SourceChangedEventArgs;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2WebMessageReceivedEventArgs
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2WebMessageReceivedEventArgs;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2WebResourceRequest
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequest;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2WebResourceRequestedEventArgs
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequestedEventArgs;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2WebResourceResponse
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponse;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2WebResourceResponseReceivedEventArgs
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponseReceivedEventArgs;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2WebResourceResponseView
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponseView;
                }

                [marshaling_behavior(agile)]
                [version(0x00000001)]
                runtimeclass CoreWebView2WindowFeatures
                {
                    [default] interface Microsoft.Web.WebView2.Core.ICoreWebView2WindowFeatures;
                }
            }
        }
    }
}
